/**
 * Function to help with focus management for selectable table cells.
 * @param {Object} key - React `event.key`.
 * @param {Element} ref - the cell to manage focus interaction for.
 */
export default function manageTableCellFocusInteraction(key, ref) {
  var tableRowChildren = Array.from(ref.parentElement.children);
  var columnIndex = tableRowChildren.indexOf(ref);
  var nextItemToFocus;

  if (key === 'ArrowLeft' || key === 'ArrowRight') {
    if (key === 'ArrowLeft' && columnIndex - 1 >= 0) {
      nextItemToFocus = tableRowChildren[columnIndex - 1];
    } else if (key === 'ArrowRight' && columnIndex + 1 < tableRowChildren.length) {
      nextItemToFocus = tableRowChildren[columnIndex + 1];
    }
  } else if (key === 'ArrowUp' || key === 'ArrowDown') {
    var tableBodyChildren = Array.from(ref.parentElement.parentElement.children);
    var rowIndex = tableBodyChildren.indexOf(ref.parentElement);
    var nextRow;

    if (key === 'ArrowUp' && rowIndex - 1 >= 0) {
      nextRow = tableBodyChildren[rowIndex - 1];
    } else if (key === 'ArrowDown' && rowIndex + 1 < tableBodyChildren.length) {
      nextRow = tableBodyChildren[rowIndex + 1];
    }

    if (nextRow && nextRow.children) {
      nextItemToFocus = nextRow.children[columnIndex];
    }
  }

  if (nextItemToFocus && nextItemToFocus.hasAttribute('tabindex')) {
    nextItemToFocus.focus();
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJsZS9zcmMvbWFuYWdlVGFibGVDZWxsRm9jdXNJbnRlcmFjdGlvbi5qcyJdLCJuYW1lcyI6WyJtYW5hZ2VUYWJsZUNlbGxGb2N1c0ludGVyYWN0aW9uIiwia2V5IiwicmVmIiwidGFibGVSb3dDaGlsZHJlbiIsIkFycmF5IiwiZnJvbSIsInBhcmVudEVsZW1lbnQiLCJjaGlsZHJlbiIsImNvbHVtbkluZGV4IiwiaW5kZXhPZiIsIm5leHRJdGVtVG9Gb2N1cyIsImxlbmd0aCIsInRhYmxlQm9keUNoaWxkcmVuIiwicm93SW5kZXgiLCJuZXh0Um93IiwiaGFzQXR0cmlidXRlIiwiZm9jdXMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVNBLCtCQUFULENBQXlDQyxHQUF6QyxFQUE4Q0MsR0FBOUMsRUFBbUQ7QUFDaEUsTUFBTUMsZ0JBQWdCLEdBQUdDLEtBQUssQ0FBQ0MsSUFBTixDQUFXSCxHQUFHLENBQUNJLGFBQUosQ0FBa0JDLFFBQTdCLENBQXpCO0FBQ0EsTUFBTUMsV0FBVyxHQUFHTCxnQkFBZ0IsQ0FBQ00sT0FBakIsQ0FBeUJQLEdBQXpCLENBQXBCO0FBRUEsTUFBSVEsZUFBSjs7QUFDQSxNQUFJVCxHQUFHLEtBQUssV0FBUixJQUF1QkEsR0FBRyxLQUFLLFlBQW5DLEVBQWlEO0FBQy9DLFFBQUlBLEdBQUcsS0FBSyxXQUFSLElBQXVCTyxXQUFXLEdBQUcsQ0FBZCxJQUFtQixDQUE5QyxFQUFpRDtBQUMvQ0UsTUFBQUEsZUFBZSxHQUFHUCxnQkFBZ0IsQ0FBQ0ssV0FBVyxHQUFHLENBQWYsQ0FBbEM7QUFDRCxLQUZELE1BRU8sSUFBSVAsR0FBRyxLQUFLLFlBQVIsSUFBd0JPLFdBQVcsR0FBRyxDQUFkLEdBQWtCTCxnQkFBZ0IsQ0FBQ1EsTUFBL0QsRUFBdUU7QUFDNUVELE1BQUFBLGVBQWUsR0FBR1AsZ0JBQWdCLENBQUNLLFdBQVcsR0FBRyxDQUFmLENBQWxDO0FBQ0Q7QUFDRixHQU5ELE1BTU8sSUFBSVAsR0FBRyxLQUFLLFNBQVIsSUFBcUJBLEdBQUcsS0FBSyxXQUFqQyxFQUE4QztBQUNuRCxRQUFNVyxpQkFBaUIsR0FBR1IsS0FBSyxDQUFDQyxJQUFOLENBQVdILEdBQUcsQ0FBQ0ksYUFBSixDQUFrQkEsYUFBbEIsQ0FBZ0NDLFFBQTNDLENBQTFCO0FBQ0EsUUFBTU0sUUFBUSxHQUFHRCxpQkFBaUIsQ0FBQ0gsT0FBbEIsQ0FBMEJQLEdBQUcsQ0FBQ0ksYUFBOUIsQ0FBakI7QUFFQSxRQUFJUSxPQUFKOztBQUNBLFFBQUliLEdBQUcsS0FBSyxTQUFSLElBQXFCWSxRQUFRLEdBQUcsQ0FBWCxJQUFnQixDQUF6QyxFQUE0QztBQUMxQ0MsTUFBQUEsT0FBTyxHQUFHRixpQkFBaUIsQ0FBQ0MsUUFBUSxHQUFHLENBQVosQ0FBM0I7QUFDRCxLQUZELE1BRU8sSUFBSVosR0FBRyxLQUFLLFdBQVIsSUFBdUJZLFFBQVEsR0FBRyxDQUFYLEdBQWVELGlCQUFpQixDQUFDRCxNQUE1RCxFQUFvRTtBQUN6RUcsTUFBQUEsT0FBTyxHQUFHRixpQkFBaUIsQ0FBQ0MsUUFBUSxHQUFHLENBQVosQ0FBM0I7QUFDRDs7QUFFRCxRQUFJQyxPQUFPLElBQUlBLE9BQU8sQ0FBQ1AsUUFBdkIsRUFBaUM7QUFDL0JHLE1BQUFBLGVBQWUsR0FBR0ksT0FBTyxDQUFDUCxRQUFSLENBQWlCQyxXQUFqQixDQUFsQjtBQUNEO0FBQ0Y7O0FBRUQsTUFBSUUsZUFBZSxJQUFJQSxlQUFlLENBQUNLLFlBQWhCLENBQTZCLFVBQTdCLENBQXZCLEVBQWlFO0FBQy9ETCxJQUFBQSxlQUFlLENBQUNNLEtBQWhCO0FBQ0Q7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRnVuY3Rpb24gdG8gaGVscCB3aXRoIGZvY3VzIG1hbmFnZW1lbnQgZm9yIHNlbGVjdGFibGUgdGFibGUgY2VsbHMuXG4gKiBAcGFyYW0ge09iamVjdH0ga2V5IC0gUmVhY3QgYGV2ZW50LmtleWAuXG4gKiBAcGFyYW0ge0VsZW1lbnR9IHJlZiAtIHRoZSBjZWxsIHRvIG1hbmFnZSBmb2N1cyBpbnRlcmFjdGlvbiBmb3IuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1hbmFnZVRhYmxlQ2VsbEZvY3VzSW50ZXJhY3Rpb24oa2V5LCByZWYpIHtcbiAgY29uc3QgdGFibGVSb3dDaGlsZHJlbiA9IEFycmF5LmZyb20ocmVmLnBhcmVudEVsZW1lbnQuY2hpbGRyZW4pXG4gIGNvbnN0IGNvbHVtbkluZGV4ID0gdGFibGVSb3dDaGlsZHJlbi5pbmRleE9mKHJlZilcblxuICBsZXQgbmV4dEl0ZW1Ub0ZvY3VzXG4gIGlmIChrZXkgPT09ICdBcnJvd0xlZnQnIHx8IGtleSA9PT0gJ0Fycm93UmlnaHQnKSB7XG4gICAgaWYgKGtleSA9PT0gJ0Fycm93TGVmdCcgJiYgY29sdW1uSW5kZXggLSAxID49IDApIHtcbiAgICAgIG5leHRJdGVtVG9Gb2N1cyA9IHRhYmxlUm93Q2hpbGRyZW5bY29sdW1uSW5kZXggLSAxXVxuICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnQXJyb3dSaWdodCcgJiYgY29sdW1uSW5kZXggKyAxIDwgdGFibGVSb3dDaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgIG5leHRJdGVtVG9Gb2N1cyA9IHRhYmxlUm93Q2hpbGRyZW5bY29sdW1uSW5kZXggKyAxXVxuICAgIH1cbiAgfSBlbHNlIGlmIChrZXkgPT09ICdBcnJvd1VwJyB8fCBrZXkgPT09ICdBcnJvd0Rvd24nKSB7XG4gICAgY29uc3QgdGFibGVCb2R5Q2hpbGRyZW4gPSBBcnJheS5mcm9tKHJlZi5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQuY2hpbGRyZW4pXG4gICAgY29uc3Qgcm93SW5kZXggPSB0YWJsZUJvZHlDaGlsZHJlbi5pbmRleE9mKHJlZi5wYXJlbnRFbGVtZW50KVxuXG4gICAgbGV0IG5leHRSb3dcbiAgICBpZiAoa2V5ID09PSAnQXJyb3dVcCcgJiYgcm93SW5kZXggLSAxID49IDApIHtcbiAgICAgIG5leHRSb3cgPSB0YWJsZUJvZHlDaGlsZHJlbltyb3dJbmRleCAtIDFdXG4gICAgfSBlbHNlIGlmIChrZXkgPT09ICdBcnJvd0Rvd24nICYmIHJvd0luZGV4ICsgMSA8IHRhYmxlQm9keUNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgbmV4dFJvdyA9IHRhYmxlQm9keUNoaWxkcmVuW3Jvd0luZGV4ICsgMV1cbiAgICB9XG5cbiAgICBpZiAobmV4dFJvdyAmJiBuZXh0Um93LmNoaWxkcmVuKSB7XG4gICAgICBuZXh0SXRlbVRvRm9jdXMgPSBuZXh0Um93LmNoaWxkcmVuW2NvbHVtbkluZGV4XVxuICAgIH1cbiAgfVxuXG4gIGlmIChuZXh0SXRlbVRvRm9jdXMgJiYgbmV4dEl0ZW1Ub0ZvY3VzLmhhc0F0dHJpYnV0ZSgndGFiaW5kZXgnKSkge1xuICAgIG5leHRJdGVtVG9Gb2N1cy5mb2N1cygpXG4gIH1cbn1cbiJdfQ==