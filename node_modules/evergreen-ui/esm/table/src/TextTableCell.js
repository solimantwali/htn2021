import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["children", "isNumber", "placeholder", "textProps"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { memo, forwardRef } from 'react';
import PropTypes from 'prop-types';
import { Text } from '../../typography';
import TableCell from './TableCell';
var ellipsis = {
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap'
};
var TextTableCell = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function TextTableCell(props, ref) {
  var children = props.children,
      _props$isNumber = props.isNumber,
      isNumber = _props$isNumber === void 0 ? false : _props$isNumber,
      placeholder = props.placeholder,
      textProps = props.textProps,
      rest = _objectWithoutProperties(props, _excluded);

  return /*#__PURE__*/React.createElement(TableCell, _extends({
    ref: ref
  }, rest), /*#__PURE__*/React.createElement(Text, _extends({
    size: 300,
    flex: "1",
    title: typeof children === 'string' ? children : undefined
  }, ellipsis, isNumber ? {
    fontFamily: 'mono'
  } : {}, textProps), children));
}));
TextTableCell.propTypes = _objectSpread(_objectSpread({}, TableCell.propTypes), {}, {
  /**
   * Adds fontFamily: mono.
   */
  isNumber: PropTypes.bool,

  /**
   * Pass additional props to the Text component.
   */
  textProps: PropTypes.object
});
export default TextTableCell;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJsZS9zcmMvVGV4dFRhYmxlQ2VsbC5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsIm1lbW8iLCJmb3J3YXJkUmVmIiwiUHJvcFR5cGVzIiwiVGV4dCIsIlRhYmxlQ2VsbCIsImVsbGlwc2lzIiwib3ZlcmZsb3ciLCJ0ZXh0T3ZlcmZsb3ciLCJ3aGl0ZVNwYWNlIiwiVGV4dFRhYmxlQ2VsbCIsInByb3BzIiwicmVmIiwiY2hpbGRyZW4iLCJpc051bWJlciIsInBsYWNlaG9sZGVyIiwidGV4dFByb3BzIiwicmVzdCIsInVuZGVmaW5lZCIsImZvbnRGYW1pbHkiLCJwcm9wVHlwZXMiLCJib29sIiwib2JqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxPQUFPQSxLQUFQLElBQWdCQyxJQUFoQixFQUFzQkMsVUFBdEIsUUFBd0MsT0FBeEM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsU0FBU0MsSUFBVCxRQUFxQixrQkFBckI7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLGFBQXRCO0FBRUEsSUFBTUMsUUFBUSxHQUFHO0FBQ2ZDLEVBQUFBLFFBQVEsRUFBRSxRQURLO0FBRWZDLEVBQUFBLFlBQVksRUFBRSxVQUZDO0FBR2ZDLEVBQUFBLFVBQVUsRUFBRTtBQUhHLENBQWpCO0FBTUEsSUFBTUMsYUFBYSxnQkFBR1QsSUFBSSxlQUN4QkMsVUFBVSxDQUFDLFNBQVNRLGFBQVQsQ0FBdUJDLEtBQXZCLEVBQThCQyxHQUE5QixFQUFtQztBQUM1QyxNQUFRQyxRQUFSLEdBQXdFRixLQUF4RSxDQUFRRSxRQUFSO0FBQUEsd0JBQXdFRixLQUF4RSxDQUFrQkcsUUFBbEI7QUFBQSxNQUFrQkEsUUFBbEIsZ0NBQTZCLEtBQTdCO0FBQUEsTUFBb0NDLFdBQXBDLEdBQXdFSixLQUF4RSxDQUFvQ0ksV0FBcEM7QUFBQSxNQUFpREMsU0FBakQsR0FBd0VMLEtBQXhFLENBQWlESyxTQUFqRDtBQUFBLE1BQStEQyxJQUEvRCw0QkFBd0VOLEtBQXhFOztBQUVBLHNCQUNFLG9CQUFDLFNBQUQ7QUFBVyxJQUFBLEdBQUcsRUFBRUM7QUFBaEIsS0FBeUJLLElBQXpCLGdCQUNFLG9CQUFDLElBQUQ7QUFDRSxJQUFBLElBQUksRUFBRSxHQURSO0FBRUUsSUFBQSxJQUFJLEVBQUMsR0FGUDtBQUdFLElBQUEsS0FBSyxFQUFFLE9BQU9KLFFBQVAsS0FBb0IsUUFBcEIsR0FBK0JBLFFBQS9CLEdBQTBDSztBQUhuRCxLQUlNWixRQUpOLEVBS09RLFFBQVEsR0FBRztBQUFFSyxJQUFBQSxVQUFVLEVBQUU7QUFBZCxHQUFILEdBQTRCLEVBTDNDLEVBTU1ILFNBTk4sR0FRR0gsUUFSSCxDQURGLENBREY7QUFjRCxDQWpCUyxDQURjLENBQTFCO0FBcUJBSCxhQUFhLENBQUNVLFNBQWQsbUNBSUtmLFNBQVMsQ0FBQ2UsU0FKZjtBQU1FO0FBQ0Y7QUFDQTtBQUNFTixFQUFBQSxRQUFRLEVBQUVYLFNBQVMsQ0FBQ2tCLElBVHRCOztBQVdFO0FBQ0Y7QUFDQTtBQUNFTCxFQUFBQSxTQUFTLEVBQUViLFNBQVMsQ0FBQ21CO0FBZHZCO0FBaUJBLGVBQWVaLGFBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgbWVtbywgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4uLy4uL3R5cG9ncmFwaHknXG5pbXBvcnQgVGFibGVDZWxsIGZyb20gJy4vVGFibGVDZWxsJ1xuXG5jb25zdCBlbGxpcHNpcyA9IHtcbiAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICB0ZXh0T3ZlcmZsb3c6ICdlbGxpcHNpcycsXG4gIHdoaXRlU3BhY2U6ICdub3dyYXAnXG59XG5cbmNvbnN0IFRleHRUYWJsZUNlbGwgPSBtZW1vKFxuICBmb3J3YXJkUmVmKGZ1bmN0aW9uIFRleHRUYWJsZUNlbGwocHJvcHMsIHJlZikge1xuICAgIGNvbnN0IHsgY2hpbGRyZW4sIGlzTnVtYmVyID0gZmFsc2UsIHBsYWNlaG9sZGVyLCB0ZXh0UHJvcHMsIC4uLnJlc3QgfSA9IHByb3BzXG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRhYmxlQ2VsbCByZWY9e3JlZn0gey4uLnJlc3R9PlxuICAgICAgICA8VGV4dFxuICAgICAgICAgIHNpemU9ezMwMH1cbiAgICAgICAgICBmbGV4PVwiMVwiXG4gICAgICAgICAgdGl0bGU9e3R5cGVvZiBjaGlsZHJlbiA9PT0gJ3N0cmluZycgPyBjaGlsZHJlbiA6IHVuZGVmaW5lZH1cbiAgICAgICAgICB7Li4uZWxsaXBzaXN9XG4gICAgICAgICAgey4uLihpc051bWJlciA/IHsgZm9udEZhbWlseTogJ21vbm8nIH0gOiB7fSl9XG4gICAgICAgICAgey4uLnRleHRQcm9wc31cbiAgICAgICAgPlxuICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgPC9UZXh0PlxuICAgICAgPC9UYWJsZUNlbGw+XG4gICAgKVxuICB9KVxuKVxuXG5UZXh0VGFibGVDZWxsLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIENvbXBvc2VzIHRoZSBUYWJsZUNlbGwgY29tcG9uZW50IGFzIHRoZSBiYXNlLlxuICAgKi9cbiAgLi4uVGFibGVDZWxsLnByb3BUeXBlcyxcblxuICAvKipcbiAgICogQWRkcyBmb250RmFtaWx5OiBtb25vLlxuICAgKi9cbiAgaXNOdW1iZXI6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBQYXNzIGFkZGl0aW9uYWwgcHJvcHMgdG8gdGhlIFRleHQgY29tcG9uZW50LlxuICAgKi9cbiAgdGV4dFByb3BzOiBQcm9wVHlwZXMub2JqZWN0XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRleHRUYWJsZUNlbGxcbiJdfQ==