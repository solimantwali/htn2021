import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["appearance", "className", "color", "isInteractive"],
    _excluded2 = ["className"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { memo, forwardRef } from 'react';
import cx from 'classnames';
import { css } from 'glamor';
import PropTypes from 'prop-types';
import { useStyleConfig } from '../../hooks';
import { Strong } from '../../typography';
var pseudoSelectors = {};
var internalStyles = {
  display: 'inline-block',
  boxSizing: 'border-box',
  verticalAlign: 'middle'
};
var hoverClassName = css({
  '&:hover': {
    opacity: 0.8
  },
  cursor: 'pointer'
});
var Badge = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Badge(props, ref) {
  var _props$appearance = props.appearance,
      appearance = _props$appearance === void 0 ? 'subtle' : _props$appearance,
      className = props.className,
      _props$color = props.color,
      color = _props$color === void 0 ? 'neutral' : _props$color,
      _props$isInteractive = props.isInteractive,
      isInteractive = _props$isInteractive === void 0 ? false : _props$isInteractive,
      restProps = _objectWithoutProperties(props, _excluded);

  var _useStyleConfig = useStyleConfig('Badge', {
    appearance: appearance,
    color: color
  }, pseudoSelectors, internalStyles),
      themedClassName = _useStyleConfig.className,
      styleProps = _objectWithoutProperties(_useStyleConfig, _excluded2);

  return /*#__PURE__*/React.createElement(Strong, _extends({
    ref: ref,
    size: 300,
    className: cx(className, themedClassName, isInteractive && hoverClassName)
  }, styleProps, restProps));
}));
Badge.propTypes = _objectSpread(_objectSpread({}, Strong.propTypes), {}, {
  /**
   * The color used for the badge.
   */
  color: PropTypes.string,

  /**
   * Whether or not to apply hover/focus/active styles
   */
  isInteractive: PropTypes.bool
});
export default Badge;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9iYWRnZXMvc3JjL0JhZGdlLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwibWVtbyIsImZvcndhcmRSZWYiLCJjeCIsImNzcyIsIlByb3BUeXBlcyIsInVzZVN0eWxlQ29uZmlnIiwiU3Ryb25nIiwicHNldWRvU2VsZWN0b3JzIiwiaW50ZXJuYWxTdHlsZXMiLCJkaXNwbGF5IiwiYm94U2l6aW5nIiwidmVydGljYWxBbGlnbiIsImhvdmVyQ2xhc3NOYW1lIiwib3BhY2l0eSIsImN1cnNvciIsIkJhZGdlIiwicHJvcHMiLCJyZWYiLCJhcHBlYXJhbmNlIiwiY2xhc3NOYW1lIiwiY29sb3IiLCJpc0ludGVyYWN0aXZlIiwicmVzdFByb3BzIiwidGhlbWVkQ2xhc3NOYW1lIiwic3R5bGVQcm9wcyIsInByb3BUeXBlcyIsInN0cmluZyIsImJvb2wiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxPQUFPQSxLQUFQLElBQWdCQyxJQUFoQixFQUFzQkMsVUFBdEIsUUFBd0MsT0FBeEM7QUFDQSxPQUFPQyxFQUFQLE1BQWUsWUFBZjtBQUNBLFNBQVNDLEdBQVQsUUFBb0IsUUFBcEI7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsU0FBU0MsY0FBVCxRQUErQixhQUEvQjtBQUNBLFNBQVNDLE1BQVQsUUFBdUIsa0JBQXZCO0FBRUEsSUFBTUMsZUFBZSxHQUFHLEVBQXhCO0FBRUEsSUFBTUMsY0FBYyxHQUFHO0FBQ3JCQyxFQUFBQSxPQUFPLEVBQUUsY0FEWTtBQUVyQkMsRUFBQUEsU0FBUyxFQUFFLFlBRlU7QUFHckJDLEVBQUFBLGFBQWEsRUFBRTtBQUhNLENBQXZCO0FBTUEsSUFBTUMsY0FBYyxHQUFHVCxHQUFHLENBQUM7QUFDekIsYUFBVztBQUNUVSxJQUFBQSxPQUFPLEVBQUU7QUFEQSxHQURjO0FBSXpCQyxFQUFBQSxNQUFNLEVBQUU7QUFKaUIsQ0FBRCxDQUExQjtBQU9BLElBQU1DLEtBQUssZ0JBQUdmLElBQUksZUFDaEJDLFVBQVUsQ0FBQyxTQUFTYyxLQUFULENBQWVDLEtBQWYsRUFBc0JDLEdBQXRCLEVBQTJCO0FBQ3BDLDBCQUFxR0QsS0FBckcsQ0FBUUUsVUFBUjtBQUFBLE1BQVFBLFVBQVIsa0NBQXFCLFFBQXJCO0FBQUEsTUFBK0JDLFNBQS9CLEdBQXFHSCxLQUFyRyxDQUErQkcsU0FBL0I7QUFBQSxxQkFBcUdILEtBQXJHLENBQTBDSSxLQUExQztBQUFBLE1BQTBDQSxLQUExQyw2QkFBa0QsU0FBbEQ7QUFBQSw2QkFBcUdKLEtBQXJHLENBQTZESyxhQUE3RDtBQUFBLE1BQTZEQSxhQUE3RCxxQ0FBNkUsS0FBN0U7QUFBQSxNQUF1RkMsU0FBdkYsNEJBQXFHTixLQUFyRzs7QUFFQSx3QkFBc0RYLGNBQWMsQ0FDbEUsT0FEa0UsRUFFbEU7QUFBRWEsSUFBQUEsVUFBVSxFQUFWQSxVQUFGO0FBQWNFLElBQUFBLEtBQUssRUFBTEE7QUFBZCxHQUZrRSxFQUdsRWIsZUFIa0UsRUFJbEVDLGNBSmtFLENBQXBFO0FBQUEsTUFBbUJlLGVBQW5CLG1CQUFRSixTQUFSO0FBQUEsTUFBdUNLLFVBQXZDOztBQU9BLHNCQUNFLG9CQUFDLE1BQUQ7QUFDRSxJQUFBLEdBQUcsRUFBRVAsR0FEUDtBQUVFLElBQUEsSUFBSSxFQUFFLEdBRlI7QUFHRSxJQUFBLFNBQVMsRUFBRWYsRUFBRSxDQUFDaUIsU0FBRCxFQUFZSSxlQUFaLEVBQTZCRixhQUFhLElBQUlULGNBQTlDO0FBSGYsS0FJTVksVUFKTixFQUtNRixTQUxOLEVBREY7QUFTRCxDQW5CUyxDQURNLENBQWxCO0FBdUJBUCxLQUFLLENBQUNVLFNBQU4sbUNBQ0tuQixNQUFNLENBQUNtQixTQURaO0FBR0U7QUFDRjtBQUNBO0FBQ0VMLEVBQUFBLEtBQUssRUFBRWhCLFNBQVMsQ0FBQ3NCLE1BTm5COztBQVFFO0FBQ0Y7QUFDQTtBQUNFTCxFQUFBQSxhQUFhLEVBQUVqQixTQUFTLENBQUN1QjtBQVgzQjtBQWNBLGVBQWVaLEtBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgbWVtbywgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGN4IGZyb20gJ2NsYXNzbmFtZXMnXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdnbGFtb3InXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyB1c2VTdHlsZUNvbmZpZyB9IGZyb20gJy4uLy4uL2hvb2tzJ1xuaW1wb3J0IHsgU3Ryb25nIH0gZnJvbSAnLi4vLi4vdHlwb2dyYXBoeSdcblxuY29uc3QgcHNldWRvU2VsZWN0b3JzID0ge31cblxuY29uc3QgaW50ZXJuYWxTdHlsZXMgPSB7XG4gIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgdmVydGljYWxBbGlnbjogJ21pZGRsZSdcbn1cblxuY29uc3QgaG92ZXJDbGFzc05hbWUgPSBjc3Moe1xuICAnJjpob3Zlcic6IHtcbiAgICBvcGFjaXR5OiAwLjhcbiAgfSxcbiAgY3Vyc29yOiAncG9pbnRlcidcbn0pXG5cbmNvbnN0IEJhZGdlID0gbWVtbyhcbiAgZm9yd2FyZFJlZihmdW5jdGlvbiBCYWRnZShwcm9wcywgcmVmKSB7XG4gICAgY29uc3QgeyBhcHBlYXJhbmNlID0gJ3N1YnRsZScsIGNsYXNzTmFtZSwgY29sb3IgPSAnbmV1dHJhbCcsIGlzSW50ZXJhY3RpdmUgPSBmYWxzZSwgLi4ucmVzdFByb3BzIH0gPSBwcm9wc1xuXG4gICAgY29uc3QgeyBjbGFzc05hbWU6IHRoZW1lZENsYXNzTmFtZSwgLi4uc3R5bGVQcm9wcyB9ID0gdXNlU3R5bGVDb25maWcoXG4gICAgICAnQmFkZ2UnLFxuICAgICAgeyBhcHBlYXJhbmNlLCBjb2xvciB9LFxuICAgICAgcHNldWRvU2VsZWN0b3JzLFxuICAgICAgaW50ZXJuYWxTdHlsZXNcbiAgICApXG5cbiAgICByZXR1cm4gKFxuICAgICAgPFN0cm9uZ1xuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgc2l6ZT17MzAwfVxuICAgICAgICBjbGFzc05hbWU9e2N4KGNsYXNzTmFtZSwgdGhlbWVkQ2xhc3NOYW1lLCBpc0ludGVyYWN0aXZlICYmIGhvdmVyQ2xhc3NOYW1lKX1cbiAgICAgICAgey4uLnN0eWxlUHJvcHN9XG4gICAgICAgIHsuLi5yZXN0UHJvcHN9XG4gICAgICAvPlxuICAgIClcbiAgfSlcbilcblxuQmFkZ2UucHJvcFR5cGVzID0ge1xuICAuLi5TdHJvbmcucHJvcFR5cGVzLFxuXG4gIC8qKlxuICAgKiBUaGUgY29sb3IgdXNlZCBmb3IgdGhlIGJhZGdlLlxuICAgKi9cbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgb3Igbm90IHRvIGFwcGx5IGhvdmVyL2ZvY3VzL2FjdGl2ZSBzdHlsZXNcbiAgICovXG4gIGlzSW50ZXJhY3RpdmU6IFByb3BUeXBlcy5ib29sXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJhZGdlXG4iXX0=