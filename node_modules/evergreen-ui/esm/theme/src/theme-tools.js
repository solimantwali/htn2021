import _typeof from "@babel/runtime/helpers/esm/typeof";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

export function get(obj, path, fallback) {
  var keys = path && path.split ? path.split('.') : [path];
  var value = obj;

  var _iterator = _createForOfIteratorHelper(keys),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var key = _step.value;
      value = value ? value[key] : undefined;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return value === undefined ? fallback : value;
}
/**
 * Gets a value from the given theme based on a path when present,
 * else returns the provided value
 * @param {object} theme
 * @param {unknown} pathOrValue
 */

export function getValue(theme, pathOrValue) {
  return get(theme, pathOrValue, pathOrValue);
}
/**
 * Resolves an object (or style config) when referencing theme paths
 * It will preserve the original object structure (nesting)
 * @param {object} theme
 * @param {object} obj
 * @returns {object} a new object with theme-resolved properties
 */

export function resolveThemeTokens(theme, obj) {
  var result = {};

  for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {
    var key = _Object$keys[_i];
    var raw = obj[key];

    if (raw === null) {
      continue;
    }

    if (_typeof(raw) === 'object') {
      result[key] = resolveThemeTokens(theme, raw);
    } else {
      result[key] = getValue(theme, raw);
    }
  }

  return result;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90aGVtZS9zcmMvdGhlbWUtdG9vbHMuanMiXSwibmFtZXMiOlsiZ2V0Iiwib2JqIiwicGF0aCIsImZhbGxiYWNrIiwia2V5cyIsInNwbGl0IiwidmFsdWUiLCJrZXkiLCJ1bmRlZmluZWQiLCJnZXRWYWx1ZSIsInRoZW1lIiwicGF0aE9yVmFsdWUiLCJyZXNvbHZlVGhlbWVUb2tlbnMiLCJyZXN1bHQiLCJPYmplY3QiLCJyYXciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsT0FBTyxTQUFTQSxHQUFULENBQWFDLEdBQWIsRUFBa0JDLElBQWxCLEVBQXdCQyxRQUF4QixFQUFrQztBQUN2QyxNQUFNQyxJQUFJLEdBQUdGLElBQUksSUFBSUEsSUFBSSxDQUFDRyxLQUFiLEdBQXFCSCxJQUFJLENBQUNHLEtBQUwsQ0FBVyxHQUFYLENBQXJCLEdBQXVDLENBQUNILElBQUQsQ0FBcEQ7QUFFQSxNQUFJSSxLQUFLLEdBQUdMLEdBQVo7O0FBSHVDLDZDQUlyQkcsSUFKcUI7QUFBQTs7QUFBQTtBQUl2Qyx3REFBd0I7QUFBQSxVQUFiRyxHQUFhO0FBQ3RCRCxNQUFBQSxLQUFLLEdBQUdBLEtBQUssR0FBR0EsS0FBSyxDQUFDQyxHQUFELENBQVIsR0FBZ0JDLFNBQTdCO0FBQ0Q7QUFOc0M7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFRdkMsU0FBT0YsS0FBSyxLQUFLRSxTQUFWLEdBQXNCTCxRQUF0QixHQUFpQ0csS0FBeEM7QUFDRDtBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSxPQUFPLFNBQVNHLFFBQVQsQ0FBa0JDLEtBQWxCLEVBQXlCQyxXQUF6QixFQUFzQztBQUMzQyxTQUFPWCxHQUFHLENBQUNVLEtBQUQsRUFBUUMsV0FBUixFQUFxQkEsV0FBckIsQ0FBVjtBQUNEO0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EsT0FBTyxTQUFTQyxrQkFBVCxDQUE0QkYsS0FBNUIsRUFBbUNULEdBQW5DLEVBQXdDO0FBQzdDLE1BQU1ZLE1BQU0sR0FBRyxFQUFmOztBQUVBLGtDQUFrQkMsTUFBTSxDQUFDVixJQUFQLENBQVlILEdBQVosQ0FBbEIsa0NBQW9DO0FBQS9CLFFBQU1NLEdBQUcsbUJBQVQ7QUFDSCxRQUFNUSxHQUFHLEdBQUdkLEdBQUcsQ0FBQ00sR0FBRCxDQUFmOztBQUVBLFFBQUlRLEdBQUcsS0FBSyxJQUFaLEVBQWtCO0FBQ2hCO0FBQ0Q7O0FBRUQsUUFBSSxRQUFPQSxHQUFQLE1BQWUsUUFBbkIsRUFBNkI7QUFDM0JGLE1BQUFBLE1BQU0sQ0FBQ04sR0FBRCxDQUFOLEdBQWNLLGtCQUFrQixDQUFDRixLQUFELEVBQVFLLEdBQVIsQ0FBaEM7QUFDRCxLQUZELE1BRU87QUFDTEYsTUFBQUEsTUFBTSxDQUFDTixHQUFELENBQU4sR0FBY0UsUUFBUSxDQUFDQyxLQUFELEVBQVFLLEdBQVIsQ0FBdEI7QUFDRDtBQUNGOztBQUVELFNBQU9GLE1BQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBnZXQob2JqLCBwYXRoLCBmYWxsYmFjaykge1xuICBjb25zdCBrZXlzID0gcGF0aCAmJiBwYXRoLnNwbGl0ID8gcGF0aC5zcGxpdCgnLicpIDogW3BhdGhdXG5cbiAgbGV0IHZhbHVlID0gb2JqXG4gIGZvciAoY29uc3Qga2V5IG9mIGtleXMpIHtcbiAgICB2YWx1ZSA9IHZhbHVlID8gdmFsdWVba2V5XSA6IHVuZGVmaW5lZFxuICB9XG5cbiAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgPyBmYWxsYmFjayA6IHZhbHVlXG59XG5cbi8qKlxuICogR2V0cyBhIHZhbHVlIGZyb20gdGhlIGdpdmVuIHRoZW1lIGJhc2VkIG9uIGEgcGF0aCB3aGVuIHByZXNlbnQsXG4gKiBlbHNlIHJldHVybnMgdGhlIHByb3ZpZGVkIHZhbHVlXG4gKiBAcGFyYW0ge29iamVjdH0gdGhlbWVcbiAqIEBwYXJhbSB7dW5rbm93bn0gcGF0aE9yVmFsdWVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFZhbHVlKHRoZW1lLCBwYXRoT3JWYWx1ZSkge1xuICByZXR1cm4gZ2V0KHRoZW1lLCBwYXRoT3JWYWx1ZSwgcGF0aE9yVmFsdWUpXG59XG5cbi8qKlxuICogUmVzb2x2ZXMgYW4gb2JqZWN0IChvciBzdHlsZSBjb25maWcpIHdoZW4gcmVmZXJlbmNpbmcgdGhlbWUgcGF0aHNcbiAqIEl0IHdpbGwgcHJlc2VydmUgdGhlIG9yaWdpbmFsIG9iamVjdCBzdHJ1Y3R1cmUgKG5lc3RpbmcpXG4gKiBAcGFyYW0ge29iamVjdH0gdGhlbWVcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmpcbiAqIEByZXR1cm5zIHtvYmplY3R9IGEgbmV3IG9iamVjdCB3aXRoIHRoZW1lLXJlc29sdmVkIHByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVUaGVtZVRva2Vucyh0aGVtZSwgb2JqKSB7XG4gIGNvbnN0IHJlc3VsdCA9IHt9XG5cbiAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMob2JqKSkge1xuICAgIGNvbnN0IHJhdyA9IG9ialtrZXldXG5cbiAgICBpZiAocmF3ID09PSBudWxsKSB7XG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgcmF3ID09PSAnb2JqZWN0Jykge1xuICAgICAgcmVzdWx0W2tleV0gPSByZXNvbHZlVGhlbWVUb2tlbnModGhlbWUsIHJhdylcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0W2tleV0gPSBnZXRWYWx1ZSh0aGVtZSwgcmF3KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cbiJdfQ==