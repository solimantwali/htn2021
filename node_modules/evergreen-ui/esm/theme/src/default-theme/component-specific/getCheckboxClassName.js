import { Themer } from '../../../../themer';
import scales from '../foundational-styles/scales';
import { getPrimaryButtonStylesForIntent } from '../helpers';
import memoizeClassName from '../utils/memoizeClassName';
var primaryStyle = getPrimaryButtonStylesForIntent();
var defaultAppearance = Themer.createCheckboxAppearance({
  base: {
    color: 'white',
    backgroundColor: 'white',
    backgroundImage: "linear-gradient(to top, ".concat(scales.neutral.N2A, ", white)"),
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N3A)
  },
  disabled: {
    cursor: 'not-allowed',
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A),
    backgroundColor: scales.neutral.N2A,
    backgroundImage: 'none'
  },
  hover: {
    backgroundImage: "linear-gradient(to top, ".concat(scales.neutral.N2A, ", ").concat(scales.neutral.N1A, ")"),
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N2A)
  },
  focus: {
    boxShadow: "0 0 0 2px ".concat(scales.blue.B4A, ", inset 0 0 0 1px ").concat(scales.neutral.N5A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N3A)
  },
  active: {
    backgroundImage: 'none',
    backgroundColor: scales.blue.B3A,
    boxShadow: "inset 0 0 0 1px ".concat(scales.blue.B5A)
  },
  checked: {
    color: 'white',
    backgroundImage: primaryStyle.linearGradient.base,
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N5A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N2A)
  },
  checkedHover: {
    color: 'white',
    backgroundImage: primaryStyle.linearGradient.hover,
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N5A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N2A)
  },
  checkedDisabled: {
    color: scales.neutral.N6A,
    backgroundImage: "linear-gradient(to top, ".concat(scales.neutral.N2A, ", ").concat(scales.neutral.N1A, ")"),
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N2A)
  },
  checkedActive: {
    color: 'white',
    backgroundImage: primaryStyle.linearGradient.active,
    boxShadow: "inset 0 0 0 1px ".concat(scales.neutral.N4A, ", inset 0 -1px 1px 0 ").concat(scales.neutral.N2A)
  }
});
/**
 * There is only a single appearance in the default theme.
 * @param {String} appearance.
 * @return {Object} the appearance of the checkbox.
 */

var getCheckboxAppearance = function getCheckboxAppearance() {
  return defaultAppearance;
};
/**
 * Get the className of a `Checkbox`.
 * @param {string} appearance
 * @return {string} the appearance class name.
 */


export default memoizeClassName(getCheckboxAppearance);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90aGVtZS9zcmMvZGVmYXVsdC10aGVtZS9jb21wb25lbnQtc3BlY2lmaWMvZ2V0Q2hlY2tib3hDbGFzc05hbWUuanMiXSwibmFtZXMiOlsiVGhlbWVyIiwic2NhbGVzIiwiZ2V0UHJpbWFyeUJ1dHRvblN0eWxlc0ZvckludGVudCIsIm1lbW9pemVDbGFzc05hbWUiLCJwcmltYXJ5U3R5bGUiLCJkZWZhdWx0QXBwZWFyYW5jZSIsImNyZWF0ZUNoZWNrYm94QXBwZWFyYW5jZSIsImJhc2UiLCJjb2xvciIsImJhY2tncm91bmRDb2xvciIsImJhY2tncm91bmRJbWFnZSIsIm5ldXRyYWwiLCJOMkEiLCJib3hTaGFkb3ciLCJONEEiLCJOM0EiLCJkaXNhYmxlZCIsImN1cnNvciIsImhvdmVyIiwiTjFBIiwiZm9jdXMiLCJibHVlIiwiQjRBIiwiTjVBIiwiYWN0aXZlIiwiQjNBIiwiQjVBIiwiY2hlY2tlZCIsImxpbmVhckdyYWRpZW50IiwiY2hlY2tlZEhvdmVyIiwiY2hlY2tlZERpc2FibGVkIiwiTjZBIiwiY2hlY2tlZEFjdGl2ZSIsImdldENoZWNrYm94QXBwZWFyYW5jZSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsTUFBVCxRQUF1QixvQkFBdkI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLCtCQUFuQjtBQUNBLFNBQVNDLCtCQUFULFFBQWdELFlBQWhEO0FBQ0EsT0FBT0MsZ0JBQVAsTUFBNkIsMkJBQTdCO0FBRUEsSUFBTUMsWUFBWSxHQUFHRiwrQkFBK0IsRUFBcEQ7QUFFQSxJQUFNRyxpQkFBaUIsR0FBR0wsTUFBTSxDQUFDTSx3QkFBUCxDQUFnQztBQUN4REMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLEtBQUssRUFBRSxPQURIO0FBRUpDLElBQUFBLGVBQWUsRUFBRSxPQUZiO0FBR0pDLElBQUFBLGVBQWUsb0NBQTZCVCxNQUFNLENBQUNVLE9BQVAsQ0FBZUMsR0FBNUMsYUFIWDtBQUlKQyxJQUFBQSxTQUFTLDRCQUFxQlosTUFBTSxDQUFDVSxPQUFQLENBQWVHLEdBQXBDLGtDQUErRGIsTUFBTSxDQUFDVSxPQUFQLENBQWVJLEdBQTlFO0FBSkwsR0FEa0Q7QUFPeERDLEVBQUFBLFFBQVEsRUFBRTtBQUNSQyxJQUFBQSxNQUFNLEVBQUUsYUFEQTtBQUVSSixJQUFBQSxTQUFTLDRCQUFxQlosTUFBTSxDQUFDVSxPQUFQLENBQWVHLEdBQXBDLENBRkQ7QUFHUkwsSUFBQUEsZUFBZSxFQUFFUixNQUFNLENBQUNVLE9BQVAsQ0FBZUMsR0FIeEI7QUFJUkYsSUFBQUEsZUFBZSxFQUFFO0FBSlQsR0FQOEM7QUFheERRLEVBQUFBLEtBQUssRUFBRTtBQUNMUixJQUFBQSxlQUFlLG9DQUE2QlQsTUFBTSxDQUFDVSxPQUFQLENBQWVDLEdBQTVDLGVBQW9EWCxNQUFNLENBQUNVLE9BQVAsQ0FBZVEsR0FBbkUsTUFEVjtBQUVMTixJQUFBQSxTQUFTLDRCQUFxQlosTUFBTSxDQUFDVSxPQUFQLENBQWVHLEdBQXBDLGtDQUErRGIsTUFBTSxDQUFDVSxPQUFQLENBQWVDLEdBQTlFO0FBRkosR0FiaUQ7QUFpQnhEUSxFQUFBQSxLQUFLLEVBQUU7QUFDTFAsSUFBQUEsU0FBUyxzQkFBZVosTUFBTSxDQUFDb0IsSUFBUCxDQUFZQyxHQUEzQiwrQkFBbURyQixNQUFNLENBQUNVLE9BQVAsQ0FBZVksR0FBbEUsa0NBQTZGdEIsTUFBTSxDQUFDVSxPQUFQLENBQWVJLEdBQTVHO0FBREosR0FqQmlEO0FBb0J4RFMsRUFBQUEsTUFBTSxFQUFFO0FBQ05kLElBQUFBLGVBQWUsRUFBRSxNQURYO0FBRU5ELElBQUFBLGVBQWUsRUFBRVIsTUFBTSxDQUFDb0IsSUFBUCxDQUFZSSxHQUZ2QjtBQUdOWixJQUFBQSxTQUFTLDRCQUFxQlosTUFBTSxDQUFDb0IsSUFBUCxDQUFZSyxHQUFqQztBQUhILEdBcEJnRDtBQXlCeERDLEVBQUFBLE9BQU8sRUFBRTtBQUNQbkIsSUFBQUEsS0FBSyxFQUFFLE9BREE7QUFFUEUsSUFBQUEsZUFBZSxFQUFFTixZQUFZLENBQUN3QixjQUFiLENBQTRCckIsSUFGdEM7QUFHUE0sSUFBQUEsU0FBUyw0QkFBcUJaLE1BQU0sQ0FBQ1UsT0FBUCxDQUFlWSxHQUFwQyxrQ0FBK0R0QixNQUFNLENBQUNVLE9BQVAsQ0FBZUMsR0FBOUU7QUFIRixHQXpCK0M7QUE4QnhEaUIsRUFBQUEsWUFBWSxFQUFFO0FBQ1pyQixJQUFBQSxLQUFLLEVBQUUsT0FESztBQUVaRSxJQUFBQSxlQUFlLEVBQUVOLFlBQVksQ0FBQ3dCLGNBQWIsQ0FBNEJWLEtBRmpDO0FBR1pMLElBQUFBLFNBQVMsNEJBQXFCWixNQUFNLENBQUNVLE9BQVAsQ0FBZVksR0FBcEMsa0NBQStEdEIsTUFBTSxDQUFDVSxPQUFQLENBQWVDLEdBQTlFO0FBSEcsR0E5QjBDO0FBbUN4RGtCLEVBQUFBLGVBQWUsRUFBRTtBQUNmdEIsSUFBQUEsS0FBSyxFQUFFUCxNQUFNLENBQUNVLE9BQVAsQ0FBZW9CLEdBRFA7QUFFZnJCLElBQUFBLGVBQWUsb0NBQTZCVCxNQUFNLENBQUNVLE9BQVAsQ0FBZUMsR0FBNUMsZUFBb0RYLE1BQU0sQ0FBQ1UsT0FBUCxDQUFlUSxHQUFuRSxNQUZBO0FBR2ZOLElBQUFBLFNBQVMsNEJBQXFCWixNQUFNLENBQUNVLE9BQVAsQ0FBZUcsR0FBcEMsa0NBQStEYixNQUFNLENBQUNVLE9BQVAsQ0FBZUMsR0FBOUU7QUFITSxHQW5DdUM7QUF3Q3hEb0IsRUFBQUEsYUFBYSxFQUFFO0FBQ2J4QixJQUFBQSxLQUFLLEVBQUUsT0FETTtBQUViRSxJQUFBQSxlQUFlLEVBQUVOLFlBQVksQ0FBQ3dCLGNBQWIsQ0FBNEJKLE1BRmhDO0FBR2JYLElBQUFBLFNBQVMsNEJBQXFCWixNQUFNLENBQUNVLE9BQVAsQ0FBZUcsR0FBcEMsa0NBQStEYixNQUFNLENBQUNVLE9BQVAsQ0FBZUMsR0FBOUU7QUFISTtBQXhDeUMsQ0FBaEMsQ0FBMUI7QUErQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSxJQUFNcUIscUJBQXFCLEdBQUcsU0FBeEJBLHFCQUF3QixHQUFNO0FBQ2xDLFNBQU81QixpQkFBUDtBQUNELENBRkQ7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSxlQUFlRixnQkFBZ0IsQ0FBQzhCLHFCQUFELENBQS9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGhlbWVyIH0gZnJvbSAnLi4vLi4vLi4vLi4vdGhlbWVyJ1xuaW1wb3J0IHNjYWxlcyBmcm9tICcuLi9mb3VuZGF0aW9uYWwtc3R5bGVzL3NjYWxlcydcbmltcG9ydCB7IGdldFByaW1hcnlCdXR0b25TdHlsZXNGb3JJbnRlbnQgfSBmcm9tICcuLi9oZWxwZXJzJ1xuaW1wb3J0IG1lbW9pemVDbGFzc05hbWUgZnJvbSAnLi4vdXRpbHMvbWVtb2l6ZUNsYXNzTmFtZSdcblxuY29uc3QgcHJpbWFyeVN0eWxlID0gZ2V0UHJpbWFyeUJ1dHRvblN0eWxlc0ZvckludGVudCgpXG5cbmNvbnN0IGRlZmF1bHRBcHBlYXJhbmNlID0gVGhlbWVyLmNyZWF0ZUNoZWNrYm94QXBwZWFyYW5jZSh7XG4gIGJhc2U6IHtcbiAgICBjb2xvcjogJ3doaXRlJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgYmFja2dyb3VuZEltYWdlOiBgbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgJHtzY2FsZXMubmV1dHJhbC5OMkF9LCB3aGl0ZSlgLFxuICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke3NjYWxlcy5uZXV0cmFsLk40QX0sIGluc2V0IDAgLTFweCAxcHggMCAke3NjYWxlcy5uZXV0cmFsLk4zQX1gXG4gIH0sXG4gIGRpc2FibGVkOiB7XG4gICAgY3Vyc29yOiAnbm90LWFsbG93ZWQnLFxuICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke3NjYWxlcy5uZXV0cmFsLk40QX1gLFxuICAgIGJhY2tncm91bmRDb2xvcjogc2NhbGVzLm5ldXRyYWwuTjJBLFxuICAgIGJhY2tncm91bmRJbWFnZTogJ25vbmUnXG4gIH0sXG4gIGhvdmVyOiB7XG4gICAgYmFja2dyb3VuZEltYWdlOiBgbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgJHtzY2FsZXMubmV1dHJhbC5OMkF9LCAke3NjYWxlcy5uZXV0cmFsLk4xQX0pYCxcbiAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtzY2FsZXMubmV1dHJhbC5ONEF9LCBpbnNldCAwIC0xcHggMXB4IDAgJHtzY2FsZXMubmV1dHJhbC5OMkF9YFxuICB9LFxuICBmb2N1czoge1xuICAgIGJveFNoYWRvdzogYDAgMCAwIDJweCAke3NjYWxlcy5ibHVlLkI0QX0sIGluc2V0IDAgMCAwIDFweCAke3NjYWxlcy5uZXV0cmFsLk41QX0sIGluc2V0IDAgLTFweCAxcHggMCAke3NjYWxlcy5uZXV0cmFsLk4zQX1gXG4gIH0sXG4gIGFjdGl2ZToge1xuICAgIGJhY2tncm91bmRJbWFnZTogJ25vbmUnLFxuICAgIGJhY2tncm91bmRDb2xvcjogc2NhbGVzLmJsdWUuQjNBLFxuICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke3NjYWxlcy5ibHVlLkI1QX1gXG4gIH0sXG4gIGNoZWNrZWQ6IHtcbiAgICBjb2xvcjogJ3doaXRlJyxcbiAgICBiYWNrZ3JvdW5kSW1hZ2U6IHByaW1hcnlTdHlsZS5saW5lYXJHcmFkaWVudC5iYXNlLFxuICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke3NjYWxlcy5uZXV0cmFsLk41QX0sIGluc2V0IDAgLTFweCAxcHggMCAke3NjYWxlcy5uZXV0cmFsLk4yQX1gXG4gIH0sXG4gIGNoZWNrZWRIb3Zlcjoge1xuICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgIGJhY2tncm91bmRJbWFnZTogcHJpbWFyeVN0eWxlLmxpbmVhckdyYWRpZW50LmhvdmVyLFxuICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke3NjYWxlcy5uZXV0cmFsLk41QX0sIGluc2V0IDAgLTFweCAxcHggMCAke3NjYWxlcy5uZXV0cmFsLk4yQX1gXG4gIH0sXG4gIGNoZWNrZWREaXNhYmxlZDoge1xuICAgIGNvbG9yOiBzY2FsZXMubmV1dHJhbC5ONkEsXG4gICAgYmFja2dyb3VuZEltYWdlOiBgbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgJHtzY2FsZXMubmV1dHJhbC5OMkF9LCAke3NjYWxlcy5uZXV0cmFsLk4xQX0pYCxcbiAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtzY2FsZXMubmV1dHJhbC5ONEF9LCBpbnNldCAwIC0xcHggMXB4IDAgJHtzY2FsZXMubmV1dHJhbC5OMkF9YFxuICB9LFxuICBjaGVja2VkQWN0aXZlOiB7XG4gICAgY29sb3I6ICd3aGl0ZScsXG4gICAgYmFja2dyb3VuZEltYWdlOiBwcmltYXJ5U3R5bGUubGluZWFyR3JhZGllbnQuYWN0aXZlLFxuICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke3NjYWxlcy5uZXV0cmFsLk40QX0sIGluc2V0IDAgLTFweCAxcHggMCAke3NjYWxlcy5uZXV0cmFsLk4yQX1gXG4gIH1cbn0pXG5cbi8qKlxuICogVGhlcmUgaXMgb25seSBhIHNpbmdsZSBhcHBlYXJhbmNlIGluIHRoZSBkZWZhdWx0IHRoZW1lLlxuICogQHBhcmFtIHtTdHJpbmd9IGFwcGVhcmFuY2UuXG4gKiBAcmV0dXJuIHtPYmplY3R9IHRoZSBhcHBlYXJhbmNlIG9mIHRoZSBjaGVja2JveC5cbiAqL1xuY29uc3QgZ2V0Q2hlY2tib3hBcHBlYXJhbmNlID0gKCkgPT4ge1xuICByZXR1cm4gZGVmYXVsdEFwcGVhcmFuY2Vcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGNsYXNzTmFtZSBvZiBhIGBDaGVja2JveGAuXG4gKiBAcGFyYW0ge3N0cmluZ30gYXBwZWFyYW5jZVxuICogQHJldHVybiB7c3RyaW5nfSB0aGUgYXBwZWFyYW5jZSBjbGFzcyBuYW1lLlxuICovXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplQ2xhc3NOYW1lKGdldENoZWNrYm94QXBwZWFyYW5jZSlcbiJdfQ==