import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["appearance", "disabled", "height"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { memo, forwardRef } from 'react';
import Box, { splitBoxProps } from 'ui-box';
import { StackingOrder } from '../../constants';
import { SearchIcon } from '../../icons';
import { TextInput } from '../../text-input';

var getIconSizeForInput = function getIconSizeForInput(height) {
  if (height <= 28) return 12;
  if (height <= 32) return 14;
  if (height <= 40) return 16;
  if (height <= 48) return 18;
  return 20;
};

var SearchInput = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function SearchInput(props, ref) {
  var _props$appearance = props.appearance,
      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,
      disabled = props.disabled,
      _props$height = props.height,
      height = _props$height === void 0 ? 32 : _props$height,
      restProps = _objectWithoutProperties(props, _excluded);

  var _splitBoxProps = splitBoxProps(restProps),
      matchedProps = _splitBoxProps.matchedProps,
      remainingProps = _splitBoxProps.remainingProps;

  var width = matchedProps.width;
  var iconSize = getIconSizeForInput(height);
  return /*#__PURE__*/React.createElement(Box, _extends({
    position: "relative",
    display: "inline-flex",
    height: height
  }, matchedProps), /*#__PURE__*/React.createElement(Box, {
    height: height,
    width: height,
    pointerEvents: "none",
    position: "absolute",
    display: "flex",
    justifyContent: "center",
    alignItems: "center"
  }, /*#__PURE__*/React.createElement(SearchIcon, {
    color: "default",
    zIndex: StackingOrder.FOCUSED + 1,
    size: iconSize
  })), /*#__PURE__*/React.createElement(TextInput, _extends({
    ref: ref,
    height: height,
    paddingLeft: height,
    appearance: appearance,
    disabled: disabled,
    width: width,
    type: "search"
  }, remainingProps)));
}));
SearchInput.propTypes = _objectSpread({}, TextInput.propTypes);
export default SearchInput;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zZWFyY2gtaW5wdXQvc3JjL1NlYXJjaElucHV0LmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwibWVtbyIsImZvcndhcmRSZWYiLCJCb3giLCJzcGxpdEJveFByb3BzIiwiU3RhY2tpbmdPcmRlciIsIlNlYXJjaEljb24iLCJUZXh0SW5wdXQiLCJnZXRJY29uU2l6ZUZvcklucHV0IiwiaGVpZ2h0IiwiU2VhcmNoSW5wdXQiLCJwcm9wcyIsInJlZiIsImFwcGVhcmFuY2UiLCJkaXNhYmxlZCIsInJlc3RQcm9wcyIsIm1hdGNoZWRQcm9wcyIsInJlbWFpbmluZ1Byb3BzIiwid2lkdGgiLCJpY29uU2l6ZSIsIkZPQ1VTRUQiLCJwcm9wVHlwZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLElBQWhCLEVBQXNCQyxVQUF0QixRQUF3QyxPQUF4QztBQUNBLE9BQU9DLEdBQVAsSUFBY0MsYUFBZCxRQUFtQyxRQUFuQztBQUNBLFNBQVNDLGFBQVQsUUFBOEIsaUJBQTlCO0FBQ0EsU0FBU0MsVUFBVCxRQUEyQixhQUEzQjtBQUNBLFNBQVNDLFNBQVQsUUFBMEIsa0JBQTFCOztBQUVBLElBQU1DLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0IsQ0FBQUMsTUFBTSxFQUFJO0FBQ3BDLE1BQUlBLE1BQU0sSUFBSSxFQUFkLEVBQWtCLE9BQU8sRUFBUDtBQUNsQixNQUFJQSxNQUFNLElBQUksRUFBZCxFQUFrQixPQUFPLEVBQVA7QUFDbEIsTUFBSUEsTUFBTSxJQUFJLEVBQWQsRUFBa0IsT0FBTyxFQUFQO0FBQ2xCLE1BQUlBLE1BQU0sSUFBSSxFQUFkLEVBQWtCLE9BQU8sRUFBUDtBQUNsQixTQUFPLEVBQVA7QUFDRCxDQU5EOztBQVFBLElBQU1DLFdBQVcsZ0JBQUdULElBQUksZUFDdEJDLFVBQVUsQ0FBQyxTQUFTUSxXQUFULENBQXFCQyxLQUFyQixFQUE0QkMsR0FBNUIsRUFBaUM7QUFDMUMsMEJBQXdFRCxLQUF4RSxDQUFRRSxVQUFSO0FBQUEsTUFBUUEsVUFBUixrQ0FBcUIsU0FBckI7QUFBQSxNQUFnQ0MsUUFBaEMsR0FBd0VILEtBQXhFLENBQWdDRyxRQUFoQztBQUFBLHNCQUF3RUgsS0FBeEUsQ0FBMENGLE1BQTFDO0FBQUEsTUFBMENBLE1BQTFDLDhCQUFtRCxFQUFuRDtBQUFBLE1BQTBETSxTQUExRCw0QkFBd0VKLEtBQXhFOztBQUNBLHVCQUF5Q1AsYUFBYSxDQUFDVyxTQUFELENBQXREO0FBQUEsTUFBUUMsWUFBUixrQkFBUUEsWUFBUjtBQUFBLE1BQXNCQyxjQUF0QixrQkFBc0JBLGNBQXRCOztBQUNBLE1BQVFDLEtBQVIsR0FBa0JGLFlBQWxCLENBQVFFLEtBQVI7QUFDQSxNQUFNQyxRQUFRLEdBQUdYLG1CQUFtQixDQUFDQyxNQUFELENBQXBDO0FBRUEsc0JBQ0Usb0JBQUMsR0FBRDtBQUFLLElBQUEsUUFBUSxFQUFDLFVBQWQ7QUFBeUIsSUFBQSxPQUFPLEVBQUMsYUFBakM7QUFBK0MsSUFBQSxNQUFNLEVBQUVBO0FBQXZELEtBQW1FTyxZQUFuRSxnQkFDRSxvQkFBQyxHQUFEO0FBQ0UsSUFBQSxNQUFNLEVBQUVQLE1BRFY7QUFFRSxJQUFBLEtBQUssRUFBRUEsTUFGVDtBQUdFLElBQUEsYUFBYSxFQUFDLE1BSGhCO0FBSUUsSUFBQSxRQUFRLEVBQUMsVUFKWDtBQUtFLElBQUEsT0FBTyxFQUFDLE1BTFY7QUFNRSxJQUFBLGNBQWMsRUFBQyxRQU5qQjtBQU9FLElBQUEsVUFBVSxFQUFDO0FBUGIsa0JBU0Usb0JBQUMsVUFBRDtBQUFZLElBQUEsS0FBSyxFQUFDLFNBQWxCO0FBQTRCLElBQUEsTUFBTSxFQUFFSixhQUFhLENBQUNlLE9BQWQsR0FBd0IsQ0FBNUQ7QUFBK0QsSUFBQSxJQUFJLEVBQUVEO0FBQXJFLElBVEYsQ0FERixlQVlFLG9CQUFDLFNBQUQ7QUFDRSxJQUFBLEdBQUcsRUFBRVAsR0FEUDtBQUVFLElBQUEsTUFBTSxFQUFFSCxNQUZWO0FBR0UsSUFBQSxXQUFXLEVBQUVBLE1BSGY7QUFJRSxJQUFBLFVBQVUsRUFBRUksVUFKZDtBQUtFLElBQUEsUUFBUSxFQUFFQyxRQUxaO0FBTUUsSUFBQSxLQUFLLEVBQUVJLEtBTlQ7QUFPRSxJQUFBLElBQUksRUFBQztBQVBQLEtBUU1ELGNBUk4sRUFaRixDQURGO0FBeUJELENBL0JTLENBRFksQ0FBeEI7QUFtQ0FQLFdBQVcsQ0FBQ1csU0FBWixxQkFJS2QsU0FBUyxDQUFDYyxTQUpmO0FBT0EsZUFBZVgsV0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBtZW1vLCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgQm94LCB7IHNwbGl0Qm94UHJvcHMgfSBmcm9tICd1aS1ib3gnXG5pbXBvcnQgeyBTdGFja2luZ09yZGVyIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJ1xuaW1wb3J0IHsgU2VhcmNoSWNvbiB9IGZyb20gJy4uLy4uL2ljb25zJ1xuaW1wb3J0IHsgVGV4dElucHV0IH0gZnJvbSAnLi4vLi4vdGV4dC1pbnB1dCdcblxuY29uc3QgZ2V0SWNvblNpemVGb3JJbnB1dCA9IGhlaWdodCA9PiB7XG4gIGlmIChoZWlnaHQgPD0gMjgpIHJldHVybiAxMlxuICBpZiAoaGVpZ2h0IDw9IDMyKSByZXR1cm4gMTRcbiAgaWYgKGhlaWdodCA8PSA0MCkgcmV0dXJuIDE2XG4gIGlmIChoZWlnaHQgPD0gNDgpIHJldHVybiAxOFxuICByZXR1cm4gMjBcbn1cblxuY29uc3QgU2VhcmNoSW5wdXQgPSBtZW1vKFxuICBmb3J3YXJkUmVmKGZ1bmN0aW9uIFNlYXJjaElucHV0KHByb3BzLCByZWYpIHtcbiAgICBjb25zdCB7IGFwcGVhcmFuY2UgPSAnZGVmYXVsdCcsIGRpc2FibGVkLCBoZWlnaHQgPSAzMiwgLi4ucmVzdFByb3BzIH0gPSBwcm9wc1xuICAgIGNvbnN0IHsgbWF0Y2hlZFByb3BzLCByZW1haW5pbmdQcm9wcyB9ID0gc3BsaXRCb3hQcm9wcyhyZXN0UHJvcHMpXG4gICAgY29uc3QgeyB3aWR0aCB9ID0gbWF0Y2hlZFByb3BzXG4gICAgY29uc3QgaWNvblNpemUgPSBnZXRJY29uU2l6ZUZvcklucHV0KGhlaWdodClcblxuICAgIHJldHVybiAoXG4gICAgICA8Qm94IHBvc2l0aW9uPVwicmVsYXRpdmVcIiBkaXNwbGF5PVwiaW5saW5lLWZsZXhcIiBoZWlnaHQ9e2hlaWdodH0gey4uLm1hdGNoZWRQcm9wc30+XG4gICAgICAgIDxCb3hcbiAgICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgICB3aWR0aD17aGVpZ2h0fVxuICAgICAgICAgIHBvaW50ZXJFdmVudHM9XCJub25lXCJcbiAgICAgICAgICBwb3NpdGlvbj1cImFic29sdXRlXCJcbiAgICAgICAgICBkaXNwbGF5PVwiZmxleFwiXG4gICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIlxuICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICA+XG4gICAgICAgICAgPFNlYXJjaEljb24gY29sb3I9XCJkZWZhdWx0XCIgekluZGV4PXtTdGFja2luZ09yZGVyLkZPQ1VTRUQgKyAxfSBzaXplPXtpY29uU2l6ZX0gLz5cbiAgICAgICAgPC9Cb3g+XG4gICAgICAgIDxUZXh0SW5wdXRcbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgICBwYWRkaW5nTGVmdD17aGVpZ2h0fVxuICAgICAgICAgIGFwcGVhcmFuY2U9e2FwcGVhcmFuY2V9XG4gICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAgICAgICB0eXBlPVwic2VhcmNoXCJcbiAgICAgICAgICB7Li4ucmVtYWluaW5nUHJvcHN9XG4gICAgICAgIC8+XG4gICAgICA8L0JveD5cbiAgICApXG4gIH0pXG4pXG5cblNlYXJjaElucHV0LnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIENvbXBvc2VzIHRoZSBUZXh0SW5wdXQgY29tcG9uZW50IGFzIHRoZSBiYXNlLlxuICAgKi9cbiAgLi4uVGV4dElucHV0LnByb3BUeXBlc1xufVxuXG5leHBvcnQgZGVmYXVsdCBTZWFyY2hJbnB1dFxuIl19