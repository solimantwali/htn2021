import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["children", "disabled", "height", "isHighlighted", "isSelectable", "isSelected", "item", "onDeselect", "onSelect", "style"],
    _excluded2 = ["className"];
import React, { memo, forwardRef } from 'react';
import PropTypes from 'prop-types';
import { useStyleConfig } from '../../hooks';
import { Pane } from '../../layers';
import TableRow from '../../table/src/TableRow';
import TextTableCell from '../../table/src/TextTableCell';
export var pseudoSelectors = {
  _active: '&[aria-current="true"]:active, &[data-isselectable="true"]:active',
  _before: '&:before',
  _disabled: '&[disabled]',
  _focus: ':focus',
  _hover: ':hover',
  _isSelectable: '&[data-isselectable="true"]',
  _selected: '&[aria-current="true"]'
};
var internalStyles = {
  alignItems: 'center',
  display: 'flex'
};
var emptyObject = {};
var Option = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Option(props, ref) {
  var children = props.children,
      disabled = props.disabled,
      height = props.height,
      isHighlighted = props.isHighlighted,
      isSelectable = props.isSelectable,
      isSelected = props.isSelected,
      item = props.item,
      onDeselect = props.onDeselect,
      onSelect = props.onSelect,
      style = props.style,
      rest = _objectWithoutProperties(props, _excluded);

  var _useStyleConfig = useStyleConfig('Option', emptyObject, pseudoSelectors, internalStyles),
      themedClassName = _useStyleConfig.className,
      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);

  return /*#__PURE__*/React.createElement(TableRow, _extends({
    className: themedClassName,
    isSelectable: isSelectable && !disabled,
    isHighlighted: isHighlighted,
    onSelect: onSelect,
    onDeselect: onDeselect,
    isSelected: isSelected,
    style: style
  }, boxProps, rest, {
    ref: ref
  }), /*#__PURE__*/React.createElement(TextTableCell, {
    borderRight: null,
    flex: 1,
    alignSelf: "stretch",
    height: height,
    cursor: disabled ? 'default' : 'pointer'
  }, /*#__PURE__*/React.createElement(Pane, {
    alignItems: "center",
    display: "flex"
  }, children)));
}));
Option.propTypes = {
  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
  disabled: PropTypes.bool,
  height: PropTypes.number,
  isHighlighted: PropTypes.bool,
  isSelectable: PropTypes.bool,
  isSelected: PropTypes.bool,
  item: PropTypes.any,
  onDeselect: PropTypes.func,
  onSelect: PropTypes.func,
  style: PropTypes.any
};
export default Option;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zZWxlY3QtbWVudS9zcmMvT3B0aW9uLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwibWVtbyIsImZvcndhcmRSZWYiLCJQcm9wVHlwZXMiLCJ1c2VTdHlsZUNvbmZpZyIsIlBhbmUiLCJUYWJsZVJvdyIsIlRleHRUYWJsZUNlbGwiLCJwc2V1ZG9TZWxlY3RvcnMiLCJfYWN0aXZlIiwiX2JlZm9yZSIsIl9kaXNhYmxlZCIsIl9mb2N1cyIsIl9ob3ZlciIsIl9pc1NlbGVjdGFibGUiLCJfc2VsZWN0ZWQiLCJpbnRlcm5hbFN0eWxlcyIsImFsaWduSXRlbXMiLCJkaXNwbGF5IiwiZW1wdHlPYmplY3QiLCJPcHRpb24iLCJwcm9wcyIsInJlZiIsImNoaWxkcmVuIiwiZGlzYWJsZWQiLCJoZWlnaHQiLCJpc0hpZ2hsaWdodGVkIiwiaXNTZWxlY3RhYmxlIiwiaXNTZWxlY3RlZCIsIml0ZW0iLCJvbkRlc2VsZWN0Iiwib25TZWxlY3QiLCJzdHlsZSIsInJlc3QiLCJ0aGVtZWRDbGFzc05hbWUiLCJjbGFzc05hbWUiLCJib3hQcm9wcyIsInByb3BUeXBlcyIsIm9uZU9mVHlwZSIsInN0cmluZyIsIm5vZGUiLCJib29sIiwibnVtYmVyIiwiYW55IiwiZnVuYyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLElBQWhCLEVBQXNCQyxVQUF0QixRQUF3QyxPQUF4QztBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxTQUFTQyxjQUFULFFBQStCLGFBQS9CO0FBQ0EsU0FBU0MsSUFBVCxRQUFxQixjQUFyQjtBQUNBLE9BQU9DLFFBQVAsTUFBcUIsMEJBQXJCO0FBQ0EsT0FBT0MsYUFBUCxNQUEwQiwrQkFBMUI7QUFFQSxPQUFPLElBQU1DLGVBQWUsR0FBRztBQUM3QkMsRUFBQUEsT0FBTyxFQUFFLG1FQURvQjtBQUU3QkMsRUFBQUEsT0FBTyxFQUFFLFVBRm9CO0FBRzdCQyxFQUFBQSxTQUFTLEVBQUUsYUFIa0I7QUFJ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UEM7QUFRakJiLEVBQUFBLFVBQVUsRUFBRTNCLFNBQVMsQ0FBQ3lDLElBUkw7QUFTakJiLEVBQUFBLFFBQVEsRUFBRTVCLFNBQVMsQ0FBQ3lDLElBVEg7QUFVakJaLEVBQUFBLEtBQUssRUFBRTdCLFNBQVMsQ0FBQ3dDO0FBVkEsQ0FBbkI7QUFhQSxlQUFldkIsTUFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBtZW1vLCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyB1c2VTdHlsZUNvbmZpZyB9IGZyb20gJy4uLy4uL2hvb2tzJ1xuaW1wb3J0IHsgUGFuZSB9IGZyb20gJy4uLy4uL2xheWVycydcbmltcG9ydCBUYWJsZVJvdyBmcm9tICcuLi8uLi90YWJsZS9zcmMvVGFibGVSb3cnXG5pbXBvcnQgVGV4dFRhYmxlQ2VsbCBmcm9tICcuLi8uLi90YWJsZS9zcmMvVGV4dFRhYmxlQ2VsbCdcblxuZXhwb3J0IGNvbnN0IHBzZXVkb1NlbGVjdG9ycyA9IHtcbiAgX2FjdGl2ZTogJyZbYXJpYS1jdXJyZW50PVwidHJ1ZVwiXTphY3RpdmUsICZbZGF0YS1pc3NlbGVjdGFibGU9XCJ0cnVlXCJdOmFjdGl2ZScsXG4gIF9iZWZvcmU6ICcmOmJlZm9yZScsXG4gIF9kaXNhYmxlZDogJyZbZGlzYWJsZWRdJyxcbiAgX2ZvY3VzOiAnOmZvY3VzJyxcbiAgX2hvdmVyOiAnOmhvdmVyJyxcbiAgX2lzU2VsZWN0YWJsZTogJyZbZGF0YS1pc3NlbGVjdGFibGU9XCJ0cnVlXCJdJyxcbiAgX3NlbGVjdGVkOiAnJlthcmlhLWN1cnJlbnQ9XCJ0cnVlXCJdJ1xufVxuXG5jb25zdCBpbnRlcm5hbFN0eWxlcyA9IHtcbiAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gIGRpc3BsYXk6ICdmbGV4J1xufVxuXG5jb25zdCBlbXB0eU9iamVjdCA9IHt9XG5cbmNvbnN0IE9wdGlvbiA9IG1lbW8oXG4gIGZvcndhcmRSZWYoZnVuY3Rpb24gT3B0aW9uKHByb3BzLCByZWYpIHtcbiAgICBjb25zdCB7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIGRpc2FibGVkLFxuICAgICAgaGVpZ2h0LFxuICAgICAgaXNIaWdobGlnaHRlZCxcbiAgICAgIGlzU2VsZWN0YWJsZSxcbiAgICAgIGlzU2VsZWN0ZWQsXG4gICAgICBpdGVtLFxuICAgICAgb25EZXNlbGVjdCxcbiAgICAgIG9uU2VsZWN0LFxuICAgICAgc3R5bGUsXG4gICAgICAuLi5yZXN0XG4gICAgfSA9IHByb3BzXG5cbiAgICBjb25zdCB7IGNsYXNzTmFtZTogdGhlbWVkQ2xhc3NOYW1lLCAuLi5ib3hQcm9wcyB9ID0gdXNlU3R5bGVDb25maWcoXG4gICAgICAnT3B0aW9uJyxcbiAgICAgIGVtcHR5T2JqZWN0LFxuICAgICAgcHNldWRvU2VsZWN0b3JzLFxuICAgICAgaW50ZXJuYWxTdHlsZXNcbiAgICApXG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRhYmxlUm93XG4gICAgICAgIGNsYXNzTmFtZT17dGhlbWVkQ2xhc3NOYW1lfVxuICAgICAgICBpc1NlbGVjdGFibGU9e2lzU2VsZWN0YWJsZSAmJiAhZGlzYWJsZWR9XG4gICAgICAgIGlzSGlnaGxpZ2h0ZWQ9e2lzSGlnaGxpZ2h0ZWR9XG4gICAgICAgIG9uU2VsZWN0PXtvblNlbGVjdH1cbiAgICAgICAgb25EZXNlbGVjdD17b25EZXNlbGVjdH1cbiAgICAgICAgaXNTZWxlY3RlZD17aXNTZWxlY3RlZH1cbiAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICB7Li4uYm94UHJvcHN9XG4gICAgICAgIHsuLi5yZXN0fVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgID5cbiAgICAgICAgPFRleHRUYWJsZUNlbGxcbiAgICAgICAgICBib3JkZXJSaWdodD17bnVsbH1cbiAgICAgICAgICBmbGV4PXsxfVxuICAgICAgICAgIGFsaWduU2VsZj1cInN0cmV0Y2hcIlxuICAgICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICAgIGN1cnNvcj17ZGlzYWJsZWQgPyAnZGVmYXVsdCcgOiAncG9pbnRlcid9XG4gICAgICAgID5cbiAgICAgICAgICA8UGFuZSBhbGlnbkl0ZW1zPVwiY2VudGVyXCIgZGlzcGxheT1cImZsZXhcIj5cbiAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICA8L1BhbmU+XG4gICAgICAgIDwvVGV4dFRhYmxlQ2VsbD5cbiAgICAgIDwvVGFibGVSb3c+XG4gICAgKVxuICB9KVxuKVxuXG5PcHRpb24ucHJvcFR5cGVzID0ge1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG4gIGlzSGlnaGxpZ2h0ZWQ6IFByb3BUeXBlcy5ib29sLFxuICBpc1NlbGVjdGFibGU6IFByb3BUeXBlcy5ib29sLFxuICBpc1NlbGVjdGVkOiBQcm9wVHlwZXMuYm9vbCxcbiAgaXRlbTogUHJvcFR5cGVzLmFueSxcbiAgb25EZXNlbGVjdDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uU2VsZWN0OiBQcm9wVHlwZXMuZnVuYyxcbiAgc3R5bGU6IFByb3BUeXBlcy5hbnlcbn1cblxuZXhwb3J0IGRlZmF1bHQgT3B0aW9uXG4iXX0=