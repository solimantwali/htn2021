import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["children", "className", "size"],
    _excluded2 = ["className"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { memo, forwardRef } from 'react';
import cx from 'classnames';
import PropTypes from 'prop-types';
import Box from 'ui-box';
import { useStyleConfig } from '../../hooks';
var emptyObject = {};
var internalStyles = {
  margin: 0,
  marginLeft: '1.1em',
  padding: 0,
  listStyle: 'decimal'
};
var OrderedList = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function OrderedList(props, ref) {
  var children = props.children,
      className = props.className,
      _props$size = props.size,
      size = _props$size === void 0 ? 400 : _props$size,
      rest = _objectWithoutProperties(props, _excluded);

  var _useStyleConfig = useStyleConfig('List', {
    size: size
  }, emptyObject, internalStyles),
      themedClassName = _useStyleConfig.className,
      styleProps = _objectWithoutProperties(_useStyleConfig, _excluded2);

  var finalChildren = React.Children.map(children, function (child) {
    if (! /*#__PURE__*/React.isValidElement(child)) {
      return child;
    }

    return /*#__PURE__*/React.cloneElement(child, {
      // Prefer more granularly defined icon if present
      size: child.props.size || size
    });
  });
  return /*#__PURE__*/React.createElement(Box, _extends({
    is: "ol",
    className: cx(className, themedClassName)
  }, styleProps, rest, {
    ref: ref
  }), finalChildren);
}));
OrderedList.propTypes = _objectSpread(_objectSpread({}, Box.propTypes), {}, {
  /**
   * Size of the text used in a list item.
   * Can be: 300, 400, 500, 600.
   */
  size: PropTypes.oneOf([300, 400, 500, 600])
});
export default OrderedList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBvZ3JhcGh5L3NyYy9PcmRlcmVkTGlzdC5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsIm1lbW8iLCJmb3J3YXJkUmVmIiwiY3giLCJQcm9wVHlwZXMiLCJCb3giLCJ1c2VTdHlsZUNvbmZpZyIsImVtcHR5T2JqZWN0IiwiaW50ZXJuYWxTdHlsZXMiLCJtYXJnaW4iLCJtYXJnaW5MZWZ0IiwicGFkZGluZyIsImxpc3RTdHlsZSIsIk9yZGVyZWRMaXN0IiwicHJvcHMiLCJyZWYiLCJjaGlsZHJlbiIsImNsYXNzTmFtZSIsInNpemUiLCJyZXN0IiwidGhlbWVkQ2xhc3NOYW1lIiwic3R5bGVQcm9wcyIsImZpbmFsQ2hpbGRyZW4iLCJDaGlsZHJlbiIsIm1hcCIsImNoaWxkIiwiaXNWYWxpZEVsZW1lbnQiLCJjbG9uZUVsZW1lbnQiLCJwcm9wVHlwZXMiLCJvbmVPZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLElBQWhCLEVBQXNCQyxVQUF0QixRQUF3QyxPQUF4QztBQUNBLE9BQU9DLEVBQVAsTUFBZSxZQUFmO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLE9BQU9DLEdBQVAsTUFBZ0IsUUFBaEI7QUFDQSxTQUFTQyxjQUFULFFBQStCLGFBQS9CO0FBRUEsSUFBTUMsV0FBVyxHQUFHLEVBQXBCO0FBRUEsSUFBTUMsY0FBYyxHQUFHO0FBQ3JCQyxFQUFBQSxNQUFNLEVBQUUsQ0FEYTtBQUVyQkMsRUFBQUEsVUFBVSxFQUFFLE9BRlM7QUFHckJDLEVBQUFBLE9BQU8sRUFBRSxDQUhZO0FBSXJCQyxFQUFBQSxTQUFTLEVBQUU7QUFKVSxDQUF2QjtBQU9BLElBQU1DLFdBQVcsZ0JBQUdaLElBQUksZUFDdEJDLFVBQVUsQ0FBQyxTQUFTVyxXQUFULENBQXFCQyxLQUFyQixFQUE0QkMsR0FBNUIsRUFBaUM7QUFDMUMsTUFBUUMsUUFBUixHQUFxREYsS0FBckQsQ0FBUUUsUUFBUjtBQUFBLE1BQWtCQyxTQUFsQixHQUFxREgsS0FBckQsQ0FBa0JHLFNBQWxCO0FBQUEsb0JBQXFESCxLQUFyRCxDQUE2QkksSUFBN0I7QUFBQSxNQUE2QkEsSUFBN0IsNEJBQW9DLEdBQXBDO0FBQUEsTUFBNENDLElBQTVDLDRCQUFxREwsS0FBckQ7O0FBRUEsd0JBQXNEUixjQUFjLENBQUMsTUFBRCxFQUFTO0FBQUVZLElBQUFBLElBQUksRUFBSkE7QUFBRixHQUFULEVBQW1CWCxXQUFuQixFQUFnQ0MsY0FBaEMsQ0FBcEU7QUFBQSxNQUFtQlksZUFBbkIsbUJBQVFILFNBQVI7QUFBQSxNQUF1Q0ksVUFBdkM7O0FBRUEsTUFBTUMsYUFBYSxHQUFHdEIsS0FBSyxDQUFDdUIsUUFBTixDQUFlQyxHQUFmLENBQW1CUixRQUFuQixFQUE2QixVQUFBUyxLQUFLLEVBQUk7QUFDMUQsUUFBSSxlQUFDekIsS0FBSyxDQUFDMEIsY0FBTixDQUFxQkQsS0FBckIsQ0FBTCxFQUFrQztBQUNoQyxhQUFPQSxLQUFQO0FBQ0Q7O0FBRUQsd0JBQU96QixLQUFLLENBQUMyQixZQUFOLENBQW1CRixLQUFuQixFQUEwQjtBQUMvQjtBQUNBUCxNQUFBQSxJQUFJLEVBQUVPLEtBQUssQ0FBQ1gsS0FBTixDQUFZSSxJQUFaLElBQW9CQTtBQUZLLEtBQTFCLENBQVA7QUFJRCxHQVRxQixDQUF0QjtBQVdBLHNCQUNFLG9CQUFDLEdBQUQ7QUFBSyxJQUFBLEVBQUUsRUFBQyxJQUFSO0FBQWEsSUFBQSxTQUFTLEVBQUVmLEVBQUUsQ0FBQ2MsU0FBRCxFQUFZRyxlQUFaO0FBQTFCLEtBQTREQyxVQUE1RCxFQUE0RUYsSUFBNUU7QUFBa0YsSUFBQSxHQUFHLEVBQUVKO0FBQXZGLE1BQ0dPLGFBREgsQ0FERjtBQUtELENBckJTLENBRFksQ0FBeEI7QUF5QkFULFdBQVcsQ0FBQ2UsU0FBWixtQ0FDS3ZCLEdBQUcsQ0FBQ3VCLFNBRFQ7QUFHRTtBQUNGO0FBQ0E7QUFDQTtBQUNFVixFQUFBQSxJQUFJLEVBQUVkLFNBQVMsQ0FBQ3lCLEtBQVYsQ0FBZ0IsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsRUFBZ0IsR0FBaEIsQ0FBaEI7QUFQUjtBQVVBLGVBQWVoQixXQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IG1lbW8sIGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBjeCBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IEJveCBmcm9tICd1aS1ib3gnXG5pbXBvcnQgeyB1c2VTdHlsZUNvbmZpZyB9IGZyb20gJy4uLy4uL2hvb2tzJ1xuXG5jb25zdCBlbXB0eU9iamVjdCA9IHt9XG5cbmNvbnN0IGludGVybmFsU3R5bGVzID0ge1xuICBtYXJnaW46IDAsXG4gIG1hcmdpbkxlZnQ6ICcxLjFlbScsXG4gIHBhZGRpbmc6IDAsXG4gIGxpc3RTdHlsZTogJ2RlY2ltYWwnXG59XG5cbmNvbnN0IE9yZGVyZWRMaXN0ID0gbWVtbyhcbiAgZm9yd2FyZFJlZihmdW5jdGlvbiBPcmRlcmVkTGlzdChwcm9wcywgcmVmKSB7XG4gICAgY29uc3QgeyBjaGlsZHJlbiwgY2xhc3NOYW1lLCBzaXplID0gNDAwLCAuLi5yZXN0IH0gPSBwcm9wc1xuXG4gICAgY29uc3QgeyBjbGFzc05hbWU6IHRoZW1lZENsYXNzTmFtZSwgLi4uc3R5bGVQcm9wcyB9ID0gdXNlU3R5bGVDb25maWcoJ0xpc3QnLCB7IHNpemUgfSwgZW1wdHlPYmplY3QsIGludGVybmFsU3R5bGVzKVxuXG4gICAgY29uc3QgZmluYWxDaGlsZHJlbiA9IFJlYWN0LkNoaWxkcmVuLm1hcChjaGlsZHJlbiwgY2hpbGQgPT4ge1xuICAgICAgaWYgKCFSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgcmV0dXJuIGNoaWxkXG4gICAgICB9XG5cbiAgICAgIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHtcbiAgICAgICAgLy8gUHJlZmVyIG1vcmUgZ3JhbnVsYXJseSBkZWZpbmVkIGljb24gaWYgcHJlc2VudFxuICAgICAgICBzaXplOiBjaGlsZC5wcm9wcy5zaXplIHx8IHNpemVcbiAgICAgIH0pXG4gICAgfSlcblxuICAgIHJldHVybiAoXG4gICAgICA8Qm94IGlzPVwib2xcIiBjbGFzc05hbWU9e2N4KGNsYXNzTmFtZSwgdGhlbWVkQ2xhc3NOYW1lKX0gey4uLnN0eWxlUHJvcHN9IHsuLi5yZXN0fSByZWY9e3JlZn0+XG4gICAgICAgIHtmaW5hbENoaWxkcmVufVxuICAgICAgPC9Cb3g+XG4gICAgKVxuICB9KVxuKVxuXG5PcmRlcmVkTGlzdC5wcm9wVHlwZXMgPSB7XG4gIC4uLkJveC5wcm9wVHlwZXMsXG5cbiAgLyoqXG4gICAqIFNpemUgb2YgdGhlIHRleHQgdXNlZCBpbiBhIGxpc3QgaXRlbS5cbiAgICogQ2FuIGJlOiAzMDAsIDQwMCwgNTAwLCA2MDAuXG4gICAqL1xuICBzaXplOiBQcm9wVHlwZXMub25lT2YoWzMwMCwgNDAwLCA1MDAsIDYwMF0pXG59XG5cbmV4cG9ydCBkZWZhdWx0IE9yZGVyZWRMaXN0XG4iXX0=