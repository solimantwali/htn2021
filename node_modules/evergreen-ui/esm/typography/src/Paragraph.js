import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["color", "fontFamily", "size"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { forwardRef, memo } from 'react';
import PropTypes from 'prop-types';
import Box from 'ui-box';
import { useStyleConfig } from '../../hooks';
import { useTheme } from '../../theme';
var emptyObject = {};
var Paragraph = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Paragraph(props, ref) {
  var _props$color = props.color,
      color = _props$color === void 0 ? 'default' : _props$color,
      _props$fontFamily = props.fontFamily,
      fontFamily = _props$fontFamily === void 0 ? 'ui' : _props$fontFamily,
      _props$size = props.size,
      size = _props$size === void 0 ? 400 : _props$size,
      restProps = _objectWithoutProperties(props, _excluded);

  var theme = useTheme();
  var colors = theme.colors,
      fontFamilies = theme.fontFamilies;
  var themedFontFamily = fontFamilies[fontFamily] || fontFamily;
  var themedColor = colors[color] || colors.text && colors.text[color] || color;
  var textStyle = useStyleConfig('Paragraph', {
    size: size
  }, emptyObject, emptyObject);
  return /*#__PURE__*/React.createElement(Box, _extends({
    is: "p",
    ref: ref
  }, textStyle, {
    fontFamily: themedFontFamily,
    color: themedColor
  }, restProps));
}));
Paragraph.propTypes = _objectSpread(_objectSpread({}, Box.propTypes), {}, {
  /**
   * Size of the text style.
   * Can be: 300, 400, 500.
   */
  size: PropTypes.oneOf([300, 400, 500]),

  /**
   * Font family.
   * Can be: `ui`, `display` or `mono` or a custom font family.
   */
  fontFamily: PropTypes.string
});
export default Paragraph;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBvZ3JhcGh5L3NyYy9QYXJhZ3JhcGguanMiXSwibmFtZXMiOlsiUmVhY3QiLCJmb3J3YXJkUmVmIiwibWVtbyIsIlByb3BUeXBlcyIsIkJveCIsInVzZVN0eWxlQ29uZmlnIiwidXNlVGhlbWUiLCJlbXB0eU9iamVjdCIsIlBhcmFncmFwaCIsInByb3BzIiwicmVmIiwiY29sb3IiLCJmb250RmFtaWx5Iiwic2l6ZSIsInJlc3RQcm9wcyIsInRoZW1lIiwiY29sb3JzIiwiZm9udEZhbWlsaWVzIiwidGhlbWVkRm9udEZhbWlseSIsInRoZW1lZENvbG9yIiwidGV4dCIsInRleHRTdHlsZSIsInByb3BUeXBlcyIsIm9uZU9mIiwic3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxPQUFPQSxLQUFQLElBQWdCQyxVQUFoQixFQUE0QkMsSUFBNUIsUUFBd0MsT0FBeEM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsR0FBUCxNQUFnQixRQUFoQjtBQUNBLFNBQVNDLGNBQVQsUUFBK0IsYUFBL0I7QUFDQSxTQUFTQyxRQUFULFFBQXlCLGFBQXpCO0FBRUEsSUFBTUMsV0FBVyxHQUFHLEVBQXBCO0FBRUEsSUFBTUMsU0FBUyxnQkFBR04sSUFBSSxlQUNwQkQsVUFBVSxDQUFDLFNBQVNPLFNBQVQsQ0FBbUJDLEtBQW5CLEVBQTBCQyxHQUExQixFQUErQjtBQUN4QyxxQkFBMkVELEtBQTNFLENBQVFFLEtBQVI7QUFBQSxNQUFRQSxLQUFSLDZCQUFnQixTQUFoQjtBQUFBLDBCQUEyRUYsS0FBM0UsQ0FBMkJHLFVBQTNCO0FBQUEsTUFBMkJBLFVBQTNCLGtDQUF3QyxJQUF4QztBQUFBLG9CQUEyRUgsS0FBM0UsQ0FBOENJLElBQTlDO0FBQUEsTUFBOENBLElBQTlDLDRCQUFxRCxHQUFyRDtBQUFBLE1BQTZEQyxTQUE3RCw0QkFBMkVMLEtBQTNFOztBQUVBLE1BQU1NLEtBQUssR0FBR1QsUUFBUSxFQUF0QjtBQUVBLE1BQVFVLE1BQVIsR0FBaUNELEtBQWpDLENBQVFDLE1BQVI7QUFBQSxNQUFnQkMsWUFBaEIsR0FBaUNGLEtBQWpDLENBQWdCRSxZQUFoQjtBQUVBLE1BQU1DLGdCQUFnQixHQUFHRCxZQUFZLENBQUNMLFVBQUQsQ0FBWixJQUE0QkEsVUFBckQ7QUFDQSxNQUFNTyxXQUFXLEdBQUdILE1BQU0sQ0FBQ0wsS0FBRCxDQUFOLElBQWtCSyxNQUFNLENBQUNJLElBQVAsSUFBZUosTUFBTSxDQUFDSSxJQUFQLENBQVlULEtBQVosQ0FBakMsSUFBd0RBLEtBQTVFO0FBRUEsTUFBTVUsU0FBUyxHQUFHaEIsY0FBYyxDQUFDLFdBQUQsRUFBYztBQUFFUSxJQUFBQSxJQUFJLEVBQUpBO0FBQUYsR0FBZCxFQUF3Qk4sV0FBeEIsRUFBcUNBLFdBQXJDLENBQWhDO0FBRUEsc0JBQU8sb0JBQUMsR0FBRDtBQUFLLElBQUEsRUFBRSxFQUFDLEdBQVI7QUFBWSxJQUFBLEdBQUcsRUFBRUc7QUFBakIsS0FBMEJXLFNBQTFCO0FBQXFDLElBQUEsVUFBVSxFQUFFSCxnQkFBakQ7QUFBbUUsSUFBQSxLQUFLLEVBQUVDO0FBQTFFLEtBQTJGTCxTQUEzRixFQUFQO0FBQ0QsQ0FiUyxDQURVLENBQXRCO0FBaUJBTixTQUFTLENBQUNjLFNBQVYsbUNBSUtsQixHQUFHLENBQUNrQixTQUpUO0FBTUU7QUFDRjtBQUNBO0FBQ0E7QUFDRVQsRUFBQUEsSUFBSSxFQUFFVixTQUFTLENBQUNvQixLQUFWLENBQWdCLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLENBQWhCLENBVlI7O0FBWUU7QUFDRjtBQUNBO0FBQ0E7QUFDRVgsRUFBQUEsVUFBVSxFQUFFVCxTQUFTLENBQUNxQjtBQWhCeEI7QUFtQkEsZUFBZWhCLFNBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgZm9yd2FyZFJlZiwgbWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IEJveCBmcm9tICd1aS1ib3gnXG5pbXBvcnQgeyB1c2VTdHlsZUNvbmZpZyB9IGZyb20gJy4uLy4uL2hvb2tzJ1xuaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tICcuLi8uLi90aGVtZSdcblxuY29uc3QgZW1wdHlPYmplY3QgPSB7fVxuXG5jb25zdCBQYXJhZ3JhcGggPSBtZW1vKFxuICBmb3J3YXJkUmVmKGZ1bmN0aW9uIFBhcmFncmFwaChwcm9wcywgcmVmKSB7XG4gICAgY29uc3QgeyBjb2xvciA9ICdkZWZhdWx0JywgZm9udEZhbWlseSA9ICd1aScsIHNpemUgPSA0MDAsIC4uLnJlc3RQcm9wcyB9ID0gcHJvcHNcblxuICAgIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKVxuXG4gICAgY29uc3QgeyBjb2xvcnMsIGZvbnRGYW1pbGllcyB9ID0gdGhlbWVcblxuICAgIGNvbnN0IHRoZW1lZEZvbnRGYW1pbHkgPSBmb250RmFtaWxpZXNbZm9udEZhbWlseV0gfHwgZm9udEZhbWlseVxuICAgIGNvbnN0IHRoZW1lZENvbG9yID0gY29sb3JzW2NvbG9yXSB8fCAoY29sb3JzLnRleHQgJiYgY29sb3JzLnRleHRbY29sb3JdKSB8fCBjb2xvclxuXG4gICAgY29uc3QgdGV4dFN0eWxlID0gdXNlU3R5bGVDb25maWcoJ1BhcmFncmFwaCcsIHsgc2l6ZSB9LCBlbXB0eU9iamVjdCwgZW1wdHlPYmplY3QpXG5cbiAgICByZXR1cm4gPEJveCBpcz1cInBcIiByZWY9e3JlZn0gey4uLnRleHRTdHlsZX0gZm9udEZhbWlseT17dGhlbWVkRm9udEZhbWlseX0gY29sb3I9e3RoZW1lZENvbG9yfSB7Li4ucmVzdFByb3BzfSAvPlxuICB9KVxuKVxuXG5QYXJhZ3JhcGgucHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogQ29tcG9zZXMgdGhlIEJveCBjb21wb25lbnQgYXMgdGhlIGJhc2UuXG4gICAqL1xuICAuLi5Cb3gucHJvcFR5cGVzLFxuXG4gIC8qKlxuICAgKiBTaXplIG9mIHRoZSB0ZXh0IHN0eWxlLlxuICAgKiBDYW4gYmU6IDMwMCwgNDAwLCA1MDAuXG4gICAqL1xuICBzaXplOiBQcm9wVHlwZXMub25lT2YoWzMwMCwgNDAwLCA1MDBdKSxcblxuICAvKipcbiAgICogRm9udCBmYW1pbHkuXG4gICAqIENhbiBiZTogYHVpYCwgYGRpc3BsYXlgIG9yIGBtb25vYCBvciBhIGN1c3RvbSBmb250IGZhbWlseS5cbiAgICovXG4gIGZvbnRGYW1pbHk6IFByb3BUeXBlcy5zdHJpbmdcbn1cblxuZXhwb3J0IGRlZmF1bHQgUGFyYWdyYXBoXG4iXX0=