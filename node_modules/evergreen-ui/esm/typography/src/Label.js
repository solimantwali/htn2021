import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["className", "size"],
    _excluded2 = ["className"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { memo, forwardRef } from 'react';
import cx from 'classnames';
import PropTypes from 'prop-types';
import Box from 'ui-box';
import { useStyleConfig } from '../../hooks';
var pseudoSelectors = {};
var internalStyles = {};
var Label = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Label(props, ref) {
  var className = props.className,
      _props$size = props.size,
      size = _props$size === void 0 ? 400 : _props$size,
      restProps = _objectWithoutProperties(props, _excluded);

  var _useStyleConfig = useStyleConfig('Label', {
    size: size
  }, pseudoSelectors, internalStyles),
      themedClassName = _useStyleConfig.className,
      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);

  return /*#__PURE__*/React.createElement(Box, _extends({
    is: "label",
    ref: ref,
    className: cx(themedClassName, className)
  }, boxProps, restProps));
}));
Label.propTypes = _objectSpread(_objectSpread({}, Box.propTypes), {}, {
  /**
   * The size of the label.
   */
  size: PropTypes.oneOf([100, 200, 300, 400, 500, 600, 700, 800, 900])
});
export default Label;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBvZ3JhcGh5L3NyYy9MYWJlbC5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsIm1lbW8iLCJmb3J3YXJkUmVmIiwiY3giLCJQcm9wVHlwZXMiLCJCb3giLCJ1c2VTdHlsZUNvbmZpZyIsInBzZXVkb1NlbGVjdG9ycyIsImludGVybmFsU3R5bGVzIiwiTGFiZWwiLCJwcm9wcyIsInJlZiIsImNsYXNzTmFtZSIsInNpemUiLCJyZXN0UHJvcHMiLCJ0aGVtZWRDbGFzc05hbWUiLCJib3hQcm9wcyIsInByb3BUeXBlcyIsIm9uZU9mIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsT0FBT0EsS0FBUCxJQUFnQkMsSUFBaEIsRUFBc0JDLFVBQXRCLFFBQXdDLE9BQXhDO0FBQ0EsT0FBT0MsRUFBUCxNQUFlLFlBQWY7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsR0FBUCxNQUFnQixRQUFoQjtBQUNBLFNBQVNDLGNBQVQsUUFBK0IsYUFBL0I7QUFFQSxJQUFNQyxlQUFlLEdBQUcsRUFBeEI7QUFDQSxJQUFNQyxjQUFjLEdBQUcsRUFBdkI7QUFFQSxJQUFNQyxLQUFLLGdCQUFHUixJQUFJLGVBQ2hCQyxVQUFVLENBQUMsU0FBU08sS0FBVCxDQUFlQyxLQUFmLEVBQXNCQyxHQUF0QixFQUEyQjtBQUNwQyxNQUFRQyxTQUFSLEdBQWdERixLQUFoRCxDQUFRRSxTQUFSO0FBQUEsb0JBQWdERixLQUFoRCxDQUFtQkcsSUFBbkI7QUFBQSxNQUFtQkEsSUFBbkIsNEJBQTBCLEdBQTFCO0FBQUEsTUFBa0NDLFNBQWxDLDRCQUFnREosS0FBaEQ7O0FBRUEsd0JBQW9ESixjQUFjLENBQ2hFLE9BRGdFLEVBRWhFO0FBQUVPLElBQUFBLElBQUksRUFBSkE7QUFBRixHQUZnRSxFQUdoRU4sZUFIZ0UsRUFJaEVDLGNBSmdFLENBQWxFO0FBQUEsTUFBbUJPLGVBQW5CLG1CQUFRSCxTQUFSO0FBQUEsTUFBdUNJLFFBQXZDOztBQU9BLHNCQUFPLG9CQUFDLEdBQUQ7QUFBSyxJQUFBLEVBQUUsRUFBQyxPQUFSO0FBQWdCLElBQUEsR0FBRyxFQUFFTCxHQUFyQjtBQUEwQixJQUFBLFNBQVMsRUFBRVIsRUFBRSxDQUFDWSxlQUFELEVBQWtCSCxTQUFsQjtBQUF2QyxLQUF5RUksUUFBekUsRUFBdUZGLFNBQXZGLEVBQVA7QUFDRCxDQVhTLENBRE0sQ0FBbEI7QUFlQUwsS0FBSyxDQUFDUSxTQUFOLG1DQUlLWixHQUFHLENBQUNZLFNBSlQ7QUFNRTtBQUNGO0FBQ0E7QUFDRUosRUFBQUEsSUFBSSxFQUFFVCxTQUFTLENBQUNjLEtBQVYsQ0FBZ0IsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsRUFBZ0IsR0FBaEIsRUFBcUIsR0FBckIsRUFBMEIsR0FBMUIsRUFBK0IsR0FBL0IsRUFBb0MsR0FBcEMsRUFBeUMsR0FBekMsQ0FBaEI7QUFUUjtBQVlBLGVBQWVULEtBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgbWVtbywgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGN4IGZyb20gJ2NsYXNzbmFtZXMnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgQm94IGZyb20gJ3VpLWJveCdcbmltcG9ydCB7IHVzZVN0eWxlQ29uZmlnIH0gZnJvbSAnLi4vLi4vaG9va3MnXG5cbmNvbnN0IHBzZXVkb1NlbGVjdG9ycyA9IHt9XG5jb25zdCBpbnRlcm5hbFN0eWxlcyA9IHt9XG5cbmNvbnN0IExhYmVsID0gbWVtbyhcbiAgZm9yd2FyZFJlZihmdW5jdGlvbiBMYWJlbChwcm9wcywgcmVmKSB7XG4gICAgY29uc3QgeyBjbGFzc05hbWUsIHNpemUgPSA0MDAsIC4uLnJlc3RQcm9wcyB9ID0gcHJvcHNcblxuICAgIGNvbnN0IHsgY2xhc3NOYW1lOiB0aGVtZWRDbGFzc05hbWUsIC4uLmJveFByb3BzIH0gPSB1c2VTdHlsZUNvbmZpZyhcbiAgICAgICdMYWJlbCcsXG4gICAgICB7IHNpemUgfSxcbiAgICAgIHBzZXVkb1NlbGVjdG9ycyxcbiAgICAgIGludGVybmFsU3R5bGVzXG4gICAgKVxuXG4gICAgcmV0dXJuIDxCb3ggaXM9XCJsYWJlbFwiIHJlZj17cmVmfSBjbGFzc05hbWU9e2N4KHRoZW1lZENsYXNzTmFtZSwgY2xhc3NOYW1lKX0gey4uLmJveFByb3BzfSB7Li4ucmVzdFByb3BzfSAvPlxuICB9KVxuKVxuXG5MYWJlbC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBMYWJlbCBjb21wb3NlcyBCb3ggYXMgdGhlIGJhc2UuXG4gICAqL1xuICAuLi5Cb3gucHJvcFR5cGVzLFxuXG4gIC8qKlxuICAgKiBUaGUgc2l6ZSBvZiB0aGUgbGFiZWwuXG4gICAqL1xuICBzaXplOiBQcm9wVHlwZXMub25lT2YoWzEwMCwgMjAwLCAzMDAsIDQwMCwgNTAwLCA2MDAsIDcwMCwgODAwLCA5MDBdKVxufVxuXG5leHBvcnQgZGVmYXVsdCBMYWJlbFxuIl19