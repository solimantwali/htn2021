import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["children", "isHighlighted", "isSelected", "style"];
import React, { memo, forwardRef } from 'react';
import PropTypes from 'prop-types';
import { Image } from '../../image';
import Option from '../../select-menu/src/Option';
var AutocompleteItem = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function AutocompleteItem(props, ref) {
  var children = props.children,
      isHighlighted = props.isHighlighted,
      isSelected = props.isSelected,
      style = props.style,
      restProps = _objectWithoutProperties(props, _excluded);

  return /*#__PURE__*/React.createElement(Option, _extends({
    ref: ref,
    isHighlighted: isHighlighted,
    isSelected: isSelected,
    style: style
  }, restProps), restProps.icon && /*#__PURE__*/React.createElement(Image, {
    src: restProps.icon,
    width: 24,
    marginRight: 8
  }), children);
}));
AutocompleteItem.propTypes = {
  children: PropTypes.node,
  style: PropTypes.object,
  isSelected: PropTypes.bool,
  isHighlighted: PropTypes.bool
};
export default AutocompleteItem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hdXRvY29tcGxldGUvc3JjL0F1dG9jb21wbGV0ZUl0ZW0uanMiXSwibmFtZXMiOlsiUmVhY3QiLCJtZW1vIiwiZm9yd2FyZFJlZiIsIlByb3BUeXBlcyIsIkltYWdlIiwiT3B0aW9uIiwiQXV0b2NvbXBsZXRlSXRlbSIsInByb3BzIiwicmVmIiwiY2hpbGRyZW4iLCJpc0hpZ2hsaWdodGVkIiwiaXNTZWxlY3RlZCIsInN0eWxlIiwicmVzdFByb3BzIiwiaWNvbiIsInByb3BUeXBlcyIsIm5vZGUiLCJvYmplY3QiLCJib29sIl0sIm1hcHBpbmdzIjoiOzs7QUFBQSxPQUFPQSxLQUFQLElBQWdCQyxJQUFoQixFQUFzQkMsVUFBdEIsUUFBd0MsT0FBeEM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsU0FBU0MsS0FBVCxRQUFzQixhQUF0QjtBQUNBLE9BQU9DLE1BQVAsTUFBbUIsOEJBQW5CO0FBRUEsSUFBTUMsZ0JBQWdCLGdCQUFHTCxJQUFJLGVBQzNCQyxVQUFVLENBQUMsU0FBU0ksZ0JBQVQsQ0FBMEJDLEtBQTFCLEVBQWlDQyxHQUFqQyxFQUFzQztBQUMvQyxNQUFRQyxRQUFSLEdBQXFFRixLQUFyRSxDQUFRRSxRQUFSO0FBQUEsTUFBa0JDLGFBQWxCLEdBQXFFSCxLQUFyRSxDQUFrQkcsYUFBbEI7QUFBQSxNQUFpQ0MsVUFBakMsR0FBcUVKLEtBQXJFLENBQWlDSSxVQUFqQztBQUFBLE1BQTZDQyxLQUE3QyxHQUFxRUwsS0FBckUsQ0FBNkNLLEtBQTdDO0FBQUEsTUFBdURDLFNBQXZELDRCQUFxRU4sS0FBckU7O0FBRUEsc0JBQ0Usb0JBQUMsTUFBRDtBQUFRLElBQUEsR0FBRyxFQUFFQyxHQUFiO0FBQWtCLElBQUEsYUFBYSxFQUFFRSxhQUFqQztBQUFnRCxJQUFBLFVBQVUsRUFBRUMsVUFBNUQ7QUFBd0UsSUFBQSxLQUFLLEVBQUVDO0FBQS9FLEtBQTBGQyxTQUExRixHQUNHQSxTQUFTLENBQUNDLElBQVYsaUJBQWtCLG9CQUFDLEtBQUQ7QUFBTyxJQUFBLEdBQUcsRUFBRUQsU0FBUyxDQUFDQyxJQUF0QjtBQUE0QixJQUFBLEtBQUssRUFBRSxFQUFuQztBQUF1QyxJQUFBLFdBQVcsRUFBRTtBQUFwRCxJQURyQixFQUVHTCxRQUZILENBREY7QUFNRCxDQVRTLENBRGlCLENBQTdCO0FBYUFILGdCQUFnQixDQUFDUyxTQUFqQixHQUE2QjtBQUMzQk4sRUFBQUEsUUFBUSxFQUFFTixTQUFTLENBQUNhLElBRE87QUFFM0JKLEVBQUFBLEtBQUssRUFBRVQsU0FBUyxDQUFDYyxNQUZVO0FBRzNCTixFQUFBQSxVQUFVLEVBQUVSLFNBQVMsQ0FBQ2UsSUFISztBQUkzQlIsRUFBQUEsYUFBYSxFQUFFUCxTQUFTLENBQUNlO0FBSkUsQ0FBN0I7QUFPQSxlQUFlWixnQkFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBtZW1vLCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uL2ltYWdlJ1xuaW1wb3J0IE9wdGlvbiBmcm9tICcuLi8uLi9zZWxlY3QtbWVudS9zcmMvT3B0aW9uJ1xuXG5jb25zdCBBdXRvY29tcGxldGVJdGVtID0gbWVtbyhcbiAgZm9yd2FyZFJlZihmdW5jdGlvbiBBdXRvY29tcGxldGVJdGVtKHByb3BzLCByZWYpIHtcbiAgICBjb25zdCB7IGNoaWxkcmVuLCBpc0hpZ2hsaWdodGVkLCBpc1NlbGVjdGVkLCBzdHlsZSwgLi4ucmVzdFByb3BzIH0gPSBwcm9wc1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxPcHRpb24gcmVmPXtyZWZ9IGlzSGlnaGxpZ2h0ZWQ9e2lzSGlnaGxpZ2h0ZWR9IGlzU2VsZWN0ZWQ9e2lzU2VsZWN0ZWR9IHN0eWxlPXtzdHlsZX0gey4uLnJlc3RQcm9wc30+XG4gICAgICAgIHtyZXN0UHJvcHMuaWNvbiAmJiA8SW1hZ2Ugc3JjPXtyZXN0UHJvcHMuaWNvbn0gd2lkdGg9ezI0fSBtYXJnaW5SaWdodD17OH0gLz59XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvT3B0aW9uPlxuICAgIClcbiAgfSlcbilcblxuQXV0b2NvbXBsZXRlSXRlbS5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gIGlzU2VsZWN0ZWQ6IFByb3BUeXBlcy5ib29sLFxuICBpc0hpZ2hsaWdodGVkOiBQcm9wVHlwZXMuYm9vbFxufVxuXG5leHBvcnQgZGVmYXVsdCBBdXRvY29tcGxldGVJdGVtXG4iXX0=