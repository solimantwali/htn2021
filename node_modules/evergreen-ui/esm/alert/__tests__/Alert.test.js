import React from 'react';
import { render, screen } from '@testing-library/react';
import renderer from 'react-test-renderer';
import Alert from '../src/Alert';
describe('<Alert />', function () {
  it('basic snapshot', function () {
    var component = /*#__PURE__*/React.createElement(Alert, {
      title: "A simple general message"
    });
    var tree = renderer.create(component).toJSON();
    expect(tree).toMatchSnapshot();
  });
  it('outputs title', function () {
    render( /*#__PURE__*/React.createElement(Alert, {
      title: "Test title"
    }));
    expect(screen.getByText('Test title')).toBeTruthy();
  });
  it('outputs children', function () {
    render( /*#__PURE__*/React.createElement(Alert, {
      title: "Test title"
    }, "Test content"));
    expect(screen.getByText('Test content')).toBeTruthy();
  });
  it('intent snapshot', function () {
    var component = /*#__PURE__*/React.createElement(Alert, {
      title: "Test title",
      intent: "danger"
    });
    var tree = renderer.create(component).toJSON();
    expect(tree).toMatchSnapshot();
  });
  it('appearance snapshot', function () {
    var component = /*#__PURE__*/React.createElement(Alert, {
      title: "Test title",
      appearance: "card"
    });
    var tree = renderer.create(component).toJSON();
    expect(tree).toMatchSnapshot();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hbGVydC9fX3Rlc3RzX18vQWxlcnQudGVzdC5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlbmRlciIsInNjcmVlbiIsInJlbmRlcmVyIiwiQWxlcnQiLCJkZXNjcmliZSIsIml0IiwiY29tcG9uZW50IiwidHJlZSIsImNyZWF0ZSIsInRvSlNPTiIsImV4cGVjdCIsInRvTWF0Y2hTbmFwc2hvdCIsImdldEJ5VGV4dCIsInRvQmVUcnV0aHkiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxTQUFTQyxNQUFULEVBQWlCQyxNQUFqQixRQUErQix3QkFBL0I7QUFDQSxPQUFPQyxRQUFQLE1BQXFCLHFCQUFyQjtBQUNBLE9BQU9DLEtBQVAsTUFBa0IsY0FBbEI7QUFFQUMsUUFBUSxDQUFDLFdBQUQsRUFBYyxZQUFNO0FBQzFCQyxFQUFBQSxFQUFFLENBQUMsZ0JBQUQsRUFBbUIsWUFBTTtBQUN6QixRQUFNQyxTQUFTLGdCQUFHLG9CQUFDLEtBQUQ7QUFBTyxNQUFBLEtBQUssRUFBQztBQUFiLE1BQWxCO0FBQ0EsUUFBTUMsSUFBSSxHQUFHTCxRQUFRLENBQUNNLE1BQVQsQ0FBZ0JGLFNBQWhCLEVBQTJCRyxNQUEzQixFQUFiO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ0gsSUFBRCxDQUFOLENBQWFJLGVBQWI7QUFDRCxHQUpDLENBQUY7QUFNQU4sRUFBQUEsRUFBRSxDQUFDLGVBQUQsRUFBa0IsWUFBTTtBQUN4QkwsSUFBQUEsTUFBTSxlQUFDLG9CQUFDLEtBQUQ7QUFBTyxNQUFBLEtBQUssRUFBQztBQUFiLE1BQUQsQ0FBTjtBQUNBVSxJQUFBQSxNQUFNLENBQUNULE1BQU0sQ0FBQ1csU0FBUCxDQUFpQixZQUFqQixDQUFELENBQU4sQ0FBdUNDLFVBQXZDO0FBQ0QsR0FIQyxDQUFGO0FBS0FSLEVBQUFBLEVBQUUsQ0FBQyxrQkFBRCxFQUFxQixZQUFNO0FBQzNCTCxJQUFBQSxNQUFNLGVBQUMsb0JBQUMsS0FBRDtBQUFPLE1BQUEsS0FBSyxFQUFDO0FBQWIsc0JBQUQsQ0FBTjtBQUNBVSxJQUFBQSxNQUFNLENBQUNULE1BQU0sQ0FBQ1csU0FBUCxDQUFpQixjQUFqQixDQUFELENBQU4sQ0FBeUNDLFVBQXpDO0FBQ0QsR0FIQyxDQUFGO0FBS0FSLEVBQUFBLEVBQUUsQ0FBQyxpQkFBRCxFQUFvQixZQUFNO0FBQzFCLFFBQU1DLFNBQVMsZ0JBQUcsb0JBQUMsS0FBRDtBQUFPLE1BQUEsS0FBSyxFQUFDLFlBQWI7QUFBMEIsTUFBQSxNQUFNLEVBQUM7QUFBakMsTUFBbEI7QUFDQSxRQUFNQyxJQUFJLEdBQUdMLFFBQVEsQ0FBQ00sTUFBVCxDQUFnQkYsU0FBaEIsRUFBMkJHLE1BQTNCLEVBQWI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDSCxJQUFELENBQU4sQ0FBYUksZUFBYjtBQUNELEdBSkMsQ0FBRjtBQU1BTixFQUFBQSxFQUFFLENBQUMscUJBQUQsRUFBd0IsWUFBTTtBQUM5QixRQUFNQyxTQUFTLGdCQUFHLG9CQUFDLEtBQUQ7QUFBTyxNQUFBLEtBQUssRUFBQyxZQUFiO0FBQTBCLE1BQUEsVUFBVSxFQUFDO0FBQXJDLE1BQWxCO0FBQ0EsUUFBTUMsSUFBSSxHQUFHTCxRQUFRLENBQUNNLE1BQVQsQ0FBZ0JGLFNBQWhCLEVBQTJCRyxNQUEzQixFQUFiO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ0gsSUFBRCxDQUFOLENBQWFJLGVBQWI7QUFDRCxHQUpDLENBQUY7QUFLRCxDQTVCTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4gfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0J1xuaW1wb3J0IHJlbmRlcmVyIGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInXG5pbXBvcnQgQWxlcnQgZnJvbSAnLi4vc3JjL0FsZXJ0J1xuXG5kZXNjcmliZSgnPEFsZXJ0IC8+JywgKCkgPT4ge1xuICBpdCgnYmFzaWMgc25hcHNob3QnLCAoKSA9PiB7XG4gICAgY29uc3QgY29tcG9uZW50ID0gPEFsZXJ0IHRpdGxlPVwiQSBzaW1wbGUgZ2VuZXJhbCBtZXNzYWdlXCIgLz5cbiAgICBjb25zdCB0cmVlID0gcmVuZGVyZXIuY3JlYXRlKGNvbXBvbmVudCkudG9KU09OKClcbiAgICBleHBlY3QodHJlZSkudG9NYXRjaFNuYXBzaG90KClcbiAgfSlcblxuICBpdCgnb3V0cHV0cyB0aXRsZScsICgpID0+IHtcbiAgICByZW5kZXIoPEFsZXJ0IHRpdGxlPVwiVGVzdCB0aXRsZVwiIC8+KVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdUZXN0IHRpdGxlJykpLnRvQmVUcnV0aHkoKVxuICB9KVxuXG4gIGl0KCdvdXRwdXRzIGNoaWxkcmVuJywgKCkgPT4ge1xuICAgIHJlbmRlcig8QWxlcnQgdGl0bGU9XCJUZXN0IHRpdGxlXCI+VGVzdCBjb250ZW50PC9BbGVydD4pXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1Rlc3QgY29udGVudCcpKS50b0JlVHJ1dGh5KClcbiAgfSlcblxuICBpdCgnaW50ZW50IHNuYXBzaG90JywgKCkgPT4ge1xuICAgIGNvbnN0IGNvbXBvbmVudCA9IDxBbGVydCB0aXRsZT1cIlRlc3QgdGl0bGVcIiBpbnRlbnQ9XCJkYW5nZXJcIiAvPlxuICAgIGNvbnN0IHRyZWUgPSByZW5kZXJlci5jcmVhdGUoY29tcG9uZW50KS50b0pTT04oKVxuICAgIGV4cGVjdCh0cmVlKS50b01hdGNoU25hcHNob3QoKVxuICB9KVxuXG4gIGl0KCdhcHBlYXJhbmNlIHNuYXBzaG90JywgKCkgPT4ge1xuICAgIGNvbnN0IGNvbXBvbmVudCA9IDxBbGVydCB0aXRsZT1cIlRlc3QgdGl0bGVcIiBhcHBlYXJhbmNlPVwiY2FyZFwiIC8+XG4gICAgY29uc3QgdHJlZSA9IHJlbmRlcmVyLmNyZWF0ZShjb21wb25lbnQpLnRvSlNPTigpXG4gICAgZXhwZWN0KHRyZWUpLnRvTWF0Y2hTbmFwc2hvdCgpXG4gIH0pXG59KVxuIl19