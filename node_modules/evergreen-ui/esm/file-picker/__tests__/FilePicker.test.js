import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import React from 'react';
import { fireEvent, render, screen } from '@testing-library/react';
import renderer from 'react-test-renderer';
import FilePicker, { CLASS_PREFIX } from '../src/FilePicker';
describe('<FilePicker />', function () {
  it('snapshot', function () {
    var component = /*#__PURE__*/React.createElement(FilePicker, null);
    var tree = renderer.create(component).toJSON();
    expect(tree).toMatchSnapshot();
  });
  it('sets name', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
    var _render, container, fileInput;

    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _render = render( /*#__PURE__*/React.createElement(FilePicker, {
              name: "hi"
            })), container = _render.container;
            fileInput = container.querySelector('input[type=file]');
            expect(fileInput).toBeDefined();
            expect(fileInput).toHaveClass("".concat(CLASS_PREFIX, "-file-input"));
            expect(fileInput).toHaveAttribute('type', 'file');
            expect(fileInput).toHaveAttribute('name', 'hi');

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
  it('sets accept', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
    var _render2, container, fileInput;

    return _regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _render2 = render( /*#__PURE__*/React.createElement(FilePicker, {
              accept: "application/json"
            })), container = _render2.container;
            fileInput = container.querySelector('input[type=file]');
            expect(fileInput).toBeDefined();
            expect(fileInput).toHaveAttribute('accept', 'application/json');

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  })));
  it('sets required', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
    var _render3, container, fileInput;

    return _regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _render3 = render( /*#__PURE__*/React.createElement(FilePicker, {
              required: true
            })), container = _render3.container;
            fileInput = container.querySelector('input[type=file]');
            expect(fileInput).toBeDefined();
            expect(fileInput).toHaveAttribute('required');

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  })));
  it('sets multiple', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {
    var _render4, container, fileInput;

    return _regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _render4 = render( /*#__PURE__*/React.createElement(FilePicker, {
              multiple: true
            })), container = _render4.container;
            fileInput = container.querySelector('input[type=file]');
            expect(fileInput).toBeDefined();
            expect(fileInput).toHaveAttribute('multiple');

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  })));
  it('sets disabled', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {
    var _render5, container, fileInput, button;

    return _regeneratorRuntime.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _render5 = render( /*#__PURE__*/React.createElement(FilePicker, {
              disabled: true
            })), container = _render5.container;
            fileInput = container.querySelector('input[type=file]');
            expect(fileInput).toBeDefined();
            expect(fileInput).toHaveAttribute('disabled');
            _context5.next = 6;
            return screen.findByRole('button');

          case 6:
            button = _context5.sent;
            expect(button).toBeDefined();
            expect(button).toHaveAttribute('disabled');

          case 9:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  })));
  it('sets capture', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {
    var _render6, container, fileInput;

    return _regeneratorRuntime.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _render6 = render( /*#__PURE__*/React.createElement(FilePicker, {
              capture: true
            })), container = _render6.container;
            fileInput = container.querySelector('input[type=file]');
            expect(fileInput).toBeDefined();
            expect(fileInput).toHaveAttribute('capture');

          case 4:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  })));
  it('passes through height', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {
    var _render7, container, input, button;

    return _regeneratorRuntime.wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _render7 = render( /*#__PURE__*/React.createElement(FilePicker, {
              height: 20
            })), container = _render7.container;
            input = container.querySelector('input[type=text]');
            expect(input).toBeDefined();
            expect(input).toHaveStyle({
              height: '20px'
            });
            _context7.next = 6;
            return screen.findByRole('button');

          case 6:
            button = _context7.sent;
            expect(button).toBeDefined();
            expect(button).toHaveStyle({
              height: '20px'
            });

          case 9:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  })));
  it('passes through props', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {
    var _render8, container, root;

    return _regeneratorRuntime.wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _render8 = render( /*#__PURE__*/React.createElement(FilePicker, {
              width: 20
            })), container = _render8.container;
            root = container.querySelector(".".concat(CLASS_PREFIX, "-root"));
            expect(root).toBeDefined();
            expect(root).toHaveStyle({
              width: '20px'
            });

          case 4:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  })));
  it('calls onChange', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {
    var onChange, _render9, container, fileInput;

    return _regeneratorRuntime.wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            onChange = jest.fn();
            _render9 = render( /*#__PURE__*/React.createElement(FilePicker, {
              onChange: onChange
            })), container = _render9.container;
            fileInput = container.querySelector('input[type=file]');
            fireEvent.change(fileInput, {
              target: {
                files: [{
                  name: 'data.json'
                }]
              }
            });
            expect(onChange).toHaveBeenCalledTimes(1);

          case 5:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  })));
  /**
   * Skip this test until we can get around jsdom's super strict FileList handling
   * @see {@link https://github.com/jsdom/jsdom/issues/1272}
   */

  it.skip('calls onBlur', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {
    var onBlur, _render10, container, fileInput, input;

    return _regeneratorRuntime.wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            onBlur = jest.fn();
            _render10 = render( /*#__PURE__*/React.createElement(FilePicker, {
              onBlur: onBlur
            })), container = _render10.container;
            fileInput = container.querySelector('input[type=file]');
            fireEvent.change(fileInput, {
              target: {
                files: [new File(['(⌐□_□)'], 'chucknorris.png', {
                  type: 'image/png'
                })]
              }
            });
            input = container.querySelector('input[type=text]');
            fireEvent.blur(input, {
              target: {}
            });
            expect(onBlur).toHaveBeenCalledTimes(1);

          case 7:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  })));
  it('sets placeholder', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {
    var input;
    return _regeneratorRuntime.wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            render( /*#__PURE__*/React.createElement(FilePicker, {
              placeholder: "placeholder here!"
            }));
            _context11.next = 3;
            return screen.findByPlaceholderText('placeholder here!');

          case 3:
            input = _context11.sent;
            expect(input).toBeDefined();

          case 5:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11);
  })));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,