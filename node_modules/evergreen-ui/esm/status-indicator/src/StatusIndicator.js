import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["children", "color", "disabled", "dotSize"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { memo, forwardRef } from 'react';
import PropTypes from 'prop-types';
import { SymbolCircleIcon } from '../../icons';
import { majorScale } from '../../scales';
import { Text } from '../../typography';
var StatusIndicator = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function StatusIndicator(props, ref) {
  var children = props.children,
      _props$color = props.color,
      color = _props$color === void 0 ? 'disabled' : _props$color,
      disabled = props.disabled,
      _props$dotSize = props.dotSize,
      dotSize = _props$dotSize === void 0 ? 10 : _props$dotSize,
      rest = _objectWithoutProperties(props, _excluded);

  return /*#__PURE__*/React.createElement(Text, _extends({
    display: "inline-flex",
    alignItems: "center",
    ref: ref
  }, rest), /*#__PURE__*/React.createElement(SymbolCircleIcon, {
    flexShrink: 0,
    marginRight: majorScale(1),
    size: dotSize,
    color: color
  }), children);
}));
StatusIndicator.propTypes = _objectSpread(_objectSpread({}, Text.propTypes), {}, {
  /**
   * The label of the status hint.
   */
  children: PropTypes.node,

  /**
   * The color of the status hint. Can be an intent or hex value.
   */
  color: PropTypes.string,

  /**
   * The size of the dot to the left of the text
   */
  dotSize: PropTypes.number
});
export default StatusIndicator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdGF0dXMtaW5kaWNhdG9yL3NyYy9TdGF0dXNJbmRpY2F0b3IuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJtZW1vIiwiZm9yd2FyZFJlZiIsIlByb3BUeXBlcyIsIlN5bWJvbENpcmNsZUljb24iLCJtYWpvclNjYWxlIiwiVGV4dCIsIlN0YXR1c0luZGljYXRvciIsInByb3BzIiwicmVmIiwiY2hpbGRyZW4iLCJjb2xvciIsImRpc2FibGVkIiwiZG90U2l6ZSIsInJlc3QiLCJwcm9wVHlwZXMiLCJub2RlIiwic3RyaW5nIiwibnVtYmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxPQUFPQSxLQUFQLElBQWdCQyxJQUFoQixFQUFzQkMsVUFBdEIsUUFBd0MsT0FBeEM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsU0FBU0MsZ0JBQVQsUUFBaUMsYUFBakM7QUFDQSxTQUFTQyxVQUFULFFBQTJCLGNBQTNCO0FBQ0EsU0FBU0MsSUFBVCxRQUFxQixrQkFBckI7QUFFQSxJQUFNQyxlQUFlLGdCQUFHTixJQUFJLGVBQzFCQyxVQUFVLENBQUMsU0FBU0ssZUFBVCxDQUF5QkMsS0FBekIsRUFBZ0NDLEdBQWhDLEVBQXFDO0FBQzlDLE1BQVFDLFFBQVIsR0FBMEVGLEtBQTFFLENBQVFFLFFBQVI7QUFBQSxxQkFBMEVGLEtBQTFFLENBQWtCRyxLQUFsQjtBQUFBLE1BQWtCQSxLQUFsQiw2QkFBMEIsVUFBMUI7QUFBQSxNQUFzQ0MsUUFBdEMsR0FBMEVKLEtBQTFFLENBQXNDSSxRQUF0QztBQUFBLHVCQUEwRUosS0FBMUUsQ0FBZ0RLLE9BQWhEO0FBQUEsTUFBZ0RBLE9BQWhELCtCQUEwRCxFQUExRDtBQUFBLE1BQWlFQyxJQUFqRSw0QkFBMEVOLEtBQTFFOztBQUVBLHNCQUNFLG9CQUFDLElBQUQ7QUFBTSxJQUFBLE9BQU8sRUFBQyxhQUFkO0FBQTRCLElBQUEsVUFBVSxFQUFDLFFBQXZDO0FBQWdELElBQUEsR0FBRyxFQUFFQztBQUFyRCxLQUE4REssSUFBOUQsZ0JBQ0Usb0JBQUMsZ0JBQUQ7QUFBa0IsSUFBQSxVQUFVLEVBQUUsQ0FBOUI7QUFBaUMsSUFBQSxXQUFXLEVBQUVULFVBQVUsQ0FBQyxDQUFELENBQXhEO0FBQTZELElBQUEsSUFBSSxFQUFFUSxPQUFuRTtBQUE0RSxJQUFBLEtBQUssRUFBRUY7QUFBbkYsSUFERixFQUVHRCxRQUZILENBREY7QUFNRCxDQVRTLENBRGdCLENBQTVCO0FBYUFILGVBQWUsQ0FBQ1EsU0FBaEIsbUNBSUtULElBQUksQ0FBQ1MsU0FKVjtBQU1FO0FBQ0Y7QUFDQTtBQUNFTCxFQUFBQSxRQUFRLEVBQUVQLFNBQVMsQ0FBQ2EsSUFUdEI7O0FBV0U7QUFDRjtBQUNBO0FBQ0VMLEVBQUFBLEtBQUssRUFBRVIsU0FBUyxDQUFDYyxNQWRuQjs7QUFnQkU7QUFDRjtBQUNBO0FBQ0VKLEVBQUFBLE9BQU8sRUFBRVYsU0FBUyxDQUFDZTtBQW5CckI7QUFzQkEsZUFBZVgsZUFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBtZW1vLCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBTeW1ib2xDaXJjbGVJY29uIH0gZnJvbSAnLi4vLi4vaWNvbnMnXG5pbXBvcnQgeyBtYWpvclNjYWxlIH0gZnJvbSAnLi4vLi4vc2NhbGVzJ1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4uLy4uL3R5cG9ncmFwaHknXG5cbmNvbnN0IFN0YXR1c0luZGljYXRvciA9IG1lbW8oXG4gIGZvcndhcmRSZWYoZnVuY3Rpb24gU3RhdHVzSW5kaWNhdG9yKHByb3BzLCByZWYpIHtcbiAgICBjb25zdCB7IGNoaWxkcmVuLCBjb2xvciA9ICdkaXNhYmxlZCcsIGRpc2FibGVkLCBkb3RTaXplID0gMTAsIC4uLnJlc3QgfSA9IHByb3BzXG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRleHQgZGlzcGxheT1cImlubGluZS1mbGV4XCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIHJlZj17cmVmfSB7Li4ucmVzdH0+XG4gICAgICAgIDxTeW1ib2xDaXJjbGVJY29uIGZsZXhTaHJpbms9ezB9IG1hcmdpblJpZ2h0PXttYWpvclNjYWxlKDEpfSBzaXplPXtkb3RTaXplfSBjb2xvcj17Y29sb3J9IC8+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvVGV4dD5cbiAgICApXG4gIH0pXG4pXG5cblN0YXR1c0luZGljYXRvci5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBDb21wb3NlcyB0aGUgVGV4dCBjb21wb25lbnQgYXMgdGhlIGJhc2UuXG4gICAqL1xuICAuLi5UZXh0LnByb3BUeXBlcyxcblxuICAvKipcbiAgICogVGhlIGxhYmVsIG9mIHRoZSBzdGF0dXMgaGludC5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogVGhlIGNvbG9yIG9mIHRoZSBzdGF0dXMgaGludC4gQ2FuIGJlIGFuIGludGVudCBvciBoZXggdmFsdWUuXG4gICAqL1xuICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIHNpemUgb2YgdGhlIGRvdCB0byB0aGUgbGVmdCBvZiB0aGUgdGV4dFxuICAgKi9cbiAgZG90U2l6ZTogUHJvcFR5cGVzLm51bWJlclxufVxuXG5leHBvcnQgZGVmYXVsdCBTdGF0dXNJbmRpY2F0b3JcbiJdfQ==