import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import React from 'react';
import { render } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import PopoverWithTextInputFixture from '../fixtures/PopoverWithTextInputChild';
describe('Popover', function () {
  it('Should not be dismissed when clicking on a child within the popover', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
    var _render, findByTestId, trigger, container, input;

    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _render = render( /*#__PURE__*/React.createElement(PopoverWithTextInputFixture, null)), findByTestId = _render.findByTestId;
            _context.next = 3;
            return findByTestId('popover-trigger');

          case 3:
            trigger = _context.sent;
            userEvent.click(trigger);
            _context.next = 7;
            return findByTestId('popover-container');

          case 7:
            container = _context.sent;
            _context.next = 10;
            return findByTestId('popover-input');

          case 10:
            input = _context.sent;
            // Simulate a user click event on the immediate child node
            userEvent.click(container);
            expect(container).toBeVisible(); // Click on a child node a level deeper

            userEvent.click(input);
            expect(container).toBeVisible();
            expect(input).toBeVisible();

          case 16:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
  it('Should render its content body to the DOM if `isShown` is set to `true`', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
    var _render2, findByTestId, container;

    return _regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _render2 = render( /*#__PURE__*/React.createElement(PopoverWithTextInputFixture, {
              isShown: true
            })), findByTestId = _render2.findByTestId;
            _context2.next = 3;
            return findByTestId('popover-container');

          case 3:
            container = _context2.sent;
            expect(container).toBeVisible();

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  })));
  it('Should properly report back the event, if the popover body is clicked', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
    var mockBodyClick;
    return _regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            mockBodyClick = jest.fn();
            render( /*#__PURE__*/React.createElement(PopoverWithTextInputFixture, {
              isShown: true,
              onBodyClick: mockBodyClick
            }));
            userEvent.click(document.body);
            expect(mockBodyClick).toHaveBeenCalledTimes(1);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  })));
  it('Should remain open if a user clicks somewhere outside of the popover area and `shouldCloseOnExternalClick` is `false`', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {
    var _render3, findByTestId, container;

    return _regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _render3 = render( /*#__PURE__*/React.createElement(PopoverWithTextInputFixture, {
              isShown: true,
              shouldCloseOnExternalClick: false
            })), findByTestId = _render3.findByTestId;
            _context4.next = 3;
            return findByTestId('popover-container');

          case 3:
            container = _context4.sent;
            expect(container).toBeVisible();
            userEvent.click(document.body); // Container should still be after document body was clicked

            expect(container).toBeVisible();

          case 7:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  })));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wb3BvdmVyL19fdGVzdHNfXy9Qb3BvdmVyLnRlc3QuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZW5kZXIiLCJ1c2VyRXZlbnQiLCJQb3BvdmVyV2l0aFRleHRJbnB1dEZpeHR1cmUiLCJkZXNjcmliZSIsIml0IiwiZmluZEJ5VGVzdElkIiwidHJpZ2dlciIsImNsaWNrIiwiY29udGFpbmVyIiwiaW5wdXQiLCJleHBlY3QiLCJ0b0JlVmlzaWJsZSIsIm1vY2tCb2R5Q2xpY2siLCJqZXN0IiwiZm4iLCJkb2N1bWVudCIsImJvZHkiLCJ0b0hhdmVCZWVuQ2FsbGVkVGltZXMiXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBT0EsS0FBUCxNQUFrQixPQUFsQjtBQUNBLFNBQVNDLE1BQVQsUUFBdUIsd0JBQXZCO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQiw2QkFBdEI7QUFDQSxPQUFPQywyQkFBUCxNQUF3Qyx1Q0FBeEM7QUFFQUMsUUFBUSxDQUFDLFNBQUQsRUFBWSxZQUFNO0FBQ3hCQyxFQUFBQSxFQUFFLENBQUMscUVBQUQsd0VBQXdFO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQkFDL0NKLE1BQU0sZUFBQyxvQkFBQywyQkFBRCxPQUFELENBRHlDLEVBQ2hFSyxZQURnRSxXQUNoRUEsWUFEZ0U7QUFBQTtBQUFBLG1CQUVsREEsWUFBWSxDQUFDLGlCQUFELENBRnNDOztBQUFBO0FBRWxFQyxZQUFBQSxPQUZrRTtBQUd4RUwsWUFBQUEsU0FBUyxDQUFDTSxLQUFWLENBQWdCRCxPQUFoQjtBQUh3RTtBQUFBLG1CQUtoREQsWUFBWSxDQUFDLG1CQUFELENBTG9DOztBQUFBO0FBS2xFRyxZQUFBQSxTQUxrRTtBQUFBO0FBQUEsbUJBTXBESCxZQUFZLENBQUMsZUFBRCxDQU53Qzs7QUFBQTtBQU1sRUksWUFBQUEsS0FOa0U7QUFReEU7QUFDQVIsWUFBQUEsU0FBUyxDQUFDTSxLQUFWLENBQWdCQyxTQUFoQjtBQUNBRSxZQUFBQSxNQUFNLENBQUNGLFNBQUQsQ0FBTixDQUFrQkcsV0FBbEIsR0FWd0UsQ0FZeEU7O0FBQ0FWLFlBQUFBLFNBQVMsQ0FBQ00sS0FBVixDQUFnQkUsS0FBaEI7QUFDQUMsWUFBQUEsTUFBTSxDQUFDRixTQUFELENBQU4sQ0FBa0JHLFdBQWxCO0FBQ0FELFlBQUFBLE1BQU0sQ0FBQ0QsS0FBRCxDQUFOLENBQWNFLFdBQWQ7O0FBZndFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQXhFLEdBQUY7QUFrQkFQLEVBQUFBLEVBQUUsQ0FBQyx5RUFBRCx3RUFBNEU7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHVCQUNuREosTUFBTSxlQUFDLG9CQUFDLDJCQUFEO0FBQTZCLGNBQUEsT0FBTyxFQUFFO0FBQXRDLGNBQUQsQ0FENkMsRUFDcEVLLFlBRG9FLFlBQ3BFQSxZQURvRTtBQUFBO0FBQUEsbUJBRXBEQSxZQUFZLENBQUMsbUJBQUQsQ0FGd0M7O0FBQUE7QUFFdEVHLFlBQUFBLFNBRnNFO0FBSTVFRSxZQUFBQSxNQUFNLENBQUNGLFNBQUQsQ0FBTixDQUFrQkcsV0FBbEI7O0FBSjRFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQTVFLEdBQUY7QUFPQVAsRUFBQUEsRUFBRSxDQUFDLHVFQUFELHdFQUEwRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDcEVRLFlBQUFBLGFBRG9FLEdBQ3BEQyxJQUFJLENBQUNDLEVBQUwsRUFEb0Q7QUFFMUVkLFlBQUFBLE1BQU0sZUFBQyxvQkFBQywyQkFBRDtBQUE2QixjQUFBLE9BQU8sRUFBRSxJQUF0QztBQUE0QyxjQUFBLFdBQVcsRUFBRVk7QUFBekQsY0FBRCxDQUFOO0FBRUFYLFlBQUFBLFNBQVMsQ0FBQ00sS0FBVixDQUFnQlEsUUFBUSxDQUFDQyxJQUF6QjtBQUVBTixZQUFBQSxNQUFNLENBQUNFLGFBQUQsQ0FBTixDQUFzQksscUJBQXRCLENBQTRDLENBQTVDOztBQU4wRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUExRSxHQUFGO0FBU0FiLEVBQUFBLEVBQUUsQ0FBQyx1SEFBRCx3RUFBMEg7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHVCQUNqR0osTUFBTSxlQUFDLG9CQUFDLDJCQUFEO0FBQTZCLGNBQUEsT0FBTyxNQUFwQztBQUFxQyxjQUFBLDBCQUEwQixFQUFFO0FBQWpFLGNBQUQsQ0FEMkYsRUFDbEhLLFlBRGtILFlBQ2xIQSxZQURrSDtBQUFBO0FBQUEsbUJBRWxHQSxZQUFZLENBQUMsbUJBQUQsQ0FGc0Y7O0FBQUE7QUFFcEhHLFlBQUFBLFNBRm9IO0FBRzFIRSxZQUFBQSxNQUFNLENBQUNGLFNBQUQsQ0FBTixDQUFrQkcsV0FBbEI7QUFDQVYsWUFBQUEsU0FBUyxDQUFDTSxLQUFWLENBQWdCUSxRQUFRLENBQUNDLElBQXpCLEVBSjBILENBTTFIOztBQUNBTixZQUFBQSxNQUFNLENBQUNGLFNBQUQsQ0FBTixDQUFrQkcsV0FBbEI7O0FBUDBIO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQTFILEdBQUY7QUFTRCxDQTVDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCdcbmltcG9ydCB1c2VyRXZlbnQgZnJvbSAnQHRlc3RpbmctbGlicmFyeS91c2VyLWV2ZW50J1xuaW1wb3J0IFBvcG92ZXJXaXRoVGV4dElucHV0Rml4dHVyZSBmcm9tICcuLi9maXh0dXJlcy9Qb3BvdmVyV2l0aFRleHRJbnB1dENoaWxkJ1xuXG5kZXNjcmliZSgnUG9wb3ZlcicsICgpID0+IHtcbiAgaXQoJ1Nob3VsZCBub3QgYmUgZGlzbWlzc2VkIHdoZW4gY2xpY2tpbmcgb24gYSBjaGlsZCB3aXRoaW4gdGhlIHBvcG92ZXInLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgeyBmaW5kQnlUZXN0SWQgfSA9IHJlbmRlcig8UG9wb3ZlcldpdGhUZXh0SW5wdXRGaXh0dXJlIC8+KVxuICAgIGNvbnN0IHRyaWdnZXIgPSBhd2FpdCBmaW5kQnlUZXN0SWQoJ3BvcG92ZXItdHJpZ2dlcicpXG4gICAgdXNlckV2ZW50LmNsaWNrKHRyaWdnZXIpXG5cbiAgICBjb25zdCBjb250YWluZXIgPSBhd2FpdCBmaW5kQnlUZXN0SWQoJ3BvcG92ZXItY29udGFpbmVyJylcbiAgICBjb25zdCBpbnB1dCA9IGF3YWl0IGZpbmRCeVRlc3RJZCgncG9wb3Zlci1pbnB1dCcpXG5cbiAgICAvLyBTaW11bGF0ZSBhIHVzZXIgY2xpY2sgZXZlbnQgb24gdGhlIGltbWVkaWF0ZSBjaGlsZCBub2RlXG4gICAgdXNlckV2ZW50LmNsaWNrKGNvbnRhaW5lcilcbiAgICBleHBlY3QoY29udGFpbmVyKS50b0JlVmlzaWJsZSgpXG5cbiAgICAvLyBDbGljayBvbiBhIGNoaWxkIG5vZGUgYSBsZXZlbCBkZWVwZXJcbiAgICB1c2VyRXZlbnQuY2xpY2soaW5wdXQpXG4gICAgZXhwZWN0KGNvbnRhaW5lcikudG9CZVZpc2libGUoKVxuICAgIGV4cGVjdChpbnB1dCkudG9CZVZpc2libGUoKVxuICB9KVxuXG4gIGl0KCdTaG91bGQgcmVuZGVyIGl0cyBjb250ZW50IGJvZHkgdG8gdGhlIERPTSBpZiBgaXNTaG93bmAgaXMgc2V0IHRvIGB0cnVlYCcsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IGZpbmRCeVRlc3RJZCB9ID0gcmVuZGVyKDxQb3BvdmVyV2l0aFRleHRJbnB1dEZpeHR1cmUgaXNTaG93bj17dHJ1ZX0gLz4pXG4gICAgY29uc3QgY29udGFpbmVyID0gYXdhaXQgZmluZEJ5VGVzdElkKCdwb3BvdmVyLWNvbnRhaW5lcicpXG5cbiAgICBleHBlY3QoY29udGFpbmVyKS50b0JlVmlzaWJsZSgpXG4gIH0pXG5cbiAgaXQoJ1Nob3VsZCBwcm9wZXJseSByZXBvcnQgYmFjayB0aGUgZXZlbnQsIGlmIHRoZSBwb3BvdmVyIGJvZHkgaXMgY2xpY2tlZCcsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBtb2NrQm9keUNsaWNrID0gamVzdC5mbigpXG4gICAgcmVuZGVyKDxQb3BvdmVyV2l0aFRleHRJbnB1dEZpeHR1cmUgaXNTaG93bj17dHJ1ZX0gb25Cb2R5Q2xpY2s9e21vY2tCb2R5Q2xpY2t9IC8+KVxuXG4gICAgdXNlckV2ZW50LmNsaWNrKGRvY3VtZW50LmJvZHkpXG5cbiAgICBleHBlY3QobW9ja0JvZHlDbGljaykudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDEpXG4gIH0pXG5cbiAgaXQoJ1Nob3VsZCByZW1haW4gb3BlbiBpZiBhIHVzZXIgY2xpY2tzIHNvbWV3aGVyZSBvdXRzaWRlIG9mIHRoZSBwb3BvdmVyIGFyZWEgYW5kIGBzaG91bGRDbG9zZU9uRXh0ZXJuYWxDbGlja2AgaXMgYGZhbHNlYCcsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IGZpbmRCeVRlc3RJZCB9ID0gcmVuZGVyKDxQb3BvdmVyV2l0aFRleHRJbnB1dEZpeHR1cmUgaXNTaG93biBzaG91bGRDbG9zZU9uRXh0ZXJuYWxDbGljaz17ZmFsc2V9IC8+KVxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGF3YWl0IGZpbmRCeVRlc3RJZCgncG9wb3Zlci1jb250YWluZXInKVxuICAgIGV4cGVjdChjb250YWluZXIpLnRvQmVWaXNpYmxlKClcbiAgICB1c2VyRXZlbnQuY2xpY2soZG9jdW1lbnQuYm9keSlcblxuICAgIC8vIENvbnRhaW5lciBzaG91bGQgc3RpbGwgYmUgYWZ0ZXIgZG9jdW1lbnQgYm9keSB3YXMgY2xpY2tlZFxuICAgIGV4cGVjdChjb250YWluZXIpLnRvQmVWaXNpYmxlKClcbiAgfSlcbn0pXG4iXX0=