var colorMap = {
  none: {
    base: 'white',
    hover: 'colors.gray75',
    focus: 'colors.gray75',
    active: 'intents.info.background',
    current: 'intents.info.background'
  },
  danger: {
    base: 'intents.danger.background',
    hover: 'intents.danger.background',
    focus: 'colors.red100',
    active: 'colors.red100',
    current: 'colors.red100'
  },
  warning: {
    base: 'intents.warning.background',
    hover: 'intents.warning.background',
    focus: 'colors.orange100',
    active: 'colors.orange100',
    current: 'colors.orange100'
  },
  success: {
    base: 'intents.success.background',
    hover: 'intents.success.background',
    focus: 'colors.green100',
    active: 'colors.green100',
    current: 'colors.green100'
  }
};

var getBackgroundForIntentAndState = function getBackgroundForIntentAndState(intent, state) {
  return colorMap[intent][state];
};

var baseStyle = {
  outline: 'none',
  textDecoration: 'none',
  height: 64,
  _isSelectable: {
    cursor: 'pointer'
  }
};
var appearances = {
  "default": {
    backgroundColor: function backgroundColor(_, props) {
      return getBackgroundForIntentAndState(props.intent, 'base');
    },
    _hover: {
      backgroundColor: function backgroundColor(_, props) {
        return getBackgroundForIntentAndState(props.intent, 'hover');
      }
    },
    _focus: {
      backgroundColor: function backgroundColor(_, props) {
        return getBackgroundForIntentAndState(props.intent, 'focus');
      }
    },
    _active: {
      backgroundColor: function backgroundColor(_, props) {
        return getBackgroundForIntentAndState(props.intent, 'active');
      }
    },
    _current: {
      backgroundColor: function backgroundColor(_, props) {
        return getBackgroundForIntentAndState(props.intent, 'current');
      }
    }
  }
};
export default {
  baseStyle: baseStyle,
  appearances: appearances
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90aGVtZXMvZGVmYXVsdC9jb21wb25lbnRzL3RhYmxlLXJvdy5qcyJdLCJuYW1lcyI6WyJjb2xvck1hcCIsIm5vbmUiLCJiYXNlIiwiaG92ZXIiLCJmb2N1cyIsImFjdGl2ZSIsImN1cnJlbnQiLCJkYW5nZXIiLCJ3YXJuaW5nIiwic3VjY2VzcyIsImdldEJhY2tncm91bmRGb3JJbnRlbnRBbmRTdGF0ZSIsImludGVudCIsInN0YXRlIiwiYmFzZVN0eWxlIiwib3V0bGluZSIsInRleHREZWNvcmF0aW9uIiwiaGVpZ2h0IiwiX2lzU2VsZWN0YWJsZSIsImN1cnNvciIsImFwcGVhcmFuY2VzIiwiYmFja2dyb3VuZENvbG9yIiwiXyIsInByb3BzIiwiX2hvdmVyIiwiX2ZvY3VzIiwiX2FjdGl2ZSIsIl9jdXJyZW50Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFNQSxRQUFRLEdBQUc7QUFDZkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRSxPQURGO0FBRUpDLElBQUFBLEtBQUssRUFBRSxlQUZIO0FBR0pDLElBQUFBLEtBQUssRUFBRSxlQUhIO0FBSUpDLElBQUFBLE1BQU0sRUFBRSx5QkFKSjtBQUtKQyxJQUFBQSxPQUFPLEVBQUU7QUFMTCxHQURTO0FBU2ZDLEVBQUFBLE1BQU0sRUFBRTtBQUNOTCxJQUFBQSxJQUFJLEVBQUUsMkJBREE7QUFFTkMsSUFBQUEsS0FBSyxFQUFFLDJCQUZEO0FBR05DLElBQUFBLEtBQUssRUFBRSxlQUhEO0FBSU5DLElBQUFBLE1BQU0sRUFBRSxlQUpGO0FBS05DLElBQUFBLE9BQU8sRUFBRTtBQUxILEdBVE87QUFpQmZFLEVBQUFBLE9BQU8sRUFBRTtBQUNQTixJQUFBQSxJQUFJLEVBQUUsNEJBREM7QUFFUEMsSUFBQUEsS0FBSyxFQUFFLDRCQUZBO0FBR1BDLElBQUFBLEtBQUssRUFBRSxrQkFIQTtBQUlQQyxJQUFBQSxNQUFNLEVBQUUsa0JBSkQ7QUFLUEMsSUFBQUEsT0FBTyxFQUFFO0FBTEYsR0FqQk07QUF5QmZHLEVBQUFBLE9BQU8sRUFBRTtBQUNQUCxJQUFBQSxJQUFJLEVBQUUsNEJBREM7QUFFUEMsSUFBQUEsS0FBSyxFQUFFLDRCQUZBO0FBR1BDLElBQUFBLEtBQUssRUFBRSxpQkFIQTtBQUlQQyxJQUFBQSxNQUFNLEVBQUUsaUJBSkQ7QUFLUEMsSUFBQUEsT0FBTyxFQUFFO0FBTEY7QUF6Qk0sQ0FBakI7O0FBa0NBLElBQU1JLDhCQUE4QixHQUFHLFNBQWpDQSw4QkFBaUMsQ0FBQ0MsTUFBRCxFQUFTQyxLQUFUO0FBQUEsU0FBbUJaLFFBQVEsQ0FBQ1csTUFBRCxDQUFSLENBQWlCQyxLQUFqQixDQUFuQjtBQUFBLENBQXZDOztBQUVBLElBQU1DLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsT0FBTyxFQUFFLE1BRE87QUFFaEJDLEVBQUFBLGNBQWMsRUFBRSxNQUZBO0FBR2hCQyxFQUFBQSxNQUFNLEVBQUUsRUFIUTtBQUtoQkMsRUFBQUEsYUFBYSxFQUFFO0FBQ2JDLElBQUFBLE1BQU0sRUFBRTtBQURLO0FBTEMsQ0FBbEI7QUFVQSxJQUFNQyxXQUFXLEdBQUc7QUFDbEIsYUFBUztBQUNQQyxJQUFBQSxlQUFlLEVBQUUseUJBQUNDLENBQUQsRUFBSUMsS0FBSjtBQUFBLGFBQWNaLDhCQUE4QixDQUFDWSxLQUFLLENBQUNYLE1BQVAsRUFBZSxNQUFmLENBQTVDO0FBQUEsS0FEVjtBQUdQWSxJQUFBQSxNQUFNLEVBQUU7QUFDTkgsTUFBQUEsZUFBZSxFQUFFLHlCQUFDQyxDQUFELEVBQUlDLEtBQUo7QUFBQSxlQUFjWiw4QkFBOEIsQ0FBQ1ksS0FBSyxDQUFDWCxNQUFQLEVBQWUsT0FBZixDQUE1QztBQUFBO0FBRFgsS0FIRDtBQU9QYSxJQUFBQSxNQUFNLEVBQUU7QUFDTkosTUFBQUEsZUFBZSxFQUFFLHlCQUFDQyxDQUFELEVBQUlDLEtBQUo7QUFBQSxlQUFjWiw4QkFBOEIsQ0FBQ1ksS0FBSyxDQUFDWCxNQUFQLEVBQWUsT0FBZixDQUE1QztBQUFBO0FBRFgsS0FQRDtBQVdQYyxJQUFBQSxPQUFPLEVBQUU7QUFDUEwsTUFBQUEsZUFBZSxFQUFFLHlCQUFDQyxDQUFELEVBQUlDLEtBQUo7QUFBQSxlQUFjWiw4QkFBOEIsQ0FBQ1ksS0FBSyxDQUFDWCxNQUFQLEVBQWUsUUFBZixDQUE1QztBQUFBO0FBRFYsS0FYRjtBQWVQZSxJQUFBQSxRQUFRLEVBQUU7QUFDUk4sTUFBQUEsZUFBZSxFQUFFLHlCQUFDQyxDQUFELEVBQUlDLEtBQUo7QUFBQSxlQUFjWiw4QkFBOEIsQ0FBQ1ksS0FBSyxDQUFDWCxNQUFQLEVBQWUsU0FBZixDQUE1QztBQUFBO0FBRFQ7QUFmSDtBQURTLENBQXBCO0FBc0JBLGVBQWU7QUFDYkUsRUFBQUEsU0FBUyxFQUFUQSxTQURhO0FBRWJNLEVBQUFBLFdBQVcsRUFBWEE7QUFGYSxDQUFmIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29sb3JNYXAgPSB7XG4gIG5vbmU6IHtcbiAgICBiYXNlOiAnd2hpdGUnLFxuICAgIGhvdmVyOiAnY29sb3JzLmdyYXk3NScsXG4gICAgZm9jdXM6ICdjb2xvcnMuZ3JheTc1JyxcbiAgICBhY3RpdmU6ICdpbnRlbnRzLmluZm8uYmFja2dyb3VuZCcsXG4gICAgY3VycmVudDogJ2ludGVudHMuaW5mby5iYWNrZ3JvdW5kJ1xuICB9LFxuXG4gIGRhbmdlcjoge1xuICAgIGJhc2U6ICdpbnRlbnRzLmRhbmdlci5iYWNrZ3JvdW5kJyxcbiAgICBob3ZlcjogJ2ludGVudHMuZGFuZ2VyLmJhY2tncm91bmQnLFxuICAgIGZvY3VzOiAnY29sb3JzLnJlZDEwMCcsXG4gICAgYWN0aXZlOiAnY29sb3JzLnJlZDEwMCcsXG4gICAgY3VycmVudDogJ2NvbG9ycy5yZWQxMDAnXG4gIH0sXG5cbiAgd2FybmluZzoge1xuICAgIGJhc2U6ICdpbnRlbnRzLndhcm5pbmcuYmFja2dyb3VuZCcsXG4gICAgaG92ZXI6ICdpbnRlbnRzLndhcm5pbmcuYmFja2dyb3VuZCcsXG4gICAgZm9jdXM6ICdjb2xvcnMub3JhbmdlMTAwJyxcbiAgICBhY3RpdmU6ICdjb2xvcnMub3JhbmdlMTAwJyxcbiAgICBjdXJyZW50OiAnY29sb3JzLm9yYW5nZTEwMCdcbiAgfSxcblxuICBzdWNjZXNzOiB7XG4gICAgYmFzZTogJ2ludGVudHMuc3VjY2Vzcy5iYWNrZ3JvdW5kJyxcbiAgICBob3ZlcjogJ2ludGVudHMuc3VjY2Vzcy5iYWNrZ3JvdW5kJyxcbiAgICBmb2N1czogJ2NvbG9ycy5ncmVlbjEwMCcsXG4gICAgYWN0aXZlOiAnY29sb3JzLmdyZWVuMTAwJyxcbiAgICBjdXJyZW50OiAnY29sb3JzLmdyZWVuMTAwJ1xuICB9XG59XG5cbmNvbnN0IGdldEJhY2tncm91bmRGb3JJbnRlbnRBbmRTdGF0ZSA9IChpbnRlbnQsIHN0YXRlKSA9PiBjb2xvck1hcFtpbnRlbnRdW3N0YXRlXVxuXG5jb25zdCBiYXNlU3R5bGUgPSB7XG4gIG91dGxpbmU6ICdub25lJyxcbiAgdGV4dERlY29yYXRpb246ICdub25lJyxcbiAgaGVpZ2h0OiA2NCxcblxuICBfaXNTZWxlY3RhYmxlOiB7XG4gICAgY3Vyc29yOiAncG9pbnRlcidcbiAgfVxufVxuXG5jb25zdCBhcHBlYXJhbmNlcyA9IHtcbiAgZGVmYXVsdDoge1xuICAgIGJhY2tncm91bmRDb2xvcjogKF8sIHByb3BzKSA9PiBnZXRCYWNrZ3JvdW5kRm9ySW50ZW50QW5kU3RhdGUocHJvcHMuaW50ZW50LCAnYmFzZScpLFxuXG4gICAgX2hvdmVyOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IChfLCBwcm9wcykgPT4gZ2V0QmFja2dyb3VuZEZvckludGVudEFuZFN0YXRlKHByb3BzLmludGVudCwgJ2hvdmVyJylcbiAgICB9LFxuXG4gICAgX2ZvY3VzOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IChfLCBwcm9wcykgPT4gZ2V0QmFja2dyb3VuZEZvckludGVudEFuZFN0YXRlKHByb3BzLmludGVudCwgJ2ZvY3VzJylcbiAgICB9LFxuXG4gICAgX2FjdGl2ZToge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiAoXywgcHJvcHMpID0+IGdldEJhY2tncm91bmRGb3JJbnRlbnRBbmRTdGF0ZShwcm9wcy5pbnRlbnQsICdhY3RpdmUnKVxuICAgIH0sXG5cbiAgICBfY3VycmVudDoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiAoXywgcHJvcHMpID0+IGdldEJhY2tncm91bmRGb3JJbnRlbnRBbmRTdGF0ZShwcm9wcy5pbnRlbnQsICdjdXJyZW50JylcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBiYXNlU3R5bGUsXG4gIGFwcGVhcmFuY2VzXG59XG4iXX0=