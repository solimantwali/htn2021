import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var baseStyle = {
  marginTop: 0,
  marginBottom: 0
};
var appearances = {};
var paragraphSizes = {
  300: {
    fontSize: 'fontSizes.1',
    fontWeight: 'fontWeights.normal',
    lineHeight: 'lineHeights.1',
    letterSpacing: 'letterSpacings.normal'
  },
  400: {
    fontSize: 'fontSizes.2',
    fontWeight: 'fontWeights.normal',
    lineHeight: 'lineHeights.2',
    letterSpacing: 'letterSpacings.tight'
  },
  500: {
    fontSize: 'fontSizes.3',
    fontWeight: 'fontWeights.normal',
    lineHeight: 'lineHeights.3',
    letterSpacing: 'letterSpacings.tight'
  },
  600: {
    fontSize: 'fontSizes.4',
    fontWeight: 'fontWeights.normal',
    lineHeight: 'lineHeights.3',
    letterSpacing: 'letterSpacings.tighter'
  }
};

var sizes = _objectSpread(_objectSpread({}, paragraphSizes), {}, {
  small: paragraphSizes['300'],
  medium: paragraphSizes['400'],
  large: paragraphSizes['500']
});

export default {
  baseStyle: baseStyle,
  appearances: appearances,
  sizes: sizes
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90aGVtZXMvY2xhc3NpYy9jb21wb25lbnRzL3BhcmFncmFwaC5qcyJdLCJuYW1lcyI6WyJiYXNlU3R5bGUiLCJtYXJnaW5Ub3AiLCJtYXJnaW5Cb3R0b20iLCJhcHBlYXJhbmNlcyIsInBhcmFncmFwaFNpemVzIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwibGluZUhlaWdodCIsImxldHRlclNwYWNpbmciLCJzaXplcyIsInNtYWxsIiwibWVkaXVtIiwibGFyZ2UiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsU0FBUyxFQUFFLENBREs7QUFFaEJDLEVBQUFBLFlBQVksRUFBRTtBQUZFLENBQWxCO0FBS0EsSUFBTUMsV0FBVyxHQUFHLEVBQXBCO0FBRUEsSUFBTUMsY0FBYyxHQUFHO0FBQ3JCLE9BQUs7QUFDSEMsSUFBQUEsUUFBUSxFQUFFLGFBRFA7QUFFSEMsSUFBQUEsVUFBVSxFQUFFLG9CQUZUO0FBR0hDLElBQUFBLFVBQVUsRUFBRSxlQUhUO0FBSUhDLElBQUFBLGFBQWEsRUFBRTtBQUpaLEdBRGdCO0FBT3JCLE9BQUs7QUFDSEgsSUFBQUEsUUFBUSxFQUFFLGFBRFA7QUFFSEMsSUFBQUEsVUFBVSxFQUFFLG9CQUZUO0FBR0hDLElBQUFBLFVBQVUsRUFBRSxlQUhUO0FBSUhDLElBQUFBLGFBQWEsRUFBRTtBQUpaLEdBUGdCO0FBYXJCLE9BQUs7QUFDSEgsSUFBQUEsUUFBUSxFQUFFLGFBRFA7QUFFSEMsSUFBQUEsVUFBVSxFQUFFLG9CQUZUO0FBR0hDLElBQUFBLFVBQVUsRUFBRSxlQUhUO0FBSUhDLElBQUFBLGFBQWEsRUFBRTtBQUpaLEdBYmdCO0FBbUJyQixPQUFLO0FBQ0hILElBQUFBLFFBQVEsRUFBRSxhQURQO0FBRUhDLElBQUFBLFVBQVUsRUFBRSxvQkFGVDtBQUdIQyxJQUFBQSxVQUFVLEVBQUUsZUFIVDtBQUlIQyxJQUFBQSxhQUFhLEVBQUU7QUFKWjtBQW5CZ0IsQ0FBdkI7O0FBMkJBLElBQU1DLEtBQUssbUNBQ05MLGNBRE07QUFFVE0sRUFBQUEsS0FBSyxFQUFFTixjQUFjLENBQUMsS0FBRCxDQUZaO0FBR1RPLEVBQUFBLE1BQU0sRUFBRVAsY0FBYyxDQUFDLEtBQUQsQ0FIYjtBQUlUUSxFQUFBQSxLQUFLLEVBQUVSLGNBQWMsQ0FBQyxLQUFEO0FBSlosRUFBWDs7QUFPQSxlQUFlO0FBQ2JKLEVBQUFBLFNBQVMsRUFBVEEsU0FEYTtBQUViRyxFQUFBQSxXQUFXLEVBQVhBLFdBRmE7QUFHYk0sRUFBQUEsS0FBSyxFQUFMQTtBQUhhLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBiYXNlU3R5bGUgPSB7XG4gIG1hcmdpblRvcDogMCxcbiAgbWFyZ2luQm90dG9tOiAwXG59XG5cbmNvbnN0IGFwcGVhcmFuY2VzID0ge31cblxuY29uc3QgcGFyYWdyYXBoU2l6ZXMgPSB7XG4gIDMwMDoge1xuICAgIGZvbnRTaXplOiAnZm9udFNpemVzLjEnLFxuICAgIGZvbnRXZWlnaHQ6ICdmb250V2VpZ2h0cy5ub3JtYWwnLFxuICAgIGxpbmVIZWlnaHQ6ICdsaW5lSGVpZ2h0cy4xJyxcbiAgICBsZXR0ZXJTcGFjaW5nOiAnbGV0dGVyU3BhY2luZ3Mubm9ybWFsJ1xuICB9LFxuICA0MDA6IHtcbiAgICBmb250U2l6ZTogJ2ZvbnRTaXplcy4yJyxcbiAgICBmb250V2VpZ2h0OiAnZm9udFdlaWdodHMubm9ybWFsJyxcbiAgICBsaW5lSGVpZ2h0OiAnbGluZUhlaWdodHMuMicsXG4gICAgbGV0dGVyU3BhY2luZzogJ2xldHRlclNwYWNpbmdzLnRpZ2h0J1xuICB9LFxuICA1MDA6IHtcbiAgICBmb250U2l6ZTogJ2ZvbnRTaXplcy4zJyxcbiAgICBmb250V2VpZ2h0OiAnZm9udFdlaWdodHMubm9ybWFsJyxcbiAgICBsaW5lSGVpZ2h0OiAnbGluZUhlaWdodHMuMycsXG4gICAgbGV0dGVyU3BhY2luZzogJ2xldHRlclNwYWNpbmdzLnRpZ2h0J1xuICB9LFxuICA2MDA6IHtcbiAgICBmb250U2l6ZTogJ2ZvbnRTaXplcy40JyxcbiAgICBmb250V2VpZ2h0OiAnZm9udFdlaWdodHMubm9ybWFsJyxcbiAgICBsaW5lSGVpZ2h0OiAnbGluZUhlaWdodHMuMycsXG4gICAgbGV0dGVyU3BhY2luZzogJ2xldHRlclNwYWNpbmdzLnRpZ2h0ZXInXG4gIH1cbn1cblxuY29uc3Qgc2l6ZXMgPSB7XG4gIC4uLnBhcmFncmFwaFNpemVzLFxuICBzbWFsbDogcGFyYWdyYXBoU2l6ZXNbJzMwMCddLFxuICBtZWRpdW06IHBhcmFncmFwaFNpemVzWyc0MDAnXSxcbiAgbGFyZ2U6IHBhcmFncmFwaFNpemVzWyc1MDAnXVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGJhc2VTdHlsZSxcbiAgYXBwZWFyYW5jZXMsXG4gIHNpemVzXG59XG4iXX0=