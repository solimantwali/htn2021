import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function getColors(theme, _ref) {
  var color = _ref.color,
      hashValue = _ref.hashValue;

  if (color === 'automatic') {
    var keys = Object.keys(theme.fills.subtle);

    if (hashValue) {
      return theme.fills.subtle[keys[hashValue % keys.length]];
    } else {
      return theme.fills.subtle[keys[Math.floor(Math.random() * keys.length)]];
    }
  }

  return theme.fills.subtle[color];
}

var baseStyle = function baseStyle(theme, props) {
  return _objectSpread({
    borderRadius: props.shape === 'round' ? '100%' : 'radii.1'
  }, getColors(theme, props));
};

var appearances = {};
var sizes = {};
export default {
  baseStyle: baseStyle,
  appearances: appearances,
  sizes: sizes
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90aGVtZXMvY2xhc3NpYy9jb21wb25lbnRzL2F2YXRhci5qcyJdLCJuYW1lcyI6WyJnZXRDb2xvcnMiLCJ0aGVtZSIsImNvbG9yIiwiaGFzaFZhbHVlIiwia2V5cyIsIk9iamVjdCIsImZpbGxzIiwic3VidGxlIiwibGVuZ3RoIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiYmFzZVN0eWxlIiwicHJvcHMiLCJib3JkZXJSYWRpdXMiLCJzaGFwZSIsImFwcGVhcmFuY2VzIiwic2l6ZXMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLFNBQVNBLFNBQVQsQ0FBbUJDLEtBQW5CLFFBQWdEO0FBQUEsTUFBcEJDLEtBQW9CLFFBQXBCQSxLQUFvQjtBQUFBLE1BQWJDLFNBQWEsUUFBYkEsU0FBYTs7QUFDOUMsTUFBSUQsS0FBSyxLQUFLLFdBQWQsRUFBMkI7QUFDekIsUUFBTUUsSUFBSSxHQUFHQyxNQUFNLENBQUNELElBQVAsQ0FBWUgsS0FBSyxDQUFDSyxLQUFOLENBQVlDLE1BQXhCLENBQWI7O0FBRUEsUUFBSUosU0FBSixFQUFlO0FBQ2IsYUFBT0YsS0FBSyxDQUFDSyxLQUFOLENBQVlDLE1BQVosQ0FBbUJILElBQUksQ0FBQ0QsU0FBUyxHQUFHQyxJQUFJLENBQUNJLE1BQWxCLENBQXZCLENBQVA7QUFDRCxLQUZELE1BRU87QUFDTCxhQUFPUCxLQUFLLENBQUNLLEtBQU4sQ0FBWUMsTUFBWixDQUFtQkgsSUFBSSxDQUFDSyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWdCUCxJQUFJLENBQUNJLE1BQWhDLENBQUQsQ0FBdkIsQ0FBUDtBQUNEO0FBQ0Y7O0FBRUQsU0FBT1AsS0FBSyxDQUFDSyxLQUFOLENBQVlDLE1BQVosQ0FBbUJMLEtBQW5CLENBQVA7QUFDRDs7QUFFRCxJQUFNVSxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFDWCxLQUFELEVBQVFZLEtBQVIsRUFBa0I7QUFDbEM7QUFDRUMsSUFBQUEsWUFBWSxFQUFFRCxLQUFLLENBQUNFLEtBQU4sS0FBZ0IsT0FBaEIsR0FBMEIsTUFBMUIsR0FBbUM7QUFEbkQsS0FFS2YsU0FBUyxDQUFDQyxLQUFELEVBQVFZLEtBQVIsQ0FGZDtBQUlELENBTEQ7O0FBT0EsSUFBTUcsV0FBVyxHQUFHLEVBQXBCO0FBQ0EsSUFBTUMsS0FBSyxHQUFHLEVBQWQ7QUFFQSxlQUFlO0FBQ2JMLEVBQUFBLFNBQVMsRUFBVEEsU0FEYTtBQUViSSxFQUFBQSxXQUFXLEVBQVhBLFdBRmE7QUFHYkMsRUFBQUEsS0FBSyxFQUFMQTtBQUhhLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBnZXRDb2xvcnModGhlbWUsIHsgY29sb3IsIGhhc2hWYWx1ZSB9KSB7XG4gIGlmIChjb2xvciA9PT0gJ2F1dG9tYXRpYycpIHtcbiAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModGhlbWUuZmlsbHMuc3VidGxlKVxuXG4gICAgaWYgKGhhc2hWYWx1ZSkge1xuICAgICAgcmV0dXJuIHRoZW1lLmZpbGxzLnN1YnRsZVtrZXlzW2hhc2hWYWx1ZSAlIGtleXMubGVuZ3RoXV1cbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoZW1lLmZpbGxzLnN1YnRsZVtrZXlzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGtleXMubGVuZ3RoKV1dXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoZW1lLmZpbGxzLnN1YnRsZVtjb2xvcl1cbn1cblxuY29uc3QgYmFzZVN0eWxlID0gKHRoZW1lLCBwcm9wcykgPT4ge1xuICByZXR1cm4ge1xuICAgIGJvcmRlclJhZGl1czogcHJvcHMuc2hhcGUgPT09ICdyb3VuZCcgPyAnMTAwJScgOiAncmFkaWkuMScsXG4gICAgLi4uZ2V0Q29sb3JzKHRoZW1lLCBwcm9wcylcbiAgfVxufVxuXG5jb25zdCBhcHBlYXJhbmNlcyA9IHt9XG5jb25zdCBzaXplcyA9IHt9XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgYmFzZVN0eWxlLFxuICBhcHBlYXJhbmNlcyxcbiAgc2l6ZXNcbn1cbiJdfQ==