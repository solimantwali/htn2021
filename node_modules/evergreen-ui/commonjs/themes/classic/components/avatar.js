"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function getColors(theme, _ref) {
  var color = _ref.color,
      hashValue = _ref.hashValue;

  if (color === 'automatic') {
    var keys = Object.keys(theme.fills.subtle);

    if (hashValue) {
      return theme.fills.subtle[keys[hashValue % keys.length]];
    } else {
      return theme.fills.subtle[keys[Math.floor(Math.random() * keys.length)]];
    }
  }

  return theme.fills.subtle[color];
}

var baseStyle = function baseStyle(theme, props) {
  return _objectSpread({
    borderRadius: props.shape === 'round' ? '100%' : 'radii.1'
  }, getColors(theme, props));
};

var appearances = {};
var sizes = {};
var _default = {
  baseStyle: baseStyle,
  appearances: appearances,
  sizes: sizes
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90aGVtZXMvY2xhc3NpYy9jb21wb25lbnRzL2F2YXRhci5qcyJdLCJuYW1lcyI6WyJnZXRDb2xvcnMiLCJ0aGVtZSIsImNvbG9yIiwiaGFzaFZhbHVlIiwia2V5cyIsIk9iamVjdCIsImZpbGxzIiwic3VidGxlIiwibGVuZ3RoIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiYmFzZVN0eWxlIiwicHJvcHMiLCJib3JkZXJSYWRpdXMiLCJzaGFwZSIsImFwcGVhcmFuY2VzIiwic2l6ZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLFNBQVNBLFNBQVQsQ0FBbUJDLEtBQW5CLFFBQWdEO0FBQUEsTUFBcEJDLEtBQW9CLFFBQXBCQSxLQUFvQjtBQUFBLE1BQWJDLFNBQWEsUUFBYkEsU0FBYTs7QUFDOUMsTUFBSUQsS0FBSyxLQUFLLFdBQWQsRUFBMkI7QUFDekIsUUFBTUUsSUFBSSxHQUFHQyxNQUFNLENBQUNELElBQVAsQ0FBWUgsS0FBSyxDQUFDSyxLQUFOLENBQVlDLE1BQXhCLENBQWI7O0FBRUEsUUFBSUosU0FBSixFQUFlO0FBQ2IsYUFBT0YsS0FBSyxDQUFDSyxLQUFOLENBQVlDLE1BQVosQ0FBbUJILElBQUksQ0FBQ0QsU0FBUyxHQUFHQyxJQUFJLENBQUNJLE1BQWxCLENBQXZCLENBQVA7QUFDRCxLQUZELE1BRU87QUFDTCxhQUFPUCxLQUFLLENBQUNLLEtBQU4sQ0FBWUMsTUFBWixDQUFtQkgsSUFBSSxDQUFDSyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWdCUCxJQUFJLENBQUNJLE1BQWhDLENBQUQsQ0FBdkIsQ0FBUDtBQUNEO0FBQ0Y7O0FBRUQsU0FBT1AsS0FBSyxDQUFDSyxLQUFOLENBQVlDLE1BQVosQ0FBbUJMLEtBQW5CLENBQVA7QUFDRDs7QUFFRCxJQUFNVSxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFDWCxLQUFELEVBQVFZLEtBQVIsRUFBa0I7QUFDbEM7QUFDRUMsSUFBQUEsWUFBWSxFQUFFRCxLQUFLLENBQUNFLEtBQU4sS0FBZ0IsT0FBaEIsR0FBMEIsTUFBMUIsR0FBbUM7QUFEbkQsS0FFS2YsU0FBUyxDQUFDQyxLQUFELEVBQVFZLEtBQVIsQ0FGZDtBQUlELENBTEQ7O0FBT0EsSUFBTUcsV0FBVyxHQUFHLEVBQXBCO0FBQ0EsSUFBTUMsS0FBSyxHQUFHLEVBQWQ7ZUFFZTtBQUNiTCxFQUFBQSxTQUFTLEVBQVRBLFNBRGE7QUFFYkksRUFBQUEsV0FBVyxFQUFYQSxXQUZhO0FBR2JDLEVBQUFBLEtBQUssRUFBTEE7QUFIYSxDIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2V0Q29sb3JzKHRoZW1lLCB7IGNvbG9yLCBoYXNoVmFsdWUgfSkge1xuICBpZiAoY29sb3IgPT09ICdhdXRvbWF0aWMnKSB7XG4gICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoZW1lLmZpbGxzLnN1YnRsZSlcblxuICAgIGlmIChoYXNoVmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGVtZS5maWxscy5zdWJ0bGVba2V5c1toYXNoVmFsdWUgJSBrZXlzLmxlbmd0aF1dXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGVtZS5maWxscy5zdWJ0bGVba2V5c1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBrZXlzLmxlbmd0aCldXVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGVtZS5maWxscy5zdWJ0bGVbY29sb3JdXG59XG5cbmNvbnN0IGJhc2VTdHlsZSA9ICh0aGVtZSwgcHJvcHMpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBib3JkZXJSYWRpdXM6IHByb3BzLnNoYXBlID09PSAncm91bmQnID8gJzEwMCUnIDogJ3JhZGlpLjEnLFxuICAgIC4uLmdldENvbG9ycyh0aGVtZSwgcHJvcHMpXG4gIH1cbn1cblxuY29uc3QgYXBwZWFyYW5jZXMgPSB7fVxuY29uc3Qgc2l6ZXMgPSB7fVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGJhc2VTdHlsZSxcbiAgYXBwZWFyYW5jZXMsXG4gIHNpemVzXG59XG4iXX0=