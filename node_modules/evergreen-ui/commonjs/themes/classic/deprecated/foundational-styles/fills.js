"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _colors = _interopRequireDefault(require("./colors"));

var _palette = _interopRequireDefault(require("./palette"));

/**
 * Fills are used in Avatars and Badges.
 */
var fills = {};
fills.solid = {
  neutral: {
    color: 'white',
    backgroundColor: _palette["default"].neutral.base
  },
  blue: {
    color: 'white',
    backgroundColor: _palette["default"].blue.base
  },
  red: {
    color: 'white',
    backgroundColor: _palette["default"].red.base
  },
  orange: {
    color: 'white',
    backgroundColor: _palette["default"].orange.base
  },
  yellow: {
    color: _palette["default"].yellow.dark,
    backgroundColor: _palette["default"].yellow.base
  },
  green: {
    color: 'white',
    backgroundColor: _palette["default"].green.base
  },
  teal: {
    color: 'white',
    backgroundColor: _palette["default"].teal.base
  },
  purple: {
    color: 'white',
    backgroundColor: _palette["default"].purple.base
  }
};
fills.subtle = {
  neutral: {
    color: _colors["default"].text["default"],
    backgroundColor: _palette["default"].neutral.light
  },
  blue: {
    color: _palette["default"].blue.dark,
    backgroundColor: _palette["default"].blue.light
  },
  red: {
    color: _palette["default"].red.dark,
    backgroundColor: _palette["default"].red.light
  },
  orange: {
    color: _palette["default"].orange.dark,
    backgroundColor: _palette["default"].orange.light
  },
  yellow: {
    color: _palette["default"].yellow.dark,
    backgroundColor: _palette["default"].yellow.light
  },
  green: {
    color: _palette["default"].green.dark,
    backgroundColor: _palette["default"].green.light
  },
  teal: {
    color: _palette["default"].teal.dark,
    backgroundColor: _palette["default"].teal.light
  },
  purple: {
    color: _palette["default"].purple.dark,
    backgroundColor: _palette["default"].purple.light
  }
};
fills.options = Object.keys(fills.solid);
var _default = fills;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90aGVtZXMvY2xhc3NpYy9kZXByZWNhdGVkL2ZvdW5kYXRpb25hbC1zdHlsZXMvZmlsbHMuanMiXSwibmFtZXMiOlsiZmlsbHMiLCJzb2xpZCIsIm5ldXRyYWwiLCJjb2xvciIsImJhY2tncm91bmRDb2xvciIsInBhbGV0dGUiLCJiYXNlIiwiYmx1ZSIsInJlZCIsIm9yYW5nZSIsInllbGxvdyIsImRhcmsiLCJncmVlbiIsInRlYWwiLCJwdXJwbGUiLCJzdWJ0bGUiLCJjb2xvcnMiLCJ0ZXh0IiwibGlnaHQiLCJvcHRpb25zIiwiT2JqZWN0Iiwia2V5cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBTUEsS0FBSyxHQUFHLEVBQWQ7QUFFQUEsS0FBSyxDQUFDQyxLQUFOLEdBQWM7QUFDWkMsRUFBQUEsT0FBTyxFQUFFO0FBQ1BDLElBQUFBLEtBQUssRUFBRSxPQURBO0FBRVBDLElBQUFBLGVBQWUsRUFBRUMsb0JBQVFILE9BQVIsQ0FBZ0JJO0FBRjFCLEdBREc7QUFLWkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pKLElBQUFBLEtBQUssRUFBRSxPQURIO0FBRUpDLElBQUFBLGVBQWUsRUFBRUMsb0JBQVFFLElBQVIsQ0FBYUQ7QUFGMUIsR0FMTTtBQVNaRSxFQUFBQSxHQUFHLEVBQUU7QUFDSEwsSUFBQUEsS0FBSyxFQUFFLE9BREo7QUFFSEMsSUFBQUEsZUFBZSxFQUFFQyxvQkFBUUcsR0FBUixDQUFZRjtBQUYxQixHQVRPO0FBYVpHLEVBQUFBLE1BQU0sRUFBRTtBQUNOTixJQUFBQSxLQUFLLEVBQUUsT0FERDtBQUVOQyxJQUFBQSxlQUFlLEVBQUVDLG9CQUFRSSxNQUFSLENBQWVIO0FBRjFCLEdBYkk7QUFpQlpJLEVBQUFBLE1BQU0sRUFBRTtBQUNOUCxJQUFBQSxLQUFLLEVBQUVFLG9CQUFRSyxNQUFSLENBQWVDLElBRGhCO0FBRU5QLElBQUFBLGVBQWUsRUFBRUMsb0JBQVFLLE1BQVIsQ0FBZUo7QUFGMUIsR0FqQkk7QUFxQlpNLEVBQUFBLEtBQUssRUFBRTtBQUNMVCxJQUFBQSxLQUFLLEVBQUUsT0FERjtBQUVMQyxJQUFBQSxlQUFlLEVBQUVDLG9CQUFRTyxLQUFSLENBQWNOO0FBRjFCLEdBckJLO0FBeUJaTyxFQUFBQSxJQUFJLEVBQUU7QUFDSlYsSUFBQUEsS0FBSyxFQUFFLE9BREg7QUFFSkMsSUFBQUEsZUFBZSxFQUFFQyxvQkFBUVEsSUFBUixDQUFhUDtBQUYxQixHQXpCTTtBQTZCWlEsRUFBQUEsTUFBTSxFQUFFO0FBQ05YLElBQUFBLEtBQUssRUFBRSxPQUREO0FBRU5DLElBQUFBLGVBQWUsRUFBRUMsb0JBQVFTLE1BQVIsQ0FBZVI7QUFGMUI7QUE3QkksQ0FBZDtBQW1DQU4sS0FBSyxDQUFDZSxNQUFOLEdBQWU7QUFDYmIsRUFBQUEsT0FBTyxFQUFFO0FBQ1BDLElBQUFBLEtBQUssRUFBRWEsbUJBQU9DLElBQVAsV0FEQTtBQUVQYixJQUFBQSxlQUFlLEVBQUVDLG9CQUFRSCxPQUFSLENBQWdCZ0I7QUFGMUIsR0FESTtBQUtiWCxFQUFBQSxJQUFJLEVBQUU7QUFDSkosSUFBQUEsS0FBSyxFQUFFRSxvQkFBUUUsSUFBUixDQUFhSSxJQURoQjtBQUVKUCxJQUFBQSxlQUFlLEVBQUVDLG9CQUFRRSxJQUFSLENBQWFXO0FBRjFCLEdBTE87QUFTYlYsRUFBQUEsR0FBRyxFQUFFO0FBQ0hMLElBQUFBLEtBQUssRUFBRUUsb0JBQVFHLEdBQVIsQ0FBWUcsSUFEaEI7QUFFSFAsSUFBQUEsZUFBZSxFQUFFQyxvQkFBUUcsR0FBUixDQUFZVTtBQUYxQixHQVRRO0FBYWJULEVBQUFBLE1BQU0sRUFBRTtBQUNOTixJQUFBQSxLQUFLLEVBQUVFLG9CQUFRSSxNQUFSLENBQWVFLElBRGhCO0FBRU5QLElBQUFBLGVBQWUsRUFBRUMsb0JBQVFJLE1BQVIsQ0FBZVM7QUFGMUIsR0FiSztBQWlCYlIsRUFBQUEsTUFBTSxFQUFFO0FBQ05QLElBQUFBLEtBQUssRUFBRUUsb0JBQVFLLE1BQVIsQ0FBZUMsSUFEaEI7QUFFTlAsSUFBQUEsZUFBZSxFQUFFQyxvQkFBUUssTUFBUixDQUFlUTtBQUYxQixHQWpCSztBQXFCYk4sRUFBQUEsS0FBSyxFQUFFO0FBQ0xULElBQUFBLEtBQUssRUFBRUUsb0JBQVFPLEtBQVIsQ0FBY0QsSUFEaEI7QUFFTFAsSUFBQUEsZUFBZSxFQUFFQyxvQkFBUU8sS0FBUixDQUFjTTtBQUYxQixHQXJCTTtBQXlCYkwsRUFBQUEsSUFBSSxFQUFFO0FBQ0pWLElBQUFBLEtBQUssRUFBRUUsb0JBQVFRLElBQVIsQ0FBYUYsSUFEaEI7QUFFSlAsSUFBQUEsZUFBZSxFQUFFQyxvQkFBUVEsSUFBUixDQUFhSztBQUYxQixHQXpCTztBQTZCYkosRUFBQUEsTUFBTSxFQUFFO0FBQ05YLElBQUFBLEtBQUssRUFBRUUsb0JBQVFTLE1BQVIsQ0FBZUgsSUFEaEI7QUFFTlAsSUFBQUEsZUFBZSxFQUFFQyxvQkFBUVMsTUFBUixDQUFlSTtBQUYxQjtBQTdCSyxDQUFmO0FBbUNBbEIsS0FBSyxDQUFDbUIsT0FBTixHQUFnQkMsTUFBTSxDQUFDQyxJQUFQLENBQVlyQixLQUFLLENBQUNDLEtBQWxCLENBQWhCO2VBRWVELEsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29sb3JzIGZyb20gJy4vY29sb3JzJ1xuaW1wb3J0IHBhbGV0dGUgZnJvbSAnLi9wYWxldHRlJ1xuXG4vKipcbiAqIEZpbGxzIGFyZSB1c2VkIGluIEF2YXRhcnMgYW5kIEJhZGdlcy5cbiAqL1xuY29uc3QgZmlsbHMgPSB7fVxuXG5maWxscy5zb2xpZCA9IHtcbiAgbmV1dHJhbDoge1xuICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgIGJhY2tncm91bmRDb2xvcjogcGFsZXR0ZS5uZXV0cmFsLmJhc2VcbiAgfSxcbiAgYmx1ZToge1xuICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgIGJhY2tncm91bmRDb2xvcjogcGFsZXR0ZS5ibHVlLmJhc2VcbiAgfSxcbiAgcmVkOiB7XG4gICAgY29sb3I6ICd3aGl0ZScsXG4gICAgYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLnJlZC5iYXNlXG4gIH0sXG4gIG9yYW5nZToge1xuICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgIGJhY2tncm91bmRDb2xvcjogcGFsZXR0ZS5vcmFuZ2UuYmFzZVxuICB9LFxuICB5ZWxsb3c6IHtcbiAgICBjb2xvcjogcGFsZXR0ZS55ZWxsb3cuZGFyayxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHBhbGV0dGUueWVsbG93LmJhc2VcbiAgfSxcbiAgZ3JlZW46IHtcbiAgICBjb2xvcjogJ3doaXRlJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHBhbGV0dGUuZ3JlZW4uYmFzZVxuICB9LFxuICB0ZWFsOiB7XG4gICAgY29sb3I6ICd3aGl0ZScsXG4gICAgYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLnRlYWwuYmFzZVxuICB9LFxuICBwdXJwbGU6IHtcbiAgICBjb2xvcjogJ3doaXRlJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHBhbGV0dGUucHVycGxlLmJhc2VcbiAgfVxufVxuXG5maWxscy5zdWJ0bGUgPSB7XG4gIG5ldXRyYWw6IHtcbiAgICBjb2xvcjogY29sb3JzLnRleHQuZGVmYXVsdCxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHBhbGV0dGUubmV1dHJhbC5saWdodFxuICB9LFxuICBibHVlOiB7XG4gICAgY29sb3I6IHBhbGV0dGUuYmx1ZS5kYXJrLFxuICAgIGJhY2tncm91bmRDb2xvcjogcGFsZXR0ZS5ibHVlLmxpZ2h0XG4gIH0sXG4gIHJlZDoge1xuICAgIGNvbG9yOiBwYWxldHRlLnJlZC5kYXJrLFxuICAgIGJhY2tncm91bmRDb2xvcjogcGFsZXR0ZS5yZWQubGlnaHRcbiAgfSxcbiAgb3JhbmdlOiB7XG4gICAgY29sb3I6IHBhbGV0dGUub3JhbmdlLmRhcmssXG4gICAgYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLm9yYW5nZS5saWdodFxuICB9LFxuICB5ZWxsb3c6IHtcbiAgICBjb2xvcjogcGFsZXR0ZS55ZWxsb3cuZGFyayxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHBhbGV0dGUueWVsbG93LmxpZ2h0XG4gIH0sXG4gIGdyZWVuOiB7XG4gICAgY29sb3I6IHBhbGV0dGUuZ3JlZW4uZGFyayxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHBhbGV0dGUuZ3JlZW4ubGlnaHRcbiAgfSxcbiAgdGVhbDoge1xuICAgIGNvbG9yOiBwYWxldHRlLnRlYWwuZGFyayxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHBhbGV0dGUudGVhbC5saWdodFxuICB9LFxuICBwdXJwbGU6IHtcbiAgICBjb2xvcjogcGFsZXR0ZS5wdXJwbGUuZGFyayxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHBhbGV0dGUucHVycGxlLmxpZ2h0XG4gIH1cbn1cblxuZmlsbHMub3B0aW9ucyA9IE9iamVjdC5rZXlzKGZpbGxzLnNvbGlkKVxuXG5leHBvcnQgZGVmYXVsdCBmaWxsc1xuIl19