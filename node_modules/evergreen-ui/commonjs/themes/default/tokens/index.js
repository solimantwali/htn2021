"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _colors = _interopRequireDefault(require("./colors"));

var _fills = _interopRequireDefault(require("./fills"));

var _intents = _interopRequireDefault(require("./intents"));

var _radii = _interopRequireDefault(require("./radii"));

var _shadows = _interopRequireDefault(require("./shadows"));

var _typography = _interopRequireDefault(require("./typography"));

var _zIndices = _interopRequireDefault(require("./z-indices"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var tokens = _objectSpread(_objectSpread({
  colors: _colors["default"],
  fills: _fills["default"],
  intents: _intents["default"],
  radii: _radii["default"],
  shadows: _shadows["default"]
}, _typography["default"]), {}, {
  zIndices: _zIndices["default"]
});

var _default = tokens;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90aGVtZXMvZGVmYXVsdC90b2tlbnMvaW5kZXguanMiXSwibmFtZXMiOlsidG9rZW5zIiwiY29sb3JzIiwiZmlsbHMiLCJpbnRlbnRzIiwicmFkaWkiLCJzaGFkb3dzIiwidHlwb2dyYXBoeSIsInpJbmRpY2VzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxNQUFNO0FBQ1ZDLEVBQUFBLE1BQU0sRUFBTkEsa0JBRFU7QUFFVkMsRUFBQUEsS0FBSyxFQUFMQSxpQkFGVTtBQUdWQyxFQUFBQSxPQUFPLEVBQVBBLG1CQUhVO0FBSVZDLEVBQUFBLEtBQUssRUFBTEEsaUJBSlU7QUFLVkMsRUFBQUEsT0FBTyxFQUFQQTtBQUxVLEdBTVBDLHNCQU5PO0FBT1ZDLEVBQUFBLFFBQVEsRUFBUkE7QUFQVSxFQUFaOztlQVVlUCxNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbG9ycyBmcm9tICcuL2NvbG9ycydcbmltcG9ydCBmaWxscyBmcm9tICcuL2ZpbGxzJ1xuaW1wb3J0IGludGVudHMgZnJvbSAnLi9pbnRlbnRzJ1xuaW1wb3J0IHJhZGlpIGZyb20gJy4vcmFkaWknXG5pbXBvcnQgc2hhZG93cyBmcm9tICcuL3NoYWRvd3MnXG5pbXBvcnQgdHlwb2dyYXBoeSBmcm9tICcuL3R5cG9ncmFwaHknXG5pbXBvcnQgekluZGljZXMgZnJvbSAnLi96LWluZGljZXMnXG5cbmNvbnN0IHRva2VucyA9IHtcbiAgY29sb3JzLFxuICBmaWxscyxcbiAgaW50ZW50cyxcbiAgcmFkaWksXG4gIHNoYWRvd3MsXG4gIC4uLnR5cG9ncmFwaHksXG4gIHpJbmRpY2VzXG59XG5cbmV4cG9ydCBkZWZhdWx0IHRva2Vuc1xuIl19