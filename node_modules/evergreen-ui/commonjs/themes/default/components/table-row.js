"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var colorMap = {
  none: {
    base: 'white',
    hover: 'colors.gray75',
    focus: 'colors.gray75',
    active: 'intents.info.background',
    current: 'intents.info.background'
  },
  danger: {
    base: 'intents.danger.background',
    hover: 'intents.danger.background',
    focus: 'colors.red100',
    active: 'colors.red100',
    current: 'colors.red100'
  },
  warning: {
    base: 'intents.warning.background',
    hover: 'intents.warning.background',
    focus: 'colors.orange100',
    active: 'colors.orange100',
    current: 'colors.orange100'
  },
  success: {
    base: 'intents.success.background',
    hover: 'intents.success.background',
    focus: 'colors.green100',
    active: 'colors.green100',
    current: 'colors.green100'
  }
};

var getBackgroundForIntentAndState = function getBackgroundForIntentAndState(intent, state) {
  return colorMap[intent][state];
};

var baseStyle = {
  outline: 'none',
  textDecoration: 'none',
  height: 64,
  _isSelectable: {
    cursor: 'pointer'
  }
};
var appearances = {
  "default": {
    backgroundColor: function backgroundColor(_, props) {
      return getBackgroundForIntentAndState(props.intent, 'base');
    },
    _hover: {
      backgroundColor: function backgroundColor(_, props) {
        return getBackgroundForIntentAndState(props.intent, 'hover');
      }
    },
    _focus: {
      backgroundColor: function backgroundColor(_, props) {
        return getBackgroundForIntentAndState(props.intent, 'focus');
      }
    },
    _active: {
      backgroundColor: function backgroundColor(_, props) {
        return getBackgroundForIntentAndState(props.intent, 'active');
      }
    },
    _current: {
      backgroundColor: function backgroundColor(_, props) {
        return getBackgroundForIntentAndState(props.intent, 'current');
      }
    }
  }
};
var _default = {
  baseStyle: baseStyle,
  appearances: appearances
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90aGVtZXMvZGVmYXVsdC9jb21wb25lbnRzL3RhYmxlLXJvdy5qcyJdLCJuYW1lcyI6WyJjb2xvck1hcCIsIm5vbmUiLCJiYXNlIiwiaG92ZXIiLCJmb2N1cyIsImFjdGl2ZSIsImN1cnJlbnQiLCJkYW5nZXIiLCJ3YXJuaW5nIiwic3VjY2VzcyIsImdldEJhY2tncm91bmRGb3JJbnRlbnRBbmRTdGF0ZSIsImludGVudCIsInN0YXRlIiwiYmFzZVN0eWxlIiwib3V0bGluZSIsInRleHREZWNvcmF0aW9uIiwiaGVpZ2h0IiwiX2lzU2VsZWN0YWJsZSIsImN1cnNvciIsImFwcGVhcmFuY2VzIiwiYmFja2dyb3VuZENvbG9yIiwiXyIsInByb3BzIiwiX2hvdmVyIiwiX2ZvY3VzIiwiX2FjdGl2ZSIsIl9jdXJyZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxRQUFRLEdBQUc7QUFDZkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRSxPQURGO0FBRUpDLElBQUFBLEtBQUssRUFBRSxlQUZIO0FBR0pDLElBQUFBLEtBQUssRUFBRSxlQUhIO0FBSUpDLElBQUFBLE1BQU0sRUFBRSx5QkFKSjtBQUtKQyxJQUFBQSxPQUFPLEVBQUU7QUFMTCxHQURTO0FBU2ZDLEVBQUFBLE1BQU0sRUFBRTtBQUNOTCxJQUFBQSxJQUFJLEVBQUUsMkJBREE7QUFFTkMsSUFBQUEsS0FBSyxFQUFFLDJCQUZEO0FBR05DLElBQUFBLEtBQUssRUFBRSxlQUhEO0FBSU5DLElBQUFBLE1BQU0sRUFBRSxlQUpGO0FBS05DLElBQUFBLE9BQU8sRUFBRTtBQUxILEdBVE87QUFpQmZFLEVBQUFBLE9BQU8sRUFBRTtBQUNQTixJQUFBQSxJQUFJLEVBQUUsNEJBREM7QUFFUEMsSUFBQUEsS0FBSyxFQUFFLDRCQUZBO0FBR1BDLElBQUFBLEtBQUssRUFBRSxrQkFIQTtBQUlQQyxJQUFBQSxNQUFNLEVBQUUsa0JBSkQ7QUFLUEMsSUFBQUEsT0FBTyxFQUFFO0FBTEYsR0FqQk07QUF5QmZHLEVBQUFBLE9BQU8sRUFBRTtBQUNQUCxJQUFBQSxJQUFJLEVBQUUsNEJBREM7QUFFUEMsSUFBQUEsS0FBSyxFQUFFLDRCQUZBO0FBR1BDLElBQUFBLEtBQUssRUFBRSxpQkFIQTtBQUlQQyxJQUFBQSxNQUFNLEVBQUUsaUJBSkQ7QUFLUEMsSUFBQUEsT0FBTyxFQUFFO0FBTEY7QUF6Qk0sQ0FBakI7O0FBa0NBLElBQU1JLDhCQUE4QixHQUFHLFNBQWpDQSw4QkFBaUMsQ0FBQ0MsTUFBRCxFQUFTQyxLQUFUO0FBQUEsU0FBbUJaLFFBQVEsQ0FBQ1csTUFBRCxDQUFSLENBQWlCQyxLQUFqQixDQUFuQjtBQUFBLENBQXZDOztBQUVBLElBQU1DLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsT0FBTyxFQUFFLE1BRE87QUFFaEJDLEVBQUFBLGNBQWMsRUFBRSxNQUZBO0FBR2hCQyxFQUFBQSxNQUFNLEVBQUUsRUFIUTtBQUtoQkMsRUFBQUEsYUFBYSxFQUFFO0FBQ2JDLElBQUFBLE1BQU0sRUFBRTtBQURLO0FBTEMsQ0FBbEI7QUFVQSxJQUFNQyxXQUFXLEdBQUc7QUFDbEIsYUFBUztBQUNQQyxJQUFBQSxlQUFlLEVBQUUseUJBQUNDLENBQUQsRUFBSUMsS0FBSjtBQUFBLGFBQWNaLDhCQUE4QixDQUFDWSxLQUFLLENBQUNYLE1BQVAsRUFBZSxNQUFmLENBQTVDO0FBQUEsS0FEVjtBQUdQWSxJQUFBQSxNQUFNLEVBQUU7QUFDTkgsTUFBQUEsZUFBZSxFQUFFLHlCQUFDQyxDQUFELEVBQUlDLEtBQUo7QUFBQSxlQUFjWiw4QkFBOEIsQ0FBQ1ksS0FBSyxDQUFDWCxNQUFQLEVBQWUsT0FBZixDQUE1QztBQUFBO0FBRFgsS0FIRDtBQU9QYSxJQUFBQSxNQUFNLEVBQUU7QUFDTkosTUFBQUEsZUFBZSxFQUFFLHlCQUFDQyxDQUFELEVBQUlDLEtBQUo7QUFBQSxlQUFjWiw4QkFBOEIsQ0FBQ1ksS0FBSyxDQUFDWCxNQUFQLEVBQWUsT0FBZixDQUE1QztBQUFBO0FBRFgsS0FQRDtBQVdQYyxJQUFBQSxPQUFPLEVBQUU7QUFDUEwsTUFBQUEsZUFBZSxFQUFFLHlCQUFDQyxDQUFELEVBQUlDLEtBQUo7QUFBQSxlQUFjWiw4QkFBOEIsQ0FBQ1ksS0FBSyxDQUFDWCxNQUFQLEVBQWUsUUFBZixDQUE1QztBQUFBO0FBRFYsS0FYRjtBQWVQZSxJQUFBQSxRQUFRLEVBQUU7QUFDUk4sTUFBQUEsZUFBZSxFQUFFLHlCQUFDQyxDQUFELEVBQUlDLEtBQUo7QUFBQSxlQUFjWiw4QkFBOEIsQ0FBQ1ksS0FBSyxDQUFDWCxNQUFQLEVBQWUsU0FBZixDQUE1QztBQUFBO0FBRFQ7QUFmSDtBQURTLENBQXBCO2VBc0JlO0FBQ2JFLEVBQUFBLFNBQVMsRUFBVEEsU0FEYTtBQUViTSxFQUFBQSxXQUFXLEVBQVhBO0FBRmEsQyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbG9yTWFwID0ge1xuICBub25lOiB7XG4gICAgYmFzZTogJ3doaXRlJyxcbiAgICBob3ZlcjogJ2NvbG9ycy5ncmF5NzUnLFxuICAgIGZvY3VzOiAnY29sb3JzLmdyYXk3NScsXG4gICAgYWN0aXZlOiAnaW50ZW50cy5pbmZvLmJhY2tncm91bmQnLFxuICAgIGN1cnJlbnQ6ICdpbnRlbnRzLmluZm8uYmFja2dyb3VuZCdcbiAgfSxcblxuICBkYW5nZXI6IHtcbiAgICBiYXNlOiAnaW50ZW50cy5kYW5nZXIuYmFja2dyb3VuZCcsXG4gICAgaG92ZXI6ICdpbnRlbnRzLmRhbmdlci5iYWNrZ3JvdW5kJyxcbiAgICBmb2N1czogJ2NvbG9ycy5yZWQxMDAnLFxuICAgIGFjdGl2ZTogJ2NvbG9ycy5yZWQxMDAnLFxuICAgIGN1cnJlbnQ6ICdjb2xvcnMucmVkMTAwJ1xuICB9LFxuXG4gIHdhcm5pbmc6IHtcbiAgICBiYXNlOiAnaW50ZW50cy53YXJuaW5nLmJhY2tncm91bmQnLFxuICAgIGhvdmVyOiAnaW50ZW50cy53YXJuaW5nLmJhY2tncm91bmQnLFxuICAgIGZvY3VzOiAnY29sb3JzLm9yYW5nZTEwMCcsXG4gICAgYWN0aXZlOiAnY29sb3JzLm9yYW5nZTEwMCcsXG4gICAgY3VycmVudDogJ2NvbG9ycy5vcmFuZ2UxMDAnXG4gIH0sXG5cbiAgc3VjY2Vzczoge1xuICAgIGJhc2U6ICdpbnRlbnRzLnN1Y2Nlc3MuYmFja2dyb3VuZCcsXG4gICAgaG92ZXI6ICdpbnRlbnRzLnN1Y2Nlc3MuYmFja2dyb3VuZCcsXG4gICAgZm9jdXM6ICdjb2xvcnMuZ3JlZW4xMDAnLFxuICAgIGFjdGl2ZTogJ2NvbG9ycy5ncmVlbjEwMCcsXG4gICAgY3VycmVudDogJ2NvbG9ycy5ncmVlbjEwMCdcbiAgfVxufVxuXG5jb25zdCBnZXRCYWNrZ3JvdW5kRm9ySW50ZW50QW5kU3RhdGUgPSAoaW50ZW50LCBzdGF0ZSkgPT4gY29sb3JNYXBbaW50ZW50XVtzdGF0ZV1cblxuY29uc3QgYmFzZVN0eWxlID0ge1xuICBvdXRsaW5lOiAnbm9uZScsXG4gIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gIGhlaWdodDogNjQsXG5cbiAgX2lzU2VsZWN0YWJsZToge1xuICAgIGN1cnNvcjogJ3BvaW50ZXInXG4gIH1cbn1cblxuY29uc3QgYXBwZWFyYW5jZXMgPSB7XG4gIGRlZmF1bHQ6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IChfLCBwcm9wcykgPT4gZ2V0QmFja2dyb3VuZEZvckludGVudEFuZFN0YXRlKHByb3BzLmludGVudCwgJ2Jhc2UnKSxcblxuICAgIF9ob3Zlcjoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiAoXywgcHJvcHMpID0+IGdldEJhY2tncm91bmRGb3JJbnRlbnRBbmRTdGF0ZShwcm9wcy5pbnRlbnQsICdob3ZlcicpXG4gICAgfSxcblxuICAgIF9mb2N1czoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiAoXywgcHJvcHMpID0+IGdldEJhY2tncm91bmRGb3JJbnRlbnRBbmRTdGF0ZShwcm9wcy5pbnRlbnQsICdmb2N1cycpXG4gICAgfSxcblxuICAgIF9hY3RpdmU6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogKF8sIHByb3BzKSA9PiBnZXRCYWNrZ3JvdW5kRm9ySW50ZW50QW5kU3RhdGUocHJvcHMuaW50ZW50LCAnYWN0aXZlJylcbiAgICB9LFxuXG4gICAgX2N1cnJlbnQ6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogKF8sIHByb3BzKSA9PiBnZXRCYWNrZ3JvdW5kRm9ySW50ZW50QW5kU3RhdGUocHJvcHMuaW50ZW50LCAnY3VycmVudCcpXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgYmFzZVN0eWxlLFxuICBhcHBlYXJhbmNlc1xufVxuIl19