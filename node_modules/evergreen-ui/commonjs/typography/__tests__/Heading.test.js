"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _testing = require("../../../lib/testing");

var _theme = require("../../theme");

var _themes = require("../../themes");

var _Heading = _interopRequireDefault(require("../src/Heading"));

expect.addSnapshotSerializer(_testing.UIBoxSerializer);
test.each([['size 100', 100], ['size 200', 200], ['size 300', 300], ['size 400', 400], ['size 500', 500], ['size 600', 600], ['size 700', 700], ['size 800', 800], ['size 900', 900]])('<Heading /> %s renders as expected', function (_, size) {
  var component = /*#__PURE__*/_react["default"].createElement(_theme.ThemeProvider, {
    value: _themes.defaultTheme
  }, /*#__PURE__*/_react["default"].createElement(_Heading["default"], {
    size: size
  }, "Heading ".concat(size)));

  var tree = _reactTestRenderer["default"].create(component).toJSON();

  expect(tree).toMatchSnapshot();
});
test('Heading lets you override the underlying DOM element', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
  return _regenerator["default"].wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_theme.ThemeProvider, {
            value: _themes.defaultTheme
          }, /*#__PURE__*/_react["default"].createElement(_Heading["default"], {
            is: "h1"
          }, "Testing h1")));
          expect(_react2.screen.getByText('Testing h1', {
            selector: 'h1'
          })).toBeTruthy();

        case 2:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
})));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBvZ3JhcGh5L19fdGVzdHNfXy9IZWFkaW5nLnRlc3QuanMiXSwibmFtZXMiOlsiZXhwZWN0IiwiYWRkU25hcHNob3RTZXJpYWxpemVyIiwiVUlCb3hTZXJpYWxpemVyIiwidGVzdCIsImVhY2giLCJfIiwic2l6ZSIsImNvbXBvbmVudCIsImRlZmF1bHRUaGVtZSIsInRyZWUiLCJyZW5kZXJlciIsImNyZWF0ZSIsInRvSlNPTiIsInRvTWF0Y2hTbmFwc2hvdCIsInNjcmVlbiIsImdldEJ5VGV4dCIsInNlbGVjdG9yIiwidG9CZVRydXRoeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQUEsTUFBTSxDQUFDQyxxQkFBUCxDQUE2QkMsd0JBQTdCO0FBRUFDLElBQUksQ0FBQ0MsSUFBTCxDQUFVLENBQ1IsQ0FBQyxVQUFELEVBQWEsR0FBYixDQURRLEVBRVIsQ0FBQyxVQUFELEVBQWEsR0FBYixDQUZRLEVBR1IsQ0FBQyxVQUFELEVBQWEsR0FBYixDQUhRLEVBSVIsQ0FBQyxVQUFELEVBQWEsR0FBYixDQUpRLEVBS1IsQ0FBQyxVQUFELEVBQWEsR0FBYixDQUxRLEVBTVIsQ0FBQyxVQUFELEVBQWEsR0FBYixDQU5RLEVBT1IsQ0FBQyxVQUFELEVBQWEsR0FBYixDQVBRLEVBUVIsQ0FBQyxVQUFELEVBQWEsR0FBYixDQVJRLEVBU1IsQ0FBQyxVQUFELEVBQWEsR0FBYixDQVRRLENBQVYsRUFVRyxvQ0FWSCxFQVV5QyxVQUFDQyxDQUFELEVBQUlDLElBQUosRUFBYTtBQUNwRCxNQUFNQyxTQUFTLGdCQUNiLGdDQUFDLG9CQUFEO0FBQWUsSUFBQSxLQUFLLEVBQUVDO0FBQXRCLGtCQUNFLGdDQUFDLG1CQUFEO0FBQVMsSUFBQSxJQUFJLEVBQUVGO0FBQWYsdUJBQWlDQSxJQUFqQyxFQURGLENBREY7O0FBS0EsTUFBTUcsSUFBSSxHQUFHQyw4QkFBU0MsTUFBVCxDQUFnQkosU0FBaEIsRUFBMkJLLE1BQTNCLEVBQWI7O0FBQ0FaLEVBQUFBLE1BQU0sQ0FBQ1MsSUFBRCxDQUFOLENBQWFJLGVBQWI7QUFDRCxDQWxCRDtBQW9CQVYsSUFBSSxDQUFDLHNEQUFELDZGQUF5RDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQzNELDRDQUNFLGdDQUFDLG9CQUFEO0FBQWUsWUFBQSxLQUFLLEVBQUVLO0FBQXRCLDBCQUNFLGdDQUFDLG1CQUFEO0FBQVMsWUFBQSxFQUFFLEVBQUM7QUFBWiwwQkFERixDQURGO0FBTUFSLFVBQUFBLE1BQU0sQ0FBQ2MsZUFBT0MsU0FBUCxDQUFpQixZQUFqQixFQUErQjtBQUFFQyxZQUFBQSxRQUFRLEVBQUU7QUFBWixXQUEvQixDQUFELENBQU4sQ0FBMkRDLFVBQTNEOztBQVAyRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQUF6RCxHQUFKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4gfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0J1xuaW1wb3J0IHJlbmRlcmVyIGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInXG5pbXBvcnQgeyBVSUJveFNlcmlhbGl6ZXIgfSBmcm9tICcuLi8uLi8uLi9saWIvdGVzdGluZydcbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tICcuLi8uLi90aGVtZSdcbmltcG9ydCB7IGRlZmF1bHRUaGVtZSB9IGZyb20gJy4uLy4uL3RoZW1lcydcbmltcG9ydCBIZWFkaW5nIGZyb20gJy4uL3NyYy9IZWFkaW5nJ1xuXG5leHBlY3QuYWRkU25hcHNob3RTZXJpYWxpemVyKFVJQm94U2VyaWFsaXplcilcblxudGVzdC5lYWNoKFtcbiAgWydzaXplIDEwMCcsIDEwMF0sXG4gIFsnc2l6ZSAyMDAnLCAyMDBdLFxuICBbJ3NpemUgMzAwJywgMzAwXSxcbiAgWydzaXplIDQwMCcsIDQwMF0sXG4gIFsnc2l6ZSA1MDAnLCA1MDBdLFxuICBbJ3NpemUgNjAwJywgNjAwXSxcbiAgWydzaXplIDcwMCcsIDcwMF0sXG4gIFsnc2l6ZSA4MDAnLCA4MDBdLFxuICBbJ3NpemUgOTAwJywgOTAwXVxuXSkoJzxIZWFkaW5nIC8+ICVzIHJlbmRlcnMgYXMgZXhwZWN0ZWQnLCAoXywgc2l6ZSkgPT4ge1xuICBjb25zdCBjb21wb25lbnQgPSAoXG4gICAgPFRoZW1lUHJvdmlkZXIgdmFsdWU9e2RlZmF1bHRUaGVtZX0+XG4gICAgICA8SGVhZGluZyBzaXplPXtzaXplfT57YEhlYWRpbmcgJHtzaXplfWB9PC9IZWFkaW5nPlxuICAgIDwvVGhlbWVQcm92aWRlcj5cbiAgKVxuICBjb25zdCB0cmVlID0gcmVuZGVyZXIuY3JlYXRlKGNvbXBvbmVudCkudG9KU09OKClcbiAgZXhwZWN0KHRyZWUpLnRvTWF0Y2hTbmFwc2hvdCgpXG59KVxuXG50ZXN0KCdIZWFkaW5nIGxldHMgeW91IG92ZXJyaWRlIHRoZSB1bmRlcmx5aW5nIERPTSBlbGVtZW50JywgYXN5bmMgKCkgPT4ge1xuICByZW5kZXIoXG4gICAgPFRoZW1lUHJvdmlkZXIgdmFsdWU9e2RlZmF1bHRUaGVtZX0+XG4gICAgICA8SGVhZGluZyBpcz1cImgxXCI+VGVzdGluZyBoMTwvSGVhZGluZz5cbiAgICA8L1RoZW1lUHJvdmlkZXI+XG4gIClcblxuICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnVGVzdGluZyBoMScsIHsgc2VsZWN0b3I6ICdoMScgfSkpLnRvQmVUcnV0aHkoKVxufSlcbiJdfQ==