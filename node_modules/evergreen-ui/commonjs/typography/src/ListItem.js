"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _IconWrapper = require("../../icons/src/IconWrapper");

var _scales = require("../../scales");

var _Text = _interopRequireDefault(require("./Text"));

var _excluded = ["children", "icon", "iconColor", "size"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ListItem = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function ListItem(props, ref) {
  var children = props.children,
      icon = props.icon,
      iconColor = props.iconColor,
      size = props.size,
      rest = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var paddingLeft;
  if (size === 300) paddingLeft = (0, _scales.minorScale)(1);
  if (size === 400) paddingLeft = (0, _scales.minorScale)(2);
  if (size === 500) paddingLeft = (0, _scales.minorScale)(2);
  if (size === 600) paddingLeft = (0, _scales.minorScale)(3);
  var iconTop;
  if (size === 300) iconTop = 1;
  if (size === 400) iconTop = 3;
  if (size === 500) iconTop = 3;
  if (size === 600) iconTop = 4;
  var iconSize;
  if (size === 300) iconSize = 12;
  if (size === 400) iconSize = 14;
  if (size === 500) iconSize = 14;
  if (size === 600) iconSize = 16;
  var iconLeft = -iconSize - 4;
  if (size === 600) iconLeft = -iconSize;
  return /*#__PURE__*/_react["default"].createElement(_Text["default"], (0, _extends2["default"])({
    is: "li",
    position: "relative",
    marginY: "0.5em",
    size: size,
    listStyleType: icon ? 'none' : undefined,
    paddingLeft: icon ? paddingLeft : undefined,
    ref: ref
  }, rest), icon && /*#__PURE__*/_react["default"].createElement(_IconWrapper.IconWrapper, {
    icon: icon,
    color: iconColor,
    position: "absolute",
    size: iconSize,
    left: iconLeft,
    top: iconTop
  }), children);
}));
ListItem.propTypes = _objectSpread(_objectSpread({}, _Text["default"].propTypes), {}, {
  /**
   * When provided, adds a icon before the list item.
   */
  icon: _propTypes["default"].oneOfType([_propTypes["default"].elementType, _propTypes["default"].element]),

  /**
   * The color of the icon.
   */
  iconColor: _propTypes["default"].string
});
var _default = ListItem;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBvZ3JhcGh5L3NyYy9MaXN0SXRlbS5qcyJdLCJuYW1lcyI6WyJMaXN0SXRlbSIsInByb3BzIiwicmVmIiwiY2hpbGRyZW4iLCJpY29uIiwiaWNvbkNvbG9yIiwic2l6ZSIsInJlc3QiLCJwYWRkaW5nTGVmdCIsImljb25Ub3AiLCJpY29uU2l6ZSIsImljb25MZWZ0IiwidW5kZWZpbmVkIiwicHJvcFR5cGVzIiwiVGV4dCIsIlByb3BUeXBlcyIsIm9uZU9mVHlwZSIsImVsZW1lbnRUeXBlIiwiZWxlbWVudCIsInN0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsUUFBUSxnQkFBRywrQkFDZix1QkFBVyxTQUFTQSxRQUFULENBQWtCQyxLQUFsQixFQUF5QkMsR0FBekIsRUFBOEI7QUFDdkMsTUFBUUMsUUFBUixHQUFxREYsS0FBckQsQ0FBUUUsUUFBUjtBQUFBLE1BQWtCQyxJQUFsQixHQUFxREgsS0FBckQsQ0FBa0JHLElBQWxCO0FBQUEsTUFBd0JDLFNBQXhCLEdBQXFESixLQUFyRCxDQUF3QkksU0FBeEI7QUFBQSxNQUFtQ0MsSUFBbkMsR0FBcURMLEtBQXJELENBQW1DSyxJQUFuQztBQUFBLE1BQTRDQyxJQUE1Qyw2Q0FBcUROLEtBQXJEO0FBRUEsTUFBSU8sV0FBSjtBQUNBLE1BQUlGLElBQUksS0FBSyxHQUFiLEVBQWtCRSxXQUFXLEdBQUcsd0JBQVcsQ0FBWCxDQUFkO0FBQ2xCLE1BQUlGLElBQUksS0FBSyxHQUFiLEVBQWtCRSxXQUFXLEdBQUcsd0JBQVcsQ0FBWCxDQUFkO0FBQ2xCLE1BQUlGLElBQUksS0FBSyxHQUFiLEVBQWtCRSxXQUFXLEdBQUcsd0JBQVcsQ0FBWCxDQUFkO0FBQ2xCLE1BQUlGLElBQUksS0FBSyxHQUFiLEVBQWtCRSxXQUFXLEdBQUcsd0JBQVcsQ0FBWCxDQUFkO0FBRWxCLE1BQUlDLE9BQUo7QUFDQSxNQUFJSCxJQUFJLEtBQUssR0FBYixFQUFrQkcsT0FBTyxHQUFHLENBQVY7QUFDbEIsTUFBSUgsSUFBSSxLQUFLLEdBQWIsRUFBa0JHLE9BQU8sR0FBRyxDQUFWO0FBQ2xCLE1BQUlILElBQUksS0FBSyxHQUFiLEVBQWtCRyxPQUFPLEdBQUcsQ0FBVjtBQUNsQixNQUFJSCxJQUFJLEtBQUssR0FBYixFQUFrQkcsT0FBTyxHQUFHLENBQVY7QUFFbEIsTUFBSUMsUUFBSjtBQUNBLE1BQUlKLElBQUksS0FBSyxHQUFiLEVBQWtCSSxRQUFRLEdBQUcsRUFBWDtBQUNsQixNQUFJSixJQUFJLEtBQUssR0FBYixFQUFrQkksUUFBUSxHQUFHLEVBQVg7QUFDbEIsTUFBSUosSUFBSSxLQUFLLEdBQWIsRUFBa0JJLFFBQVEsR0FBRyxFQUFYO0FBQ2xCLE1BQUlKLElBQUksS0FBSyxHQUFiLEVBQWtCSSxRQUFRLEdBQUcsRUFBWDtBQUVsQixNQUFJQyxRQUFRLEdBQUcsQ0FBQ0QsUUFBRCxHQUFZLENBQTNCO0FBQ0EsTUFBSUosSUFBSSxLQUFLLEdBQWIsRUFBa0JLLFFBQVEsR0FBRyxDQUFDRCxRQUFaO0FBRWxCLHNCQUNFLGdDQUFDLGdCQUFEO0FBQ0UsSUFBQSxFQUFFLEVBQUMsSUFETDtBQUVFLElBQUEsUUFBUSxFQUFDLFVBRlg7QUFHRSxJQUFBLE9BQU8sRUFBQyxPQUhWO0FBSUUsSUFBQSxJQUFJLEVBQUVKLElBSlI7QUFLRSxJQUFBLGFBQWEsRUFBRUYsSUFBSSxHQUFHLE1BQUgsR0FBWVEsU0FMakM7QUFNRSxJQUFBLFdBQVcsRUFBRVIsSUFBSSxHQUFHSSxXQUFILEdBQWlCSSxTQU5wQztBQU9FLElBQUEsR0FBRyxFQUFFVjtBQVBQLEtBUU1LLElBUk4sR0FVR0gsSUFBSSxpQkFDSCxnQ0FBQyx3QkFBRDtBQUNFLElBQUEsSUFBSSxFQUFFQSxJQURSO0FBRUUsSUFBQSxLQUFLLEVBQUVDLFNBRlQ7QUFHRSxJQUFBLFFBQVEsRUFBQyxVQUhYO0FBSUUsSUFBQSxJQUFJLEVBQUVLLFFBSlI7QUFLRSxJQUFBLElBQUksRUFBRUMsUUFMUjtBQU1FLElBQUEsR0FBRyxFQUFFRjtBQU5QLElBWEosRUFvQkdOLFFBcEJILENBREY7QUF3QkQsQ0FoREQsQ0FEZSxDQUFqQjtBQW9EQUgsUUFBUSxDQUFDYSxTQUFULG1DQUNLQyxpQkFBS0QsU0FEVjtBQUdFO0FBQ0Y7QUFDQTtBQUNFVCxFQUFBQSxJQUFJLEVBQUVXLHNCQUFVQyxTQUFWLENBQW9CLENBQUNELHNCQUFVRSxXQUFYLEVBQXdCRixzQkFBVUcsT0FBbEMsQ0FBcEIsQ0FOUjs7QUFRRTtBQUNGO0FBQ0E7QUFDRWIsRUFBQUEsU0FBUyxFQUFFVSxzQkFBVUk7QUFYdkI7ZUFjZW5CLFEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgZm9yd2FyZFJlZiwgbWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgSWNvbldyYXBwZXIgfSBmcm9tICcuLi8uLi9pY29ucy9zcmMvSWNvbldyYXBwZXInXG5pbXBvcnQgeyBtaW5vclNjYWxlIH0gZnJvbSAnLi4vLi4vc2NhbGVzJ1xuaW1wb3J0IFRleHQgZnJvbSAnLi9UZXh0J1xuXG5jb25zdCBMaXN0SXRlbSA9IG1lbW8oXG4gIGZvcndhcmRSZWYoZnVuY3Rpb24gTGlzdEl0ZW0ocHJvcHMsIHJlZikge1xuICAgIGNvbnN0IHsgY2hpbGRyZW4sIGljb24sIGljb25Db2xvciwgc2l6ZSwgLi4ucmVzdCB9ID0gcHJvcHNcblxuICAgIGxldCBwYWRkaW5nTGVmdFxuICAgIGlmIChzaXplID09PSAzMDApIHBhZGRpbmdMZWZ0ID0gbWlub3JTY2FsZSgxKVxuICAgIGlmIChzaXplID09PSA0MDApIHBhZGRpbmdMZWZ0ID0gbWlub3JTY2FsZSgyKVxuICAgIGlmIChzaXplID09PSA1MDApIHBhZGRpbmdMZWZ0ID0gbWlub3JTY2FsZSgyKVxuICAgIGlmIChzaXplID09PSA2MDApIHBhZGRpbmdMZWZ0ID0gbWlub3JTY2FsZSgzKVxuXG4gICAgbGV0IGljb25Ub3BcbiAgICBpZiAoc2l6ZSA9PT0gMzAwKSBpY29uVG9wID0gMVxuICAgIGlmIChzaXplID09PSA0MDApIGljb25Ub3AgPSAzXG4gICAgaWYgKHNpemUgPT09IDUwMCkgaWNvblRvcCA9IDNcbiAgICBpZiAoc2l6ZSA9PT0gNjAwKSBpY29uVG9wID0gNFxuXG4gICAgbGV0IGljb25TaXplXG4gICAgaWYgKHNpemUgPT09IDMwMCkgaWNvblNpemUgPSAxMlxuICAgIGlmIChzaXplID09PSA0MDApIGljb25TaXplID0gMTRcbiAgICBpZiAoc2l6ZSA9PT0gNTAwKSBpY29uU2l6ZSA9IDE0XG4gICAgaWYgKHNpemUgPT09IDYwMCkgaWNvblNpemUgPSAxNlxuXG4gICAgbGV0IGljb25MZWZ0ID0gLWljb25TaXplIC0gNFxuICAgIGlmIChzaXplID09PSA2MDApIGljb25MZWZ0ID0gLWljb25TaXplXG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRleHRcbiAgICAgICAgaXM9XCJsaVwiXG4gICAgICAgIHBvc2l0aW9uPVwicmVsYXRpdmVcIlxuICAgICAgICBtYXJnaW5ZPVwiMC41ZW1cIlxuICAgICAgICBzaXplPXtzaXplfVxuICAgICAgICBsaXN0U3R5bGVUeXBlPXtpY29uID8gJ25vbmUnIDogdW5kZWZpbmVkfVxuICAgICAgICBwYWRkaW5nTGVmdD17aWNvbiA/IHBhZGRpbmdMZWZ0IDogdW5kZWZpbmVkfVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgey4uLnJlc3R9XG4gICAgICA+XG4gICAgICAgIHtpY29uICYmIChcbiAgICAgICAgICA8SWNvbldyYXBwZXJcbiAgICAgICAgICAgIGljb249e2ljb259XG4gICAgICAgICAgICBjb2xvcj17aWNvbkNvbG9yfVxuICAgICAgICAgICAgcG9zaXRpb249XCJhYnNvbHV0ZVwiXG4gICAgICAgICAgICBzaXplPXtpY29uU2l6ZX1cbiAgICAgICAgICAgIGxlZnQ9e2ljb25MZWZ0fVxuICAgICAgICAgICAgdG9wPXtpY29uVG9wfVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvVGV4dD5cbiAgICApXG4gIH0pXG4pXG5cbkxpc3RJdGVtLnByb3BUeXBlcyA9IHtcbiAgLi4uVGV4dC5wcm9wVHlwZXMsXG5cbiAgLyoqXG4gICAqIFdoZW4gcHJvdmlkZWQsIGFkZHMgYSBpY29uIGJlZm9yZSB0aGUgbGlzdCBpdGVtLlxuICAgKi9cbiAgaWNvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmVsZW1lbnRUeXBlLCBQcm9wVHlwZXMuZWxlbWVudF0pLFxuXG4gIC8qKlxuICAgKiBUaGUgY29sb3Igb2YgdGhlIGljb24uXG4gICAqL1xuICBpY29uQ29sb3I6IFByb3BUeXBlcy5zdHJpbmdcbn1cblxuZXhwb3J0IGRlZmF1bHQgTGlzdEl0ZW1cbiJdfQ==