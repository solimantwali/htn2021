"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Nudge = exports.Pulsar = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _glamor = require("glamor");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Position = _interopRequireDefault(require("../../constants/src/Position"));

var _layers = require("../../layers");

var _scales = require("../../scales");

var _theme = require("../../theme");

var _tooltip = require("../../tooltip");

var _POSITION_KEYS;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var pulseAnimation = _glamor.css.keyframes('pulseAnimation', {
  '0%': {
    transform: 'scale(1)'
  },
  '50%': {
    transform: 'scale(1.9)'
  },
  '100%': {
    transform: 'scale(1)'
  }
});

var animationTiming = 'cubic-bezier(0, 0, 0.58, 1)';
var animationDuration = '1.8s';
var pulsarAnimationClassName = (0, _glamor.css)({
  animation: "".concat(pulseAnimation, " ").concat(animationDuration, " ").concat(animationTiming, " both infinite")
}).toString();
var POSITION_KEYS = (_POSITION_KEYS = {}, (0, _defineProperty2["default"])(_POSITION_KEYS, _Position["default"].TOP_LEFT, ['top', 'left']), (0, _defineProperty2["default"])(_POSITION_KEYS, _Position["default"].TOP_RIGHT, ['top', 'right']), (0, _defineProperty2["default"])(_POSITION_KEYS, _Position["default"].BOTTOM_LEFT, ['bottom', 'left']), (0, _defineProperty2["default"])(_POSITION_KEYS, _Position["default"].BOTTOM_RIGHT, ['bottom', 'right']), _POSITION_KEYS);

var getPositionProps = function getPositionProps(_ref) {
  var position = _ref.position,
      size = _ref.size;
  var keys = POSITION_KEYS[position];
  var props = {};
  keys.forEach(function (key) {
    var isYAxisKey = key === 'top' || key === 'bottom';

    if (isYAxisKey) {
      props[key] = -(size / 2);
    } else {
      props[key] = -size;
    }
  });
  return props;
};

var Pulsar = /*#__PURE__*/(0, _react.memo)(function (_ref2) {
  var _ref2$position = _ref2.position,
      position = _ref2$position === void 0 ? _Position["default"].TOP_RIGHT : _ref2$position,
      _ref2$size = _ref2.size,
      size = _ref2$size === void 0 ? (0, _scales.majorScale)(1) : _ref2$size;

  var _useTheme = (0, _theme.useTheme)(),
      colors = _useTheme.colors;

  var positionProps = getPositionProps({
    position: position,
    size: size
  });
  var outerPadding = size * 0.25;
  return /*#__PURE__*/_react["default"].createElement(_layers.Pane, (0, _extends2["default"])({
    position: "absolute",
    borderRadius: "50%",
    backgroundColor: colors.blue100,
    boxSizing: "content-box",
    opacity: 0.7,
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    padding: outerPadding,
    className: pulsarAnimationClassName
  }, positionProps), /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    width: size,
    height: size,
    backgroundColor: colors.blue200,
    borderRadius: "50%",
    opacity: 0.7
  }));
});
exports.Pulsar = Pulsar;
Pulsar.propTypes = {
  /**
   * The position of the pulsar
   */
  position: _propTypes["default"].oneOf([_Position["default"].TOP_LEFT, _Position["default"].TOP_RIGHT, _Position["default"].BOTTOM_LEFT, _Position["default"].BOTTOM_RIGHT]),

  /**
   * The width/height of the dot
   */
  size: _propTypes["default"].number
};

var Nudge = function Nudge(_ref3) {
  var children = _ref3.children,
      _ref3$isShown = _ref3.isShown,
      isShown = _ref3$isShown === void 0 ? false : _ref3$isShown,
      _ref3$position = _ref3.position,
      position = _ref3$position === void 0 ? _Position["default"].TOP_RIGHT : _ref3$position,
      size = _ref3.size,
      tooltipContent = _ref3.tooltipContent;
  return /*#__PURE__*/_react["default"].createElement(_tooltip.Tooltip, {
    content: tooltipContent,
    position: position,
    isShown: isShown ? undefined : false
  }, /*#__PURE__*/_react["default"].createElement(_layers.Pane, {
    position: "relative"
  }, isShown && /*#__PURE__*/_react["default"].createElement(Pulsar, {
    position: position,
    size: size
  }), children));
};

exports.Nudge = Nudge;
Nudge.displayName = "Nudge";
Nudge.propTypes = {
  /**
   * The position for the Puslar and the Tooltip
   */
  position: _propTypes["default"].oneOf([_Position["default"].TOP_LEFT, _Position["default"].TOP_RIGHT, _Position["default"].BOTTOM_LEFT, _Position["default"].BOTTOM_RIGHT]),

  /**
   * Size of the Pulsar
   */
  size: Pulsar.propTypes.size,

  /**
   * Wether or not the Pulsar/Tooltip is shown
   */
  isShown: _propTypes["default"].bool,

  /**
   * Content for the tooltip
   */
  tooltipContent: _tooltip.Tooltip.propTypes.content,

  /**
   * Content for the pulsar/tooltip to be anchored too
   */
  children: _propTypes["default"].node
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9udWRnZS9zcmMvTnVkZ2UuanMiXSwibmFtZXMiOlsicHVsc2VBbmltYXRpb24iLCJjc3MiLCJrZXlmcmFtZXMiLCJ0cmFuc2Zvcm0iLCJhbmltYXRpb25UaW1pbmciLCJhbmltYXRpb25EdXJhdGlvbiIsInB1bHNhckFuaW1hdGlvbkNsYXNzTmFtZSIsImFuaW1hdGlvbiIsInRvU3RyaW5nIiwiUE9TSVRJT05fS0VZUyIsIlBvc2l0aW9ucyIsIlRPUF9MRUZUIiwiVE9QX1JJR0hUIiwiQk9UVE9NX0xFRlQiLCJCT1RUT01fUklHSFQiLCJnZXRQb3NpdGlvblByb3BzIiwicG9zaXRpb24iLCJzaXplIiwia2V5cyIsInByb3BzIiwiZm9yRWFjaCIsImtleSIsImlzWUF4aXNLZXkiLCJQdWxzYXIiLCJjb2xvcnMiLCJwb3NpdGlvblByb3BzIiwib3V0ZXJQYWRkaW5nIiwiYmx1ZTEwMCIsImJsdWUyMDAiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJvbmVPZiIsIm51bWJlciIsIk51ZGdlIiwiY2hpbGRyZW4iLCJpc1Nob3duIiwidG9vbHRpcENvbnRlbnQiLCJ1bmRlZmluZWQiLCJib29sIiwiVG9vbHRpcCIsImNvbnRlbnQiLCJub2RlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxjQUFjLEdBQUdDLFlBQUlDLFNBQUosQ0FBYyxnQkFBZCxFQUFnQztBQUNyRCxRQUFNO0FBQ0pDLElBQUFBLFNBQVMsRUFBRTtBQURQLEdBRCtDO0FBSXJELFNBQU87QUFDTEEsSUFBQUEsU0FBUyxFQUFFO0FBRE4sR0FKOEM7QUFPckQsVUFBUTtBQUNOQSxJQUFBQSxTQUFTLEVBQUU7QUFETDtBQVA2QyxDQUFoQyxDQUF2Qjs7QUFZQSxJQUFNQyxlQUFlLEdBQUcsNkJBQXhCO0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUcsTUFBMUI7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QUEsT0FBTyxFQUFFTCxzQkFBVVEsSUFkSDs7QUFnQmhCO0FBQ0Y7QUFDQTtBQUNFRixFQUFBQSxjQUFjLEVBQUVHLGlCQUFRVixTQUFSLENBQWtCVyxPQW5CbEI7O0FBcUJoQjtBQUNGO0FBQ0E7QUFDRU4sRUFBQUEsUUFBUSxFQUFFSixzQkFBVVc7QUF4QkosQ0FBbEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgbWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnZ2xhbW9yJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFBvc2l0aW9ucyBmcm9tICcuLi8uLi9jb25zdGFudHMvc3JjL1Bvc2l0aW9uJ1xuaW1wb3J0IHsgUGFuZSB9IGZyb20gJy4uLy4uL2xheWVycydcbmltcG9ydCB7IG1ham9yU2NhbGUgfSBmcm9tICcuLi8uLi9zY2FsZXMnXG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJy4uLy4uL3RoZW1lJ1xuaW1wb3J0IHsgVG9vbHRpcCB9IGZyb20gJy4uLy4uL3Rvb2x0aXAnXG5cbmNvbnN0IHB1bHNlQW5pbWF0aW9uID0gY3NzLmtleWZyYW1lcygncHVsc2VBbmltYXRpb24nLCB7XG4gICcwJSc6IHtcbiAgICB0cmFuc2Zvcm06ICdzY2FsZSgxKSdcbiAgfSxcbiAgJzUwJSc6IHtcbiAgICB0cmFuc2Zvcm06ICdzY2FsZSgxLjkpJ1xuICB9LFxuICAnMTAwJSc6IHtcbiAgICB0cmFuc2Zvcm06ICdzY2FsZSgxKSdcbiAgfVxufSlcblxuY29uc3QgYW5pbWF0aW9uVGltaW5nID0gJ2N1YmljLWJlemllcigwLCAwLCAwLjU4LCAxKSdcbmNvbnN0IGFuaW1hdGlvbkR1cmF0aW9uID0gJzEuOHMnXG5cbmNvbnN0IHB1bHNhckFuaW1hdGlvbkNsYXNzTmFtZSA9IGNzcyh7XG4gIGFuaW1hdGlvbjogYCR7cHVsc2VBbmltYXRpb259ICR7YW5pbWF0aW9uRHVyYXRpb259ICR7YW5pbWF0aW9uVGltaW5nfSBib3RoIGluZmluaXRlYFxufSkudG9TdHJpbmcoKVxuXG5jb25zdCBQT1NJVElPTl9LRVlTID0ge1xuICBbUG9zaXRpb25zLlRPUF9MRUZUXTogWyd0b3AnLCAnbGVmdCddLFxuICBbUG9zaXRpb25zLlRPUF9SSUdIVF06IFsndG9wJywgJ3JpZ2h0J10sXG4gIFtQb3NpdGlvbnMuQk9UVE9NX0xFRlRdOiBbJ2JvdHRvbScsICdsZWZ0J10sXG4gIFtQb3NpdGlvbnMuQk9UVE9NX1JJR0hUXTogWydib3R0b20nLCAncmlnaHQnXVxufVxuXG5jb25zdCBnZXRQb3NpdGlvblByb3BzID0gKHsgcG9zaXRpb24sIHNpemUgfSkgPT4ge1xuICBjb25zdCBrZXlzID0gUE9TSVRJT05fS0VZU1twb3NpdGlvbl1cbiAgY29uc3QgcHJvcHMgPSB7fVxuXG4gIGtleXMuZm9yRWFjaChrZXkgPT4ge1xuICAgIGNvbnN0IGlzWUF4aXNLZXkgPSBrZXkgPT09ICd0b3AnIHx8IGtleSA9PT0gJ2JvdHRvbSdcblxuICAgIGlmIChpc1lBeGlzS2V5KSB7XG4gICAgICBwcm9wc1trZXldID0gLShzaXplIC8gMilcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvcHNba2V5XSA9IC1zaXplXG4gICAgfVxuICB9KVxuXG4gIHJldHVybiBwcm9wc1xufVxuXG5leHBvcnQgY29uc3QgUHVsc2FyID0gbWVtbygoeyBwb3NpdGlvbiA9IFBvc2l0aW9ucy5UT1BfUklHSFQsIHNpemUgPSBtYWpvclNjYWxlKDEpIH0pID0+IHtcbiAgY29uc3QgeyBjb2xvcnMgfSA9IHVzZVRoZW1lKClcbiAgY29uc3QgcG9zaXRpb25Qcm9wcyA9IGdldFBvc2l0aW9uUHJvcHMoeyBwb3NpdGlvbiwgc2l6ZSB9KVxuICBjb25zdCBvdXRlclBhZGRpbmcgPSBzaXplICogMC4yNVxuXG4gIHJldHVybiAoXG4gICAgPFBhbmVcbiAgICAgIHBvc2l0aW9uPVwiYWJzb2x1dGVcIlxuICAgICAgYm9yZGVyUmFkaXVzPVwiNTAlXCJcbiAgICAgIGJhY2tncm91bmRDb2xvcj17Y29sb3JzLmJsdWUxMDB9XG4gICAgICBib3hTaXppbmc9XCJjb250ZW50LWJveFwiXG4gICAgICBvcGFjaXR5PXswLjd9XG4gICAgICBkaXNwbGF5PVwiZmxleFwiXG4gICAgICBhbGlnbkl0ZW1zPVwiY2VudGVyXCJcbiAgICAgIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCJcbiAgICAgIHBhZGRpbmc9e291dGVyUGFkZGluZ31cbiAgICAgIGNsYXNzTmFtZT17cHVsc2FyQW5pbWF0aW9uQ2xhc3NOYW1lfVxuICAgICAgey4uLnBvc2l0aW9uUHJvcHN9XG4gICAgPlxuICAgICAgPFBhbmUgd2lkdGg9e3NpemV9IGhlaWdodD17c2l6ZX0gYmFja2dyb3VuZENvbG9yPXtjb2xvcnMuYmx1ZTIwMH0gYm9yZGVyUmFkaXVzPVwiNTAlXCIgb3BhY2l0eT17MC43fSAvPlxuICAgIDwvUGFuZT5cbiAgKVxufSlcblxuUHVsc2FyLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIFRoZSBwb3NpdGlvbiBvZiB0aGUgcHVsc2FyXG4gICAqL1xuICBwb3NpdGlvbjogUHJvcFR5cGVzLm9uZU9mKFtQb3NpdGlvbnMuVE9QX0xFRlQsIFBvc2l0aW9ucy5UT1BfUklHSFQsIFBvc2l0aW9ucy5CT1RUT01fTEVGVCwgUG9zaXRpb25zLkJPVFRPTV9SSUdIVF0pLFxuXG4gIC8qKlxuICAgKiBUaGUgd2lkdGgvaGVpZ2h0IG9mIHRoZSBkb3RcbiAgICovXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXJcbn1cblxuZXhwb3J0IGNvbnN0IE51ZGdlID0gKHsgY2hpbGRyZW4sIGlzU2hvd24gPSBmYWxzZSwgcG9zaXRpb24gPSBQb3NpdGlvbnMuVE9QX1JJR0hULCBzaXplLCB0b29sdGlwQ29udGVudCB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFRvb2x0aXAgY29udGVudD17dG9vbHRpcENvbnRlbnR9IHBvc2l0aW9uPXtwb3NpdGlvbn0gaXNTaG93bj17aXNTaG93biA/IHVuZGVmaW5lZCA6IGZhbHNlfT5cbiAgICAgIDxQYW5lIHBvc2l0aW9uPVwicmVsYXRpdmVcIj5cbiAgICAgICAge2lzU2hvd24gJiYgPFB1bHNhciBwb3NpdGlvbj17cG9zaXRpb259IHNpemU9e3NpemV9IC8+fVxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L1BhbmU+XG4gICAgPC9Ub29sdGlwPlxuICApXG59XG5cbk51ZGdlLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIFRoZSBwb3NpdGlvbiBmb3IgdGhlIFB1c2xhciBhbmQgdGhlIFRvb2x0aXBcbiAgICovXG4gIHBvc2l0aW9uOiBQcm9wVHlwZXMub25lT2YoW1Bvc2l0aW9ucy5UT1BfTEVGVCwgUG9zaXRpb25zLlRPUF9SSUdIVCwgUG9zaXRpb25zLkJPVFRPTV9MRUZULCBQb3NpdGlvbnMuQk9UVE9NX1JJR0hUXSksXG5cbiAgLyoqXG4gICAqIFNpemUgb2YgdGhlIFB1bHNhclxuICAgKi9cbiAgc2l6ZTogUHVsc2FyLnByb3BUeXBlcy5zaXplLFxuXG4gIC8qKlxuICAgKiBXZXRoZXIgb3Igbm90IHRoZSBQdWxzYXIvVG9vbHRpcCBpcyBzaG93blxuICAgKi9cbiAgaXNTaG93bjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIENvbnRlbnQgZm9yIHRoZSB0b29sdGlwXG4gICAqL1xuICB0b29sdGlwQ29udGVudDogVG9vbHRpcC5wcm9wVHlwZXMuY29udGVudCxcblxuICAvKipcbiAgICogQ29udGVudCBmb3IgdGhlIHB1bHNhci90b29sdGlwIHRvIGJlIGFuY2hvcmVkIHRvb1xuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG59XG4iXX0=