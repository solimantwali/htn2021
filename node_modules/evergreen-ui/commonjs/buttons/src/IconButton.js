"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = require("ui-box");

var _hooks = require("../../hooks");

var _IconWrapper = require("../../icons/src/IconWrapper");

var _Button = _interopRequireWildcard(require("./Button"));

var _excluded = ["icon", "iconSize"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var IconButton = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function IconButton(props, ref) {
  var icon = props.icon,
      iconSize = props.iconSize,
      restProps = (0, _objectWithoutProperties2["default"])(props, _excluded); // modifiers

  var appearance = props.appearance,
      _props$intent = props.intent,
      intent = _props$intent === void 0 ? 'none' : _props$intent,
      _props$size = props.size,
      size = _props$size === void 0 ? 'medium' : _props$size; // Composes the exact same styles as button

  var styleProps = (0, _hooks.useStyleConfig)('Button', {
    appearance: appearance,
    intent: intent,
    size: size
  }, _Button.pseudoSelectors, _Button.internalStyles);
  var height = restProps.height || styleProps.height;
  var relativeIconSize = (0, _Button.getIconSizeForButton)(height);
  return /*#__PURE__*/_react["default"].createElement(_Button["default"], (0, _extends2["default"])({
    ref: ref,
    paddingLeft: 0,
    paddingRight: 0,
    flex: "none",
    height: height,
    width: height,
    minWidth: height
  }, restProps), /*#__PURE__*/_react["default"].createElement(_IconWrapper.IconWrapper, {
    icon: icon,
    color: intent === 'none' ? 'default' : 'currentColor',
    size: iconSize || relativeIconSize
  }));
}));
IconButton.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _uiBox.dimensions.propTypes), _uiBox.spacing.propTypes), _uiBox.position.propTypes), _uiBox.layout.propTypes), {}, {
  /**
   * The size of the button
   */
  size: _propTypes["default"].oneOf(['small', 'medium', 'large']),

  /**
   * The Evergreen icon or custom icon to render
   */
  icon: _propTypes["default"].oneOfType([_propTypes["default"].elementType, _propTypes["default"].element]),

  /**
   * Specifies an explicit icon size instead of the default value
   */
  iconSize: _propTypes["default"].number,

  /**
   * The intent of the button.
   */
  intent: _propTypes["default"].oneOf(['none', 'success', 'warning', 'danger']),

  /**
   * The appearance of the button.
   */
  appearance: _propTypes["default"].oneOf(['default', 'minimal', 'primary']),

  /**
   * Forcefully set the active state of a button.
   * Useful in conjunction with a Popover.
   */
  isActive: _propTypes["default"].bool,

  /**
   * When true, the button is disabled.
   * isLoading also sets the button to disabled.
   */
  disabled: _propTypes["default"].bool,

  /**
   * Class name passed to the button.
   * Only use if you know what you are doing.
   */
  className: _propTypes["default"].string
});
var _default = IconButton;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9idXR0b25zL3NyYy9JY29uQnV0dG9uLmpzIl0sIm5hbWVzIjpbIkljb25CdXR0b24iLCJwcm9wcyIsInJlZiIsImljb24iLCJpY29uU2l6ZSIsInJlc3RQcm9wcyIsImFwcGVhcmFuY2UiLCJpbnRlbnQiLCJzaXplIiwic3R5bGVQcm9wcyIsInBzZXVkb1NlbGVjdG9ycyIsImludGVybmFsU3R5bGVzIiwiaGVpZ2h0IiwicmVsYXRpdmVJY29uU2l6ZSIsInByb3BUeXBlcyIsImRpbWVuc2lvbnMiLCJzcGFjaW5nIiwicG9zaXRpb24iLCJsYXlvdXQiLCJQcm9wVHlwZXMiLCJvbmVPZiIsIm9uZU9mVHlwZSIsImVsZW1lbnRUeXBlIiwiZWxlbWVudCIsIm51bWJlciIsImlzQWN0aXZlIiwiYm9vbCIsImRpc2FibGVkIiwiY2xhc3NOYW1lIiwic3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxVQUFVLGdCQUFHLCtCQUNqQix1QkFBVyxTQUFTQSxVQUFULENBQW9CQyxLQUFwQixFQUEyQkMsR0FBM0IsRUFBZ0M7QUFDekMsTUFBUUMsSUFBUixHQUF5Q0YsS0FBekMsQ0FBUUUsSUFBUjtBQUFBLE1BQWNDLFFBQWQsR0FBeUNILEtBQXpDLENBQWNHLFFBQWQ7QUFBQSxNQUEyQkMsU0FBM0IsNkNBQXlDSixLQUF6QyxhQUR5QyxDQUd6Qzs7QUFDQSxNQUFRSyxVQUFSLEdBQXlETCxLQUF6RCxDQUFRSyxVQUFSO0FBQUEsc0JBQXlETCxLQUF6RCxDQUFvQk0sTUFBcEI7QUFBQSxNQUFvQkEsTUFBcEIsOEJBQTZCLE1BQTdCO0FBQUEsb0JBQXlETixLQUF6RCxDQUFxQ08sSUFBckM7QUFBQSxNQUFxQ0EsSUFBckMsNEJBQTRDLFFBQTVDLGVBSnlDLENBTXpDOztBQUNBLE1BQU1DLFVBQVUsR0FBRywyQkFBZSxRQUFmLEVBQXlCO0FBQUVILElBQUFBLFVBQVUsRUFBVkEsVUFBRjtBQUFjQyxJQUFBQSxNQUFNLEVBQU5BLE1BQWQ7QUFBc0JDLElBQUFBLElBQUksRUFBSkE7QUFBdEIsR0FBekIsRUFBdURFLHVCQUF2RCxFQUF3RUMsc0JBQXhFLENBQW5CO0FBRUEsTUFBTUMsTUFBTSxHQUFHUCxTQUFTLENBQUNPLE1BQVYsSUFBb0JILFVBQVUsQ0FBQ0csTUFBOUM7QUFDQSxNQUFNQyxnQkFBZ0IsR0FBRyxrQ0FBcUJELE1BQXJCLENBQXpCO0FBRUEsc0JBQ0UsZ0NBQUMsa0JBQUQ7QUFDRSxJQUFBLEdBQUcsRUFBRVYsR0FEUDtBQUVFLElBQUEsV0FBVyxFQUFFLENBRmY7QUFHRSxJQUFBLFlBQVksRUFBRSxDQUhoQjtBQUlFLElBQUEsSUFBSSxFQUFDLE1BSlA7QUFLRSxJQUFBLE1BQU0sRUFBRVUsTUFMVjtBQU1FLElBQUEsS0FBSyxFQUFFQSxNQU5UO0FBT0UsSUFBQSxRQUFRLEVBQUVBO0FBUFosS0FRTVAsU0FSTixnQkFVRSxnQ0FBQyx3QkFBRDtBQUNFLElBQUEsSUFBSSxFQUFFRixJQURSO0FBRUUsSUFBQSxLQUFLLEVBQUVJLE1BQU0sS0FBSyxNQUFYLEdBQW9CLFNBQXBCLEdBQWdDLGNBRnpDO0FBR0UsSUFBQSxJQUFJLEVBQUVILFFBQVEsSUFBSVM7QUFIcEIsSUFWRixDQURGO0FBa0JELENBOUJELENBRGlCLENBQW5CO0FBa0NBYixVQUFVLENBQUNjLFNBQVgsNkVBSUtDLGtCQUFXRCxTQUpoQixHQVNLRSxlQUFRRixTQVRiLEdBY0tHLGdCQUFTSCxTQWRkLEdBbUJLSSxjQUFPSixTQW5CWjtBQXFCRTtBQUNGO0FBQ0E7QUFDRU4sRUFBQUEsSUFBSSxFQUFFVyxzQkFBVUMsS0FBVixDQUFnQixDQUFDLE9BQUQsRUFBVSxRQUFWLEVBQW9CLE9BQXBCLENBQWhCLENBeEJSOztBQTBCRTtBQUNGO0FBQ0E7QUFDRWpCLEVBQUFBLElBQUksRUFBRWdCLHNCQUFVRSxTQUFWLENBQW9CLENBQUNGLHNCQUFVRyxXQUFYLEVBQXdCSCxzQkFBVUksT0FBbEMsQ0FBcEIsQ0E3QlI7O0FBK0JFO0FBQ0Y7QUFDQTtBQUNFbkIsRUFBQUEsUUFBUSxFQUFFZSxzQkFBVUssTUFsQ3RCOztBQW9DRTtBQUNGO0FBQ0E7QUFDRWpCLEVBQUFBLE1BQU0sRUFBRVksc0JBQVVDLEtBQVYsQ0FBZ0IsQ0FBQyxNQUFELEVBQVMsU0FBVCxFQUFvQixTQUFwQixFQUErQixRQUEvQixDQUFoQixDQXZDVjs7QUF5Q0U7QUFDRjtBQUNBO0FBQ0VkLEVBQUFBLFVBQVUsRUFBRWEsc0JBQVVDLEtBQVYsQ0FBZ0IsQ0FBQyxTQUFELEVBQVksU0FBWixFQUF1QixTQUF2QixDQUFoQixDQTVDZDs7QUE4Q0U7QUFDRjtBQUNBO0FBQ0E7QUFDRUssRUFBQUEsUUFBUSxFQUFFTixzQkFBVU8sSUFsRHRCOztBQW9ERTtBQUNGO0FBQ0E7QUFDQTtBQUNFQyxFQUFBQSxRQUFRLEVBQUVSLHNCQUFVTyxJQXhEdEI7O0FBMERFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0VFLEVBQUFBLFNBQVMsRUFBRVQsc0JBQVVVO0FBOUR2QjtlQWlFZTdCLFUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgbWVtbywgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgZGltZW5zaW9ucywgc3BhY2luZywgcG9zaXRpb24sIGxheW91dCB9IGZyb20gJ3VpLWJveCdcbmltcG9ydCB7IHVzZVN0eWxlQ29uZmlnIH0gZnJvbSAnLi4vLi4vaG9va3MnXG5pbXBvcnQgeyBJY29uV3JhcHBlciB9IGZyb20gJy4uLy4uL2ljb25zL3NyYy9JY29uV3JhcHBlcidcbmltcG9ydCBCdXR0b24sIHsgZ2V0SWNvblNpemVGb3JCdXR0b24sIGludGVybmFsU3R5bGVzLCBwc2V1ZG9TZWxlY3RvcnMgfSBmcm9tICcuL0J1dHRvbidcblxuY29uc3QgSWNvbkJ1dHRvbiA9IG1lbW8oXG4gIGZvcndhcmRSZWYoZnVuY3Rpb24gSWNvbkJ1dHRvbihwcm9wcywgcmVmKSB7XG4gICAgY29uc3QgeyBpY29uLCBpY29uU2l6ZSwgLi4ucmVzdFByb3BzIH0gPSBwcm9wc1xuXG4gICAgLy8gbW9kaWZpZXJzXG4gICAgY29uc3QgeyBhcHBlYXJhbmNlLCBpbnRlbnQgPSAnbm9uZScsIHNpemUgPSAnbWVkaXVtJyB9ID0gcHJvcHNcblxuICAgIC8vIENvbXBvc2VzIHRoZSBleGFjdCBzYW1lIHN0eWxlcyBhcyBidXR0b25cbiAgICBjb25zdCBzdHlsZVByb3BzID0gdXNlU3R5bGVDb25maWcoJ0J1dHRvbicsIHsgYXBwZWFyYW5jZSwgaW50ZW50LCBzaXplIH0sIHBzZXVkb1NlbGVjdG9ycywgaW50ZXJuYWxTdHlsZXMpXG5cbiAgICBjb25zdCBoZWlnaHQgPSByZXN0UHJvcHMuaGVpZ2h0IHx8IHN0eWxlUHJvcHMuaGVpZ2h0XG4gICAgY29uc3QgcmVsYXRpdmVJY29uU2l6ZSA9IGdldEljb25TaXplRm9yQnV0dG9uKGhlaWdodClcblxuICAgIHJldHVybiAoXG4gICAgICA8QnV0dG9uXG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBwYWRkaW5nTGVmdD17MH1cbiAgICAgICAgcGFkZGluZ1JpZ2h0PXswfVxuICAgICAgICBmbGV4PVwibm9uZVwiXG4gICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICB3aWR0aD17aGVpZ2h0fVxuICAgICAgICBtaW5XaWR0aD17aGVpZ2h0fVxuICAgICAgICB7Li4ucmVzdFByb3BzfVxuICAgICAgPlxuICAgICAgICA8SWNvbldyYXBwZXJcbiAgICAgICAgICBpY29uPXtpY29ufVxuICAgICAgICAgIGNvbG9yPXtpbnRlbnQgPT09ICdub25lJyA/ICdkZWZhdWx0JyA6ICdjdXJyZW50Q29sb3InfVxuICAgICAgICAgIHNpemU9e2ljb25TaXplIHx8IHJlbGF0aXZlSWNvblNpemV9XG4gICAgICAgIC8+XG4gICAgICA8L0J1dHRvbj5cbiAgICApXG4gIH0pXG4pXG5cbkljb25CdXR0b24ucHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogQ29tcG9zZXMgdGhlIGRpbWVuc2lvbnMgc3BlYyBmcm9tIHRoZSBCb3ggcHJpbWl0aXZlLlxuICAgKi9cbiAgLi4uZGltZW5zaW9ucy5wcm9wVHlwZXMsXG5cbiAgLyoqXG4gICAqIENvbXBvc2VzIHRoZSBzcGFjaW5nIHNwZWMgZnJvbSB0aGUgQm94IHByaW1pdGl2ZS5cbiAgICovXG4gIC4uLnNwYWNpbmcucHJvcFR5cGVzLFxuXG4gIC8qKlxuICAgKiBDb21wb3NlcyB0aGUgcG9zaXRpb24gc3BlYyBmcm9tIHRoZSBCb3ggcHJpbWl0aXZlLlxuICAgKi9cbiAgLi4ucG9zaXRpb24ucHJvcFR5cGVzLFxuXG4gIC8qKlxuICAgKiBDb21wb3NlcyB0aGUgbGF5b3V0IHNwZWMgZnJvbSB0aGUgQm94IHByaW1pdGl2ZS5cbiAgICovXG4gIC4uLmxheW91dC5wcm9wVHlwZXMsXG5cbiAgLyoqXG4gICAqIFRoZSBzaXplIG9mIHRoZSBidXR0b25cbiAgICovXG4gIHNpemU6IFByb3BUeXBlcy5vbmVPZihbJ3NtYWxsJywgJ21lZGl1bScsICdsYXJnZSddKSxcblxuICAvKipcbiAgICogVGhlIEV2ZXJncmVlbiBpY29uIG9yIGN1c3RvbSBpY29uIHRvIHJlbmRlclxuICAgKi9cbiAgaWNvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmVsZW1lbnRUeXBlLCBQcm9wVHlwZXMuZWxlbWVudF0pLFxuXG4gIC8qKlxuICAgKiBTcGVjaWZpZXMgYW4gZXhwbGljaXQgaWNvbiBzaXplIGluc3RlYWQgb2YgdGhlIGRlZmF1bHQgdmFsdWVcbiAgICovXG4gIGljb25TaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gIC8qKlxuICAgKiBUaGUgaW50ZW50IG9mIHRoZSBidXR0b24uXG4gICAqL1xuICBpbnRlbnQ6IFByb3BUeXBlcy5vbmVPZihbJ25vbmUnLCAnc3VjY2VzcycsICd3YXJuaW5nJywgJ2RhbmdlciddKSxcblxuICAvKipcbiAgICogVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIGJ1dHRvbi5cbiAgICovXG4gIGFwcGVhcmFuY2U6IFByb3BUeXBlcy5vbmVPZihbJ2RlZmF1bHQnLCAnbWluaW1hbCcsICdwcmltYXJ5J10pLFxuXG4gIC8qKlxuICAgKiBGb3JjZWZ1bGx5IHNldCB0aGUgYWN0aXZlIHN0YXRlIG9mIGEgYnV0dG9uLlxuICAgKiBVc2VmdWwgaW4gY29uanVuY3Rpb24gd2l0aCBhIFBvcG92ZXIuXG4gICAqL1xuICBpc0FjdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFdoZW4gdHJ1ZSwgdGhlIGJ1dHRvbiBpcyBkaXNhYmxlZC5cbiAgICogaXNMb2FkaW5nIGFsc28gc2V0cyB0aGUgYnV0dG9uIHRvIGRpc2FibGVkLlxuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBDbGFzcyBuYW1lIHBhc3NlZCB0byB0aGUgYnV0dG9uLlxuICAgKiBPbmx5IHVzZSBpZiB5b3Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcuXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmdcbn1cblxuZXhwb3J0IGRlZmF1bHQgSWNvbkJ1dHRvblxuIl19