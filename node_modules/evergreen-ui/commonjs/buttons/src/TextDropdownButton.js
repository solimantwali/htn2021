"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = _interopRequireWildcard(require("ui-box"));

var _hooks = require("../../hooks");

var _icons = require("../../icons");

var _IconWrapper = require("../../icons/src/IconWrapper");

var _spinner = require("../../spinner");

var _Button = require("./Button");

var _excluded = ["appearance", "children", "className", "disabled", "icon", "is", "isActive", "isLoading", "size"],
    _excluded2 = ["className"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var TextDropdownButton = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function TextDropdownButton(props, ref) {
  var appearance = props.appearance,
      children = props.children,
      className = props.className,
      disabled = props.disabled,
      _props$icon = props.icon,
      icon = _props$icon === void 0 ? _icons.CaretDownIcon : _props$icon,
      _props$is = props.is,
      is = _props$is === void 0 ? 'button' : _props$is,
      _props$isActive = props.isActive,
      isActive = _props$isActive === void 0 ? false : _props$isActive,
      isLoading = props.isLoading,
      _props$size = props.size,
      size = _props$size === void 0 ? 'medium' : _props$size,
      restProps = (0, _objectWithoutProperties2["default"])(props, _excluded);

  var _useStyleConfig = (0, _hooks.useStyleConfig)('TextDropdownButton', {
    size: size
  }, _Button.pseudoSelectors, _Button.internalStyles),
      themedClassName = _useStyleConfig.className,
      boxProps = (0, _objectWithoutProperties2["default"])(_useStyleConfig, _excluded2);

  return /*#__PURE__*/_react["default"].createElement(_uiBox["default"], (0, _extends2["default"])({
    is: is,
    ref: ref,
    type: is === 'button' ? 'button' : undefined,
    className: (0, _classnames["default"])(themedClassName, className),
    "data-active": isActive || undefined
  }, boxProps, restProps, {
    disabled: disabled || isLoading
  }), isLoading && /*#__PURE__*/_react["default"].createElement(_spinner.Spinner, {
    marginLeft: -2,
    marginRight: 4,
    size: 12
  }), children, /*#__PURE__*/_react["default"].createElement(_IconWrapper.IconWrapper, {
    icon: icon,
    marginLeft: 2,
    color: "default",
    size: 12
  }));
}));
TextDropdownButton.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _uiBox.dimensions.propTypes), _uiBox.spacing.propTypes), _uiBox.position.propTypes), _uiBox.layout.propTypes), {}, {
  /**
   * Forcefully set the active state of a button.
   * Useful in conjuction with a Popover.
   */
  isActive: _propTypes["default"].bool,

  /**
   * When true, the button is disabled.
   * isLoading also sets the button to disabled.
   */
  disabled: _propTypes["default"].bool,

  /**
   * An Evergreen icon or custom icon node. By default it uses CaretDownIcon
   */
  icon: _propTypes["default"].oneOfType([_propTypes["default"].elementType, _propTypes["default"].element]),

  /**
   * Class name passed to the button.
   * Only use if you know what you are doing.
   */
  className: _propTypes["default"].string
});
var _default = TextDropdownButton;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9idXR0b25zL3NyYy9UZXh0RHJvcGRvd25CdXR0b24uanMiXSwibmFtZXMiOlsiVGV4dERyb3Bkb3duQnV0dG9uIiwicHJvcHMiLCJyZWYiLCJhcHBlYXJhbmNlIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJkaXNhYmxlZCIsImljb24iLCJDYXJldERvd25JY29uIiwiaXMiLCJpc0FjdGl2ZSIsImlzTG9hZGluZyIsInNpemUiLCJyZXN0UHJvcHMiLCJwc2V1ZG9TZWxlY3RvcnMiLCJpbnRlcm5hbFN0eWxlcyIsInRoZW1lZENsYXNzTmFtZSIsImJveFByb3BzIiwidW5kZWZpbmVkIiwicHJvcFR5cGVzIiwiZGltZW5zaW9ucyIsInNwYWNpbmciLCJwb3NpdGlvbiIsImxheW91dCIsIlByb3BUeXBlcyIsImJvb2wiLCJvbmVPZlR5cGUiLCJlbGVtZW50VHlwZSIsImVsZW1lbnQiLCJzdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxrQkFBa0IsZ0JBQUcsK0JBQ3pCLHVCQUFXLFNBQVNBLGtCQUFULENBQTRCQyxLQUE1QixFQUFtQ0MsR0FBbkMsRUFBd0M7QUFDakQsTUFDRUMsVUFERixHQVdJRixLQVhKLENBQ0VFLFVBREY7QUFBQSxNQUVFQyxRQUZGLEdBV0lILEtBWEosQ0FFRUcsUUFGRjtBQUFBLE1BR0VDLFNBSEYsR0FXSUosS0FYSixDQUdFSSxTQUhGO0FBQUEsTUFJRUMsUUFKRixHQVdJTCxLQVhKLENBSUVLLFFBSkY7QUFBQSxvQkFXSUwsS0FYSixDQUtFTSxJQUxGO0FBQUEsTUFLRUEsSUFMRiw0QkFLU0Msb0JBTFQ7QUFBQSxrQkFXSVAsS0FYSixDQU1FUSxFQU5GO0FBQUEsTUFNRUEsRUFORiwwQkFNTyxRQU5QO0FBQUEsd0JBV0lSLEtBWEosQ0FPRVMsUUFQRjtBQUFBLE1BT0VBLFFBUEYsZ0NBT2EsS0FQYjtBQUFBLE1BUUVDLFNBUkYsR0FXSVYsS0FYSixDQVFFVSxTQVJGO0FBQUEsb0JBV0lWLEtBWEosQ0FTRVcsSUFURjtBQUFBLE1BU0VBLElBVEYsNEJBU1MsUUFUVDtBQUFBLE1BVUtDLFNBVkwsNkNBV0laLEtBWEo7O0FBYUEsd0JBQW9ELDJCQUNsRCxvQkFEa0QsRUFFbEQ7QUFBRVcsSUFBQUEsSUFBSSxFQUFKQTtBQUFGLEdBRmtELEVBR2xERSx1QkFIa0QsRUFJbERDLHNCQUprRCxDQUFwRDtBQUFBLE1BQW1CQyxlQUFuQixtQkFBUVgsU0FBUjtBQUFBLE1BQXVDWSxRQUF2Qzs7QUFPQSxzQkFDRSxnQ0FBQyxpQkFBRDtBQUNFLElBQUEsRUFBRSxFQUFFUixFQUROO0FBRUUsSUFBQSxHQUFHLEVBQUVQLEdBRlA7QUFHRSxJQUFBLElBQUksRUFBRU8sRUFBRSxLQUFLLFFBQVAsR0FBa0IsUUFBbEIsR0FBNkJTLFNBSHJDO0FBSUUsSUFBQSxTQUFTLEVBQUUsNEJBQUdGLGVBQUgsRUFBb0JYLFNBQXBCLENBSmI7QUFLRSxtQkFBYUssUUFBUSxJQUFJUTtBQUwzQixLQU1NRCxRQU5OLEVBT01KLFNBUE47QUFRRSxJQUFBLFFBQVEsRUFBRVAsUUFBUSxJQUFJSztBQVJ4QixNQVVHQSxTQUFTLGlCQUFJLGdDQUFDLGdCQUFEO0FBQVMsSUFBQSxVQUFVLEVBQUUsQ0FBQyxDQUF0QjtBQUF5QixJQUFBLFdBQVcsRUFBRSxDQUF0QztBQUF5QyxJQUFBLElBQUksRUFBRTtBQUEvQyxJQVZoQixFQVdHUCxRQVhILGVBWUUsZ0NBQUMsd0JBQUQ7QUFBYSxJQUFBLElBQUksRUFBRUcsSUFBbkI7QUFBeUIsSUFBQSxVQUFVLEVBQUUsQ0FBckM7QUFBd0MsSUFBQSxLQUFLLEVBQUMsU0FBOUM7QUFBd0QsSUFBQSxJQUFJLEVBQUU7QUFBOUQsSUFaRixDQURGO0FBZ0JELENBckNELENBRHlCLENBQTNCO0FBeUNBUCxrQkFBa0IsQ0FBQ21CLFNBQW5CLDZFQUlLQyxrQkFBV0QsU0FKaEIsR0FTS0UsZUFBUUYsU0FUYixHQWNLRyxnQkFBU0gsU0FkZCxHQW1CS0ksY0FBT0osU0FuQlo7QUFxQkU7QUFDRjtBQUNBO0FBQ0E7QUFDRVQsRUFBQUEsUUFBUSxFQUFFYyxzQkFBVUMsSUF6QnRCOztBQTJCRTtBQUNGO0FBQ0E7QUFDQTtBQUNFbkIsRUFBQUEsUUFBUSxFQUFFa0Isc0JBQVVDLElBL0J0Qjs7QUFpQ0U7QUFDRjtBQUNBO0FBQ0VsQixFQUFBQSxJQUFJLEVBQUVpQixzQkFBVUUsU0FBVixDQUFvQixDQUFDRixzQkFBVUcsV0FBWCxFQUF3Qkgsc0JBQVVJLE9BQWxDLENBQXBCLENBcENSOztBQXNDRTtBQUNGO0FBQ0E7QUFDQTtBQUNFdkIsRUFBQUEsU0FBUyxFQUFFbUIsc0JBQVVLO0FBMUN2QjtlQTZDZTdCLGtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IG1lbW8sIGZvcndhcmRSZWYgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBjeCBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IEJveCwgeyBkaW1lbnNpb25zLCBzcGFjaW5nLCBwb3NpdGlvbiwgbGF5b3V0IH0gZnJvbSAndWktYm94J1xuaW1wb3J0IHsgdXNlU3R5bGVDb25maWcgfSBmcm9tICcuLi8uLi9ob29rcydcbmltcG9ydCB7IENhcmV0RG93bkljb24gfSBmcm9tICcuLi8uLi9pY29ucydcbmltcG9ydCB7IEljb25XcmFwcGVyIH0gZnJvbSAnLi4vLi4vaWNvbnMvc3JjL0ljb25XcmFwcGVyJ1xuaW1wb3J0IHsgU3Bpbm5lciB9IGZyb20gJy4uLy4uL3NwaW5uZXInXG5pbXBvcnQgeyBpbnRlcm5hbFN0eWxlcywgcHNldWRvU2VsZWN0b3JzIH0gZnJvbSAnLi9CdXR0b24nXG5cbmNvbnN0IFRleHREcm9wZG93bkJ1dHRvbiA9IG1lbW8oXG4gIGZvcndhcmRSZWYoZnVuY3Rpb24gVGV4dERyb3Bkb3duQnV0dG9uKHByb3BzLCByZWYpIHtcbiAgICBjb25zdCB7XG4gICAgICBhcHBlYXJhbmNlLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUsXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIGljb24gPSBDYXJldERvd25JY29uLFxuICAgICAgaXMgPSAnYnV0dG9uJyxcbiAgICAgIGlzQWN0aXZlID0gZmFsc2UsXG4gICAgICBpc0xvYWRpbmcsXG4gICAgICBzaXplID0gJ21lZGl1bScsXG4gICAgICAuLi5yZXN0UHJvcHNcbiAgICB9ID0gcHJvcHNcblxuICAgIGNvbnN0IHsgY2xhc3NOYW1lOiB0aGVtZWRDbGFzc05hbWUsIC4uLmJveFByb3BzIH0gPSB1c2VTdHlsZUNvbmZpZyhcbiAgICAgICdUZXh0RHJvcGRvd25CdXR0b24nLFxuICAgICAgeyBzaXplIH0sXG4gICAgICBwc2V1ZG9TZWxlY3RvcnMsXG4gICAgICBpbnRlcm5hbFN0eWxlc1xuICAgIClcblxuICAgIHJldHVybiAoXG4gICAgICA8Qm94XG4gICAgICAgIGlzPXtpc31cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIHR5cGU9e2lzID09PSAnYnV0dG9uJyA/ICdidXR0b24nIDogdW5kZWZpbmVkfVxuICAgICAgICBjbGFzc05hbWU9e2N4KHRoZW1lZENsYXNzTmFtZSwgY2xhc3NOYW1lKX1cbiAgICAgICAgZGF0YS1hY3RpdmU9e2lzQWN0aXZlIHx8IHVuZGVmaW5lZH1cbiAgICAgICAgey4uLmJveFByb3BzfVxuICAgICAgICB7Li4ucmVzdFByb3BzfVxuICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWQgfHwgaXNMb2FkaW5nfVxuICAgICAgPlxuICAgICAgICB7aXNMb2FkaW5nICYmIDxTcGlubmVyIG1hcmdpbkxlZnQ9ey0yfSBtYXJnaW5SaWdodD17NH0gc2l6ZT17MTJ9IC8+fVxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIDxJY29uV3JhcHBlciBpY29uPXtpY29ufSBtYXJnaW5MZWZ0PXsyfSBjb2xvcj1cImRlZmF1bHRcIiBzaXplPXsxMn0gLz5cbiAgICAgIDwvQm94PlxuICAgIClcbiAgfSlcbilcblxuVGV4dERyb3Bkb3duQnV0dG9uLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIENvbXBvc2VzIHRoZSBkaW1lbnNpb25zIHNwZWMgZnJvbSB0aGUgQm94IHByaW1pdGl2ZS5cbiAgICovXG4gIC4uLmRpbWVuc2lvbnMucHJvcFR5cGVzLFxuXG4gIC8qKlxuICAgKiBDb21wb3NlcyB0aGUgc3BhY2luZyBzcGVjIGZyb20gdGhlIEJveCBwcmltaXRpdmUuXG4gICAqL1xuICAuLi5zcGFjaW5nLnByb3BUeXBlcyxcblxuICAvKipcbiAgICogQ29tcG9zZXMgdGhlIHBvc2l0aW9uIHNwZWMgZnJvbSB0aGUgQm94IHByaW1pdGl2ZS5cbiAgICovXG4gIC4uLnBvc2l0aW9uLnByb3BUeXBlcyxcblxuICAvKipcbiAgICogQ29tcG9zZXMgdGhlIGxheW91dCBzcGVjIGZyb20gdGhlIEJveCBwcmltaXRpdmUuXG4gICAqL1xuICAuLi5sYXlvdXQucHJvcFR5cGVzLFxuXG4gIC8qKlxuICAgKiBGb3JjZWZ1bGx5IHNldCB0aGUgYWN0aXZlIHN0YXRlIG9mIGEgYnV0dG9uLlxuICAgKiBVc2VmdWwgaW4gY29uanVjdGlvbiB3aXRoIGEgUG9wb3Zlci5cbiAgICovXG4gIGlzQWN0aXZlOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogV2hlbiB0cnVlLCB0aGUgYnV0dG9uIGlzIGRpc2FibGVkLlxuICAgKiBpc0xvYWRpbmcgYWxzbyBzZXRzIHRoZSBidXR0b24gdG8gZGlzYWJsZWQuXG4gICAqL1xuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEFuIEV2ZXJncmVlbiBpY29uIG9yIGN1c3RvbSBpY29uIG5vZGUuIEJ5IGRlZmF1bHQgaXQgdXNlcyBDYXJldERvd25JY29uXG4gICAqL1xuICBpY29uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZWxlbWVudFR5cGUsIFByb3BUeXBlcy5lbGVtZW50XSksXG5cbiAgLyoqXG4gICAqIENsYXNzIG5hbWUgcGFzc2VkIHRvIHRoZSBidXR0b24uXG4gICAqIE9ubHkgdXNlIGlmIHlvdSBrbm93IHdoYXQgeW91IGFyZSBkb2luZy5cbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZ1xufVxuXG5leHBvcnQgZGVmYXVsdCBUZXh0RHJvcGRvd25CdXR0b25cbiJdfQ==