"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = _interopRequireDefault(require("ui-box"));

var _hooks = require("../../hooks");

var _excluded = ["className", "color", "name", "size", "svgPaths16", "svgPaths20", "title"],
    _excluded2 = ["className"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var pseudoSelectors = {};
var internalStyles = {};
var Icon = /*#__PURE__*/(0, _react.forwardRef)(function Icon(_ref, ref) {
  var className = _ref.className,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'currentColor' : _ref$color,
      name = _ref.name,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 16 : _ref$size,
      svgPaths16 = _ref.svgPaths16,
      svgPaths20 = _ref.svgPaths20,
      title = _ref.title,
      svgProps = (0, _objectWithoutProperties2["default"])(_ref, _excluded);

  var _useStyleConfig = (0, _hooks.useStyleConfig)('Icon', {
    color: color
  }, pseudoSelectors, internalStyles),
      themedClassName = _useStyleConfig.className,
      styleProps = (0, _objectWithoutProperties2["default"])(_useStyleConfig, _excluded2);

  var SIZE_STANDARD = 16;
  var SIZE_LARGE = 20; // Choose which pixel grid is most appropriate for given icon size

  var pixelGridSize = size >= SIZE_LARGE ? SIZE_LARGE : SIZE_STANDARD;
  var pathStrings = pixelGridSize === SIZE_STANDARD ? svgPaths16 : svgPaths20;
  var paths = pathStrings.map(function (d, i) {
    return (
      /*#__PURE__*/
      // eslint-disable-next-line react/no-array-index-key
      _react["default"].createElement("path", {
        key: i,
        d: d,
        fillRule: "evenodd"
      })
    );
  });
  var viewBox = "0 0 ".concat(pixelGridSize, " ").concat(pixelGridSize);
  return /*#__PURE__*/_react["default"].createElement(_uiBox["default"], (0, _extends2["default"])({
    is: "svg",
    ref: ref,
    className: (0, _classnames["default"])(className, themedClassName)
  }, styleProps, svgProps, {
    "data-icon": name,
    width: size,
    height: size,
    viewBox: viewBox
  }), title && /*#__PURE__*/_react["default"].createElement("title", null, title), paths);
});
Icon.propTypes = {
  /**
   * Class name passed to the component.
   * Only use if you know what you are doing.
   */
  className: _propTypes["default"].string,

  /**
   * Color of icon. Equivalent to setting CSS `fill` property.
   */
  color: _propTypes["default"].string,

  /**
   * Size of the icon, in pixels.
   * Blueprint contains 16px and 20px SVG icon images,
   * and chooses the appropriate resolution based on this prop.
   */
  size: _propTypes["default"].number,

  /**
   * Name of the icon
   */
  name: _propTypes["default"].string,

  /**
   * Description string.
   * Browsers usually render this as a tooltip on hover, whereas screen
   * readers will use it for aural feedback.
   * By default, this is set to the icon's name for accessibility.
   */
  title: _propTypes["default"].string,
  svgPaths16: _propTypes["default"].arrayOf(_propTypes["default"].string).isRequired,
  svgPaths20: _propTypes["default"].arrayOf(_propTypes["default"].string).isRequired
};
var _default = Icon;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9pY29ucy9zcmMvSWNvbi5qcyJdLCJuYW1lcyI6WyJwc2V1ZG9TZWxlY3RvcnMiLCJpbnRlcm5hbFN0eWxlcyIsIkljb24iLCJyZWYiLCJjbGFzc05hbWUiLCJjb2xvciIsIm5hbWUiLCJzaXplIiwic3ZnUGF0aHMxNiIsInN2Z1BhdGhzMjAiLCJ0aXRsZSIsInN2Z1Byb3BzIiwidGhlbWVkQ2xhc3NOYW1lIiwic3R5bGVQcm9wcyIsIlNJWkVfU1RBTkRBUkQiLCJTSVpFX0xBUkdFIiwicGl4ZWxHcmlkU2l6ZSIsInBhdGhTdHJpbmdzIiwicGF0aHMiLCJtYXAiLCJkIiwiaSIsInZpZXdCb3giLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJudW1iZXIiLCJhcnJheU9mIiwiaXNSZXF1aXJlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7OztBQUVBLElBQU1BLGVBQWUsR0FBRyxFQUF4QjtBQUNBLElBQU1DLGNBQWMsR0FBRyxFQUF2QjtBQUVBLElBQU1DLElBQUksZ0JBQUcsdUJBQVcsU0FBU0EsSUFBVCxPQUV0QkMsR0FGc0IsRUFHdEI7QUFBQSxNQUZFQyxTQUVGLFFBRkVBLFNBRUY7QUFBQSx3QkFGYUMsS0FFYjtBQUFBLE1BRmFBLEtBRWIsMkJBRnFCLGNBRXJCO0FBQUEsTUFGcUNDLElBRXJDLFFBRnFDQSxJQUVyQztBQUFBLHVCQUYyQ0MsSUFFM0M7QUFBQSxNQUYyQ0EsSUFFM0MsMEJBRmtELEVBRWxEO0FBQUEsTUFGc0RDLFVBRXRELFFBRnNEQSxVQUV0RDtBQUFBLE1BRmtFQyxVQUVsRSxRQUZrRUEsVUFFbEU7QUFBQSxNQUY4RUMsS0FFOUUsUUFGOEVBLEtBRTlFO0FBQUEsTUFGd0ZDLFFBRXhGOztBQUNBLHdCQUFzRCwyQkFDcEQsTUFEb0QsRUFFcEQ7QUFBRU4sSUFBQUEsS0FBSyxFQUFMQTtBQUFGLEdBRm9ELEVBR3BETCxlQUhvRCxFQUlwREMsY0FKb0QsQ0FBdEQ7QUFBQSxNQUFtQlcsZUFBbkIsbUJBQVFSLFNBQVI7QUFBQSxNQUF1Q1MsVUFBdkM7O0FBTUEsTUFBTUMsYUFBYSxHQUFHLEVBQXRCO0FBQ0EsTUFBTUMsVUFBVSxHQUFHLEVBQW5CLENBUkEsQ0FVQTs7QUFDQSxNQUFNQyxhQUFhLEdBQUdULElBQUksSUFBSVEsVUFBUixHQUFxQkEsVUFBckIsR0FBa0NELGFBQXhEO0FBQ0EsTUFBTUcsV0FBVyxHQUFHRCxhQUFhLEtBQUtGLGFBQWxCLEdBQWtDTixVQUFsQyxHQUErQ0MsVUFBbkU7QUFDQSxNQUFNUyxLQUFLLEdBQUdELFdBQVcsQ0FBQ0UsR0FBWixDQUFnQixVQUFDQyxDQUFELEVBQUlDLENBQUo7QUFBQTtBQUFBO0FBQzVCO0FBQ0E7QUFBTSxRQUFBLEdBQUcsRUFBRUEsQ0FBWDtBQUFjLFFBQUEsQ0FBQyxFQUFFRCxDQUFqQjtBQUFvQixRQUFBLFFBQVEsRUFBQztBQUE3QjtBQUY0QjtBQUFBLEdBQWhCLENBQWQ7QUFLQSxNQUFNRSxPQUFPLGlCQUFVTixhQUFWLGNBQTJCQSxhQUEzQixDQUFiO0FBRUEsc0JBQ0UsZ0NBQUMsaUJBQUQ7QUFDRSxJQUFBLEVBQUUsRUFBQyxLQURMO0FBRUUsSUFBQSxHQUFHLEVBQUViLEdBRlA7QUFHRSxJQUFBLFNBQVMsRUFBRSw0QkFBR0MsU0FBSCxFQUFjUSxlQUFkO0FBSGIsS0FJTUMsVUFKTixFQUtNRixRQUxOO0FBTUUsaUJBQVdMLElBTmI7QUFPRSxJQUFBLEtBQUssRUFBRUMsSUFQVDtBQVFFLElBQUEsTUFBTSxFQUFFQSxJQVJWO0FBU0UsSUFBQSxPQUFPLEVBQUVlO0FBVFgsTUFXR1osS0FBSyxpQkFBSSwrQ0FBUUEsS0FBUixDQVhaLEVBWUdRLEtBWkgsQ0FERjtBQWdCRCxDQXZDWSxDQUFiO0FBeUNBaEIsSUFBSSxDQUFDcUIsU0FBTCxHQUFpQjtBQUNmO0FBQ0Y7QUFDQTtBQUNBO0FBQ0VuQixFQUFBQSxTQUFTLEVBQUVvQixzQkFBVUMsTUFMTjs7QUFPZjtBQUNGO0FBQ0E7QUFDRXBCLEVBQUFBLEtBQUssRUFBRW1CLHNCQUFVQyxNQVZGOztBQVlmO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDRWxCLEVBQUFBLElBQUksRUFBRWlCLHNCQUFVRSxNQWpCRDs7QUFtQmY7QUFDRjtBQUNBO0FBQ0VwQixFQUFBQSxJQUFJLEVBQUVrQixzQkFBVUMsTUF0QkQ7O0FBd0JmO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNFZixFQUFBQSxLQUFLLEVBQUVjLHNCQUFVQyxNQTlCRjtBQWdDZmpCLEVBQUFBLFVBQVUsRUFBRWdCLHNCQUFVRyxPQUFWLENBQWtCSCxzQkFBVUMsTUFBNUIsRUFBb0NHLFVBaENqQztBQWtDZm5CLEVBQUFBLFVBQVUsRUFBRWUsc0JBQVVHLE9BQVYsQ0FBa0JILHNCQUFVQyxNQUE1QixFQUFvQ0c7QUFsQ2pDLENBQWpCO2VBcUNlMUIsSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgY3ggZnJvbSAnY2xhc3NuYW1lcydcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBCb3ggZnJvbSAndWktYm94J1xuaW1wb3J0IHsgdXNlU3R5bGVDb25maWcgfSBmcm9tICcuLi8uLi9ob29rcydcblxuY29uc3QgcHNldWRvU2VsZWN0b3JzID0ge31cbmNvbnN0IGludGVybmFsU3R5bGVzID0ge31cblxuY29uc3QgSWNvbiA9IGZvcndhcmRSZWYoZnVuY3Rpb24gSWNvbihcbiAgeyBjbGFzc05hbWUsIGNvbG9yID0gJ2N1cnJlbnRDb2xvcicsIG5hbWUsIHNpemUgPSAxNiwgc3ZnUGF0aHMxNiwgc3ZnUGF0aHMyMCwgdGl0bGUsIC4uLnN2Z1Byb3BzIH0sXG4gIHJlZlxuKSB7XG4gIGNvbnN0IHsgY2xhc3NOYW1lOiB0aGVtZWRDbGFzc05hbWUsIC4uLnN0eWxlUHJvcHMgfSA9IHVzZVN0eWxlQ29uZmlnKFxuICAgICdJY29uJyxcbiAgICB7IGNvbG9yIH0sXG4gICAgcHNldWRvU2VsZWN0b3JzLFxuICAgIGludGVybmFsU3R5bGVzXG4gIClcbiAgY29uc3QgU0laRV9TVEFOREFSRCA9IDE2XG4gIGNvbnN0IFNJWkVfTEFSR0UgPSAyMFxuXG4gIC8vIENob29zZSB3aGljaCBwaXhlbCBncmlkIGlzIG1vc3QgYXBwcm9wcmlhdGUgZm9yIGdpdmVuIGljb24gc2l6ZVxuICBjb25zdCBwaXhlbEdyaWRTaXplID0gc2l6ZSA+PSBTSVpFX0xBUkdFID8gU0laRV9MQVJHRSA6IFNJWkVfU1RBTkRBUkRcbiAgY29uc3QgcGF0aFN0cmluZ3MgPSBwaXhlbEdyaWRTaXplID09PSBTSVpFX1NUQU5EQVJEID8gc3ZnUGF0aHMxNiA6IHN2Z1BhdGhzMjBcbiAgY29uc3QgcGF0aHMgPSBwYXRoU3RyaW5ncy5tYXAoKGQsIGkpID0+IChcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3Qvbm8tYXJyYXktaW5kZXgta2V5XG4gICAgPHBhdGgga2V5PXtpfSBkPXtkfSBmaWxsUnVsZT1cImV2ZW5vZGRcIiAvPlxuICApKVxuXG4gIGNvbnN0IHZpZXdCb3ggPSBgMCAwICR7cGl4ZWxHcmlkU2l6ZX0gJHtwaXhlbEdyaWRTaXplfWBcblxuICByZXR1cm4gKFxuICAgIDxCb3hcbiAgICAgIGlzPVwic3ZnXCJcbiAgICAgIHJlZj17cmVmfVxuICAgICAgY2xhc3NOYW1lPXtjeChjbGFzc05hbWUsIHRoZW1lZENsYXNzTmFtZSl9XG4gICAgICB7Li4uc3R5bGVQcm9wc31cbiAgICAgIHsuLi5zdmdQcm9wc31cbiAgICAgIGRhdGEtaWNvbj17bmFtZX1cbiAgICAgIHdpZHRoPXtzaXplfVxuICAgICAgaGVpZ2h0PXtzaXplfVxuICAgICAgdmlld0JveD17dmlld0JveH1cbiAgICA+XG4gICAgICB7dGl0bGUgJiYgPHRpdGxlPnt0aXRsZX08L3RpdGxlPn1cbiAgICAgIHtwYXRoc31cbiAgICA8L0JveD5cbiAgKVxufSlcblxuSWNvbi5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBDbGFzcyBuYW1lIHBhc3NlZCB0byB0aGUgY29tcG9uZW50LlxuICAgKiBPbmx5IHVzZSBpZiB5b3Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcuXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIENvbG9yIG9mIGljb24uIEVxdWl2YWxlbnQgdG8gc2V0dGluZyBDU1MgYGZpbGxgIHByb3BlcnR5LlxuICAgKi9cbiAgY29sb3I6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIFNpemUgb2YgdGhlIGljb24sIGluIHBpeGVscy5cbiAgICogQmx1ZXByaW50IGNvbnRhaW5zIDE2cHggYW5kIDIwcHggU1ZHIGljb24gaW1hZ2VzLFxuICAgKiBhbmQgY2hvb3NlcyB0aGUgYXBwcm9wcmlhdGUgcmVzb2x1dGlvbiBiYXNlZCBvbiB0aGlzIHByb3AuXG4gICAqL1xuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gIC8qKlxuICAgKiBOYW1lIG9mIHRoZSBpY29uXG4gICAqL1xuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBEZXNjcmlwdGlvbiBzdHJpbmcuXG4gICAqIEJyb3dzZXJzIHVzdWFsbHkgcmVuZGVyIHRoaXMgYXMgYSB0b29sdGlwIG9uIGhvdmVyLCB3aGVyZWFzIHNjcmVlblxuICAgKiByZWFkZXJzIHdpbGwgdXNlIGl0IGZvciBhdXJhbCBmZWVkYmFjay5cbiAgICogQnkgZGVmYXVsdCwgdGhpcyBpcyBzZXQgdG8gdGhlIGljb24ncyBuYW1lIGZvciBhY2Nlc3NpYmlsaXR5LlxuICAgKi9cbiAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgc3ZnUGF0aHMxNjogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZykuaXNSZXF1aXJlZCxcblxuICBzdmdQYXRoczIwOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKS5pc1JlcXVpcmVkXG59XG5cbmV4cG9ydCBkZWZhdWx0IEljb25cbiJdfQ==