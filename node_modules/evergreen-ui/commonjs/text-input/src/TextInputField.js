"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = require("ui-box");

var _formField = require("../../form-field");

var _hooks = require("../../hooks");

var _scales = require("../../scales");

var _TextInput = _interopRequireDefault(require("./TextInput"));

var _excluded = ["appearance", "description", "disabled", "hint", "id", "inputHeight", "inputWidth", "isInvalid", "label", "placeholder", "required", "spellCheck", "validationMessage"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var TextInputField = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function TextInputField(props, ref) {
  var id = (0, _hooks.useId)('TextInputField', props.id);
  var appearance = props.appearance,
      description = props.description,
      disabled = props.disabled,
      hint = props.hint,
      unusedId = props.id,
      _props$inputHeight = props.inputHeight,
      inputHeight = _props$inputHeight === void 0 ? (0, _scales.majorScale)(4) : _props$inputHeight,
      _props$inputWidth = props.inputWidth,
      inputWidth = _props$inputWidth === void 0 ? '100%' : _props$inputWidth,
      isInvalid = props.isInvalid,
      label = props.label,
      placeholder = props.placeholder,
      required = props.required,
      spellCheck = props.spellCheck,
      validationMessage = props.validationMessage,
      restProps = (0, _objectWithoutProperties2["default"])(props, _excluded);
  /**
   * Split the wrapper props from the input props.
   */

  var _splitBoxProps = (0, _uiBox.splitBoxProps)(restProps),
      matchedProps = _splitBoxProps.matchedProps,
      remainingProps = _splitBoxProps.remainingProps;

  return /*#__PURE__*/_react["default"].createElement(_formField.FormField, (0, _extends2["default"])({
    marginBottom: 24,
    label: label,
    isRequired: required,
    hint: hint,
    description: description,
    validationMessage: validationMessage,
    labelFor: id
  }, matchedProps), /*#__PURE__*/_react["default"].createElement(_TextInput["default"], (0, _extends2["default"])({
    id: id,
    width: inputWidth,
    height: inputHeight,
    disabled: disabled,
    required: required,
    isInvalid: isInvalid,
    appearance: appearance,
    placeholder: placeholder,
    spellCheck: spellCheck,
    ref: ref
  }, remainingProps)));
}));
TextInputField.propTypes = _objectSpread(_objectSpread(_objectSpread({}, _TextInput["default"].propTypes), _formField.FormField.propTypes), {}, {
  /**
   * The label used above the input element.
   */
  label: _propTypes["default"].node.isRequired,

  /**
   * Passed on the label as a htmlFor prop.
   */
  labelFor: _propTypes["default"].string,

  /**
   * Whether or not to show an asterix after the label.
   */
  required: _propTypes["default"].bool,

  /**
   * An optional description of the field under the label, above the input element.
   */
  description: _propTypes["default"].node,

  /**
   * An optional hint under the input element.
   */
  hint: _propTypes["default"].node,

  /**
   * If a validation message is passed it is shown under the input element
   * and above the hint. This is unaffected by `isInvalid`.
   */
  validationMessage: _propTypes["default"].node,

  /**
   * The height of the input element.
   */
  inputHeight: _propTypes["default"].number,

  /**
   * The width of the input width.
   */
  inputWidth: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])
});
var _default = TextInputField;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXh0LWlucHV0L3NyYy9UZXh0SW5wdXRGaWVsZC5qcyJdLCJuYW1lcyI6WyJUZXh0SW5wdXRGaWVsZCIsInByb3BzIiwicmVmIiwiaWQiLCJhcHBlYXJhbmNlIiwiZGVzY3JpcHRpb24iLCJkaXNhYmxlZCIsImhpbnQiLCJ1bnVzZWRJZCIsImlucHV0SGVpZ2h0IiwiaW5wdXRXaWR0aCIsImlzSW52YWxpZCIsImxhYmVsIiwicGxhY2Vob2xkZXIiLCJyZXF1aXJlZCIsInNwZWxsQ2hlY2siLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInJlc3RQcm9wcyIsIm1hdGNoZWRQcm9wcyIsInJlbWFpbmluZ1Byb3BzIiwicHJvcFR5cGVzIiwiVGV4dElucHV0IiwiRm9ybUZpZWxkIiwiUHJvcFR5cGVzIiwibm9kZSIsImlzUmVxdWlyZWQiLCJsYWJlbEZvciIsInN0cmluZyIsImJvb2wiLCJudW1iZXIiLCJvbmVPZlR5cGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLGNBQWMsZ0JBQUcsK0JBQ3JCLHVCQUFXLFNBQVNBLGNBQVQsQ0FBd0JDLEtBQXhCLEVBQStCQyxHQUEvQixFQUFvQztBQUM3QyxNQUFNQyxFQUFFLEdBQUcsa0JBQU0sZ0JBQU4sRUFBd0JGLEtBQUssQ0FBQ0UsRUFBOUIsQ0FBWDtBQUVBLE1BRUVDLFVBRkYsR0FzQklILEtBdEJKLENBRUVHLFVBRkY7QUFBQSxNQUtFQyxXQUxGLEdBc0JJSixLQXRCSixDQUtFSSxXQUxGO0FBQUEsTUFNRUMsUUFORixHQXNCSUwsS0F0QkosQ0FNRUssUUFORjtBQUFBLE1BT0VDLElBUEYsR0FzQklOLEtBdEJKLENBT0VNLElBUEY7QUFBQSxNQVFNQyxRQVJOLEdBc0JJUCxLQXRCSixDQVFFRSxFQVJGO0FBQUEsMkJBc0JJRixLQXRCSixDQVdFUSxXQVhGO0FBQUEsTUFXRUEsV0FYRixtQ0FXZ0Isd0JBQVcsQ0FBWCxDQVhoQjtBQUFBLDBCQXNCSVIsS0F0QkosQ0FZRVMsVUFaRjtBQUFBLE1BWUVBLFVBWkYsa0NBWWUsTUFaZjtBQUFBLE1BYUVDLFNBYkYsR0FzQklWLEtBdEJKLENBYUVVLFNBYkY7QUFBQSxNQWNFQyxLQWRGLEdBc0JJWCxLQXRCSixDQWNFVyxLQWRGO0FBQUEsTUFlRUMsV0FmRixHQXNCSVosS0F0QkosQ0FlRVksV0FmRjtBQUFBLE1BZ0JFQyxRQWhCRixHQXNCSWIsS0F0QkosQ0FnQkVhLFFBaEJGO0FBQUEsTUFpQkVDLFVBakJGLEdBc0JJZCxLQXRCSixDQWlCRWMsVUFqQkY7QUFBQSxNQWtCRUMsaUJBbEJGLEdBc0JJZixLQXRCSixDQWtCRWUsaUJBbEJGO0FBQUEsTUFxQktDLFNBckJMLDZDQXNCSWhCLEtBdEJKO0FBd0JBO0FBQ0o7QUFDQTs7QUFDSSx1QkFBeUMsMEJBQWNnQixTQUFkLENBQXpDO0FBQUEsTUFBUUMsWUFBUixrQkFBUUEsWUFBUjtBQUFBLE1BQXNCQyxjQUF0QixrQkFBc0JBLGNBQXRCOztBQUVBLHNCQUNFLGdDQUFDLG9CQUFEO0FBQ0UsSUFBQSxZQUFZLEVBQUUsRUFEaEI7QUFFRSxJQUFBLEtBQUssRUFBRVAsS0FGVDtBQUdFLElBQUEsVUFBVSxFQUFFRSxRQUhkO0FBSUUsSUFBQSxJQUFJLEVBQUVQLElBSlI7QUFLRSxJQUFBLFdBQVcsRUFBRUYsV0FMZjtBQU1FLElBQUEsaUJBQWlCLEVBQUVXLGlCQU5yQjtBQU9FLElBQUEsUUFBUSxFQUFFYjtBQVBaLEtBUU1lLFlBUk4sZ0JBVUUsZ0NBQUMscUJBQUQ7QUFDRSxJQUFBLEVBQUUsRUFBRWYsRUFETjtBQUVFLElBQUEsS0FBSyxFQUFFTyxVQUZUO0FBR0UsSUFBQSxNQUFNLEVBQUVELFdBSFY7QUFJRSxJQUFBLFFBQVEsRUFBRUgsUUFKWjtBQUtFLElBQUEsUUFBUSxFQUFFUSxRQUxaO0FBTUUsSUFBQSxTQUFTLEVBQUVILFNBTmI7QUFPRSxJQUFBLFVBQVUsRUFBRVAsVUFQZDtBQVFFLElBQUEsV0FBVyxFQUFFUyxXQVJmO0FBU0UsSUFBQSxVQUFVLEVBQUVFLFVBVGQ7QUFVRSxJQUFBLEdBQUcsRUFBRWI7QUFWUCxLQVdNaUIsY0FYTixFQVZGLENBREY7QUEwQkQsQ0ExREQsQ0FEcUIsQ0FBdkI7QUE4REFuQixjQUFjLENBQUNvQixTQUFmLGlEQUlLQyxzQkFBVUQsU0FKZixHQUtLRSxxQkFBVUYsU0FMZjtBQU9FO0FBQ0Y7QUFDQTtBQUNFUixFQUFBQSxLQUFLLEVBQUVXLHNCQUFVQyxJQUFWLENBQWVDLFVBVnhCOztBQVlFO0FBQ0Y7QUFDQTtBQUNFQyxFQUFBQSxRQUFRLEVBQUVILHNCQUFVSSxNQWZ0Qjs7QUFpQkU7QUFDRjtBQUNBO0FBQ0ViLEVBQUFBLFFBQVEsRUFBRVMsc0JBQVVLLElBcEJ0Qjs7QUFzQkU7QUFDRjtBQUNBO0FBQ0V2QixFQUFBQSxXQUFXLEVBQUVrQixzQkFBVUMsSUF6QnpCOztBQTJCRTtBQUNGO0FBQ0E7QUFDRWpCLEVBQUFBLElBQUksRUFBRWdCLHNCQUFVQyxJQTlCbEI7O0FBZ0NFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0VSLEVBQUFBLGlCQUFpQixFQUFFTyxzQkFBVUMsSUFwQy9COztBQXNDRTtBQUNGO0FBQ0E7QUFDRWYsRUFBQUEsV0FBVyxFQUFFYyxzQkFBVU0sTUF6Q3pCOztBQTJDRTtBQUNGO0FBQ0E7QUFDRW5CLEVBQUFBLFVBQVUsRUFBRWEsc0JBQVVPLFNBQVYsQ0FBb0IsQ0FBQ1Asc0JBQVVNLE1BQVgsRUFBbUJOLHNCQUFVSSxNQUE3QixDQUFwQjtBQTlDZDtlQWlEZTNCLGMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgZm9yd2FyZFJlZiwgbWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgc3BsaXRCb3hQcm9wcyB9IGZyb20gJ3VpLWJveCdcbmltcG9ydCB7IEZvcm1GaWVsZCB9IGZyb20gJy4uLy4uL2Zvcm0tZmllbGQnXG5pbXBvcnQgeyB1c2VJZCB9IGZyb20gJy4uLy4uL2hvb2tzJ1xuaW1wb3J0IHsgbWFqb3JTY2FsZSB9IGZyb20gJy4uLy4uL3NjYWxlcydcbmltcG9ydCBUZXh0SW5wdXQgZnJvbSAnLi9UZXh0SW5wdXQnXG5cbmNvbnN0IFRleHRJbnB1dEZpZWxkID0gbWVtbyhcbiAgZm9yd2FyZFJlZihmdW5jdGlvbiBUZXh0SW5wdXRGaWVsZChwcm9wcywgcmVmKSB7XG4gICAgY29uc3QgaWQgPSB1c2VJZCgnVGV4dElucHV0RmllbGQnLCBwcm9wcy5pZClcblxuICAgIGNvbnN0IHtcbiAgICAgIC8vIFdlIGFyZSB1c2luZyB0aGUgaWQgZnJvbSB0aGUgc3RhdGVcbiAgICAgIGFwcGVhcmFuY2UsXG5cbiAgICAgIC8vIEZvcm1GaWVsZCBwcm9wc1xuICAgICAgZGVzY3JpcHRpb24sXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIGhpbnQsXG4gICAgICBpZDogdW51c2VkSWQsXG5cbiAgICAgIC8vIFRleHRJbnB1dCBwcm9wc1xuICAgICAgaW5wdXRIZWlnaHQgPSBtYWpvclNjYWxlKDQpLFxuICAgICAgaW5wdXRXaWR0aCA9ICcxMDAlJyxcbiAgICAgIGlzSW52YWxpZCxcbiAgICAgIGxhYmVsLFxuICAgICAgcGxhY2Vob2xkZXIsXG4gICAgICByZXF1aXJlZCxcbiAgICAgIHNwZWxsQ2hlY2ssXG4gICAgICB2YWxpZGF0aW9uTWVzc2FnZSxcblxuICAgICAgLy8gUmVzdCBwcm9wcyBhcmUgc3ByZWFkIG9uIHRoZSBGb3JtRmllbGRcbiAgICAgIC4uLnJlc3RQcm9wc1xuICAgIH0gPSBwcm9wc1xuXG4gICAgLyoqXG4gICAgICogU3BsaXQgdGhlIHdyYXBwZXIgcHJvcHMgZnJvbSB0aGUgaW5wdXQgcHJvcHMuXG4gICAgICovXG4gICAgY29uc3QgeyBtYXRjaGVkUHJvcHMsIHJlbWFpbmluZ1Byb3BzIH0gPSBzcGxpdEJveFByb3BzKHJlc3RQcm9wcylcblxuICAgIHJldHVybiAoXG4gICAgICA8Rm9ybUZpZWxkXG4gICAgICAgIG1hcmdpbkJvdHRvbT17MjR9XG4gICAgICAgIGxhYmVsPXtsYWJlbH1cbiAgICAgICAgaXNSZXF1aXJlZD17cmVxdWlyZWR9XG4gICAgICAgIGhpbnQ9e2hpbnR9XG4gICAgICAgIGRlc2NyaXB0aW9uPXtkZXNjcmlwdGlvbn1cbiAgICAgICAgdmFsaWRhdGlvbk1lc3NhZ2U9e3ZhbGlkYXRpb25NZXNzYWdlfVxuICAgICAgICBsYWJlbEZvcj17aWR9XG4gICAgICAgIHsuLi5tYXRjaGVkUHJvcHN9XG4gICAgICA+XG4gICAgICAgIDxUZXh0SW5wdXRcbiAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgd2lkdGg9e2lucHV0V2lkdGh9XG4gICAgICAgICAgaGVpZ2h0PXtpbnB1dEhlaWdodH1cbiAgICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICAgICAgcmVxdWlyZWQ9e3JlcXVpcmVkfVxuICAgICAgICAgIGlzSW52YWxpZD17aXNJbnZhbGlkfVxuICAgICAgICAgIGFwcGVhcmFuY2U9e2FwcGVhcmFuY2V9XG4gICAgICAgICAgcGxhY2Vob2xkZXI9e3BsYWNlaG9sZGVyfVxuICAgICAgICAgIHNwZWxsQ2hlY2s9e3NwZWxsQ2hlY2t9XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgey4uLnJlbWFpbmluZ1Byb3BzfVxuICAgICAgICAvPlxuICAgICAgPC9Gb3JtRmllbGQ+XG4gICAgKVxuICB9KVxuKVxuXG5UZXh0SW5wdXRGaWVsZC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBDb21wb3NlcyB0aGUgVGV4dElucHV0IGNvbXBvbmVudCBhcyB0aGUgYmFzZS5cbiAgICovXG4gIC4uLlRleHRJbnB1dC5wcm9wVHlwZXMsXG4gIC4uLkZvcm1GaWVsZC5wcm9wVHlwZXMsXG5cbiAgLyoqXG4gICAqIFRoZSBsYWJlbCB1c2VkIGFib3ZlIHRoZSBpbnB1dCBlbGVtZW50LlxuICAgKi9cbiAgbGFiZWw6IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIFBhc3NlZCBvbiB0aGUgbGFiZWwgYXMgYSBodG1sRm9yIHByb3AuXG4gICAqL1xuICBsYWJlbEZvcjogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogV2hldGhlciBvciBub3QgdG8gc2hvdyBhbiBhc3Rlcml4IGFmdGVyIHRoZSBsYWJlbC5cbiAgICovXG4gIHJlcXVpcmVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogQW4gb3B0aW9uYWwgZGVzY3JpcHRpb24gb2YgdGhlIGZpZWxkIHVuZGVyIHRoZSBsYWJlbCwgYWJvdmUgdGhlIGlucHV0IGVsZW1lbnQuXG4gICAqL1xuICBkZXNjcmlwdGlvbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIEFuIG9wdGlvbmFsIGhpbnQgdW5kZXIgdGhlIGlucHV0IGVsZW1lbnQuXG4gICAqL1xuICBoaW50OiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogSWYgYSB2YWxpZGF0aW9uIG1lc3NhZ2UgaXMgcGFzc2VkIGl0IGlzIHNob3duIHVuZGVyIHRoZSBpbnB1dCBlbGVtZW50XG4gICAqIGFuZCBhYm92ZSB0aGUgaGludC4gVGhpcyBpcyB1bmFmZmVjdGVkIGJ5IGBpc0ludmFsaWRgLlxuICAgKi9cbiAgdmFsaWRhdGlvbk1lc3NhZ2U6IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBUaGUgaGVpZ2h0IG9mIHRoZSBpbnB1dCBlbGVtZW50LlxuICAgKi9cbiAgaW5wdXRIZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgLyoqXG4gICAqIFRoZSB3aWR0aCBvZiB0aGUgaW5wdXQgd2lkdGguXG4gICAqL1xuICBpbnB1dFdpZHRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGV4dElucHV0RmllbGRcbiJdfQ==