"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _typography = require("../../typography");

var _excluded = ["children", "isAstrixShown"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var FormFieldLabel = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function FormFieldLabel(props, ref) {
  var children = props.children,
      isAstrixShown = props.isAstrixShown,
      rest = (0, _objectWithoutProperties2["default"])(props, _excluded);
  return /*#__PURE__*/_react["default"].createElement(_typography.Label, (0, _extends2["default"])({
    display: "block",
    marginBottom: 0
  }, rest, {
    ref: ref
  }), children, " ", isAstrixShown && /*#__PURE__*/_react["default"].createElement("span", {
    title: "This field is required."
  }, "*"));
}));
FormFieldLabel.propTypes = _objectSpread(_objectSpread({}, _typography.Label.propTypes), {}, {
  /**
   * Whether or not to show an asterix after the label.
   */
  isAstrixShown: _propTypes["default"].bool
});
var _default = FormFieldLabel;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9mb3JtLWZpZWxkL3NyYy9Gb3JtRmllbGRMYWJlbC5qcyJdLCJuYW1lcyI6WyJGb3JtRmllbGRMYWJlbCIsInByb3BzIiwicmVmIiwiY2hpbGRyZW4iLCJpc0FzdHJpeFNob3duIiwicmVzdCIsInByb3BUeXBlcyIsIkxhYmVsIiwiUHJvcFR5cGVzIiwiYm9vbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsY0FBYyxnQkFBRywrQkFDckIsdUJBQVcsU0FBU0EsY0FBVCxDQUF3QkMsS0FBeEIsRUFBK0JDLEdBQS9CLEVBQW9DO0FBQzdDLE1BQVFDLFFBQVIsR0FBNkNGLEtBQTdDLENBQVFFLFFBQVI7QUFBQSxNQUFrQkMsYUFBbEIsR0FBNkNILEtBQTdDLENBQWtCRyxhQUFsQjtBQUFBLE1BQW9DQyxJQUFwQyw2Q0FBNkNKLEtBQTdDO0FBQ0Esc0JBQ0UsZ0NBQUMsaUJBQUQ7QUFBTyxJQUFBLE9BQU8sRUFBQyxPQUFmO0FBQXVCLElBQUEsWUFBWSxFQUFFO0FBQXJDLEtBQTRDSSxJQUE1QztBQUFrRCxJQUFBLEdBQUcsRUFBRUg7QUFBdkQsTUFDR0MsUUFESCxPQUNjQyxhQUFhLGlCQUFJO0FBQU0sSUFBQSxLQUFLLEVBQUM7QUFBWixTQUQvQixDQURGO0FBS0QsQ0FQRCxDQURxQixDQUF2QjtBQVdBSixjQUFjLENBQUNNLFNBQWYsbUNBSUtDLGtCQUFNRCxTQUpYO0FBTUU7QUFDRjtBQUNBO0FBQ0VGLEVBQUFBLGFBQWEsRUFBRUksc0JBQVVDO0FBVDNCO2VBWWVULGMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgbWVtbywgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgTGFiZWwgfSBmcm9tICcuLi8uLi90eXBvZ3JhcGh5J1xuXG5jb25zdCBGb3JtRmllbGRMYWJlbCA9IG1lbW8oXG4gIGZvcndhcmRSZWYoZnVuY3Rpb24gRm9ybUZpZWxkTGFiZWwocHJvcHMsIHJlZikge1xuICAgIGNvbnN0IHsgY2hpbGRyZW4sIGlzQXN0cml4U2hvd24sIC4uLnJlc3QgfSA9IHByb3BzXG4gICAgcmV0dXJuIChcbiAgICAgIDxMYWJlbCBkaXNwbGF5PVwiYmxvY2tcIiBtYXJnaW5Cb3R0b209ezB9IHsuLi5yZXN0fSByZWY9e3JlZn0+XG4gICAgICAgIHtjaGlsZHJlbn0ge2lzQXN0cml4U2hvd24gJiYgPHNwYW4gdGl0bGU9XCJUaGlzIGZpZWxkIGlzIHJlcXVpcmVkLlwiPio8L3NwYW4+fVxuICAgICAgPC9MYWJlbD5cbiAgICApXG4gIH0pXG4pXG5cbkZvcm1GaWVsZExhYmVsLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIENvbXBvc2VzIHRoZSBMYWJlbCBjb21wb25lbnQgYXMgdGhlIGJhc2UuXG4gICAqL1xuICAuLi5MYWJlbC5wcm9wVHlwZXMsXG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgb3Igbm90IHRvIHNob3cgYW4gYXN0ZXJpeCBhZnRlciB0aGUgbGFiZWwuXG4gICAqL1xuICBpc0FzdHJpeFNob3duOiBQcm9wVHlwZXMuYm9vbFxufVxuXG5leHBvcnQgZGVmYXVsdCBGb3JtRmllbGRMYWJlbFxuIl19