"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = require("ui-box");

var _formField = require("../../form-field");

var _hooks = require("../../hooks");

var _Textarea = _interopRequireDefault(require("./Textarea"));

var _excluded = ["appearance", "description", "disabled", "hint", "id", "inputHeight", "inputWidth", "isInvalid", "label", "placeholder", "required", "spellCheck", "validationMessage"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var TextareaField = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function TextareaField(props, ref) {
  var id = (0, _hooks.useId)('TextareaField', props.id);
  var appearance = props.appearance,
      description = props.description,
      disabled = props.disabled,
      hint = props.hint,
      unusedId = props.id,
      _props$inputHeight = props.inputHeight,
      inputHeight = _props$inputHeight === void 0 ? 80 : _props$inputHeight,
      _props$inputWidth = props.inputWidth,
      inputWidth = _props$inputWidth === void 0 ? '100%' : _props$inputWidth,
      isInvalid = props.isInvalid,
      label = props.label,
      placeholder = props.placeholder,
      required = props.required,
      spellCheck = props.spellCheck,
      validationMessage = props.validationMessage,
      rest = (0, _objectWithoutProperties2["default"])(props, _excluded);
  /**
   * Split the wrapper props from the input props.
   */

  var _splitBoxProps = (0, _uiBox.splitBoxProps)(rest),
      matchedProps = _splitBoxProps.matchedProps,
      remainingProps = _splitBoxProps.remainingProps;

  return /*#__PURE__*/_react["default"].createElement(_formField.FormField, (0, _extends2["default"])({
    marginBottom: 24,
    label: label,
    isRequired: required,
    hint: hint,
    description: description,
    validationMessage: validationMessage,
    labelFor: id
  }, matchedProps), /*#__PURE__*/_react["default"].createElement(_Textarea["default"], (0, _extends2["default"])({
    id: id,
    ref: ref,
    width: inputWidth,
    height: inputHeight,
    disabled: disabled,
    required: required,
    isInvalid: isInvalid,
    appearance: appearance,
    placeholder: placeholder,
    spellCheck: spellCheck
  }, remainingProps)));
}));
TextareaField.propTypes = _objectSpread(_objectSpread(_objectSpread({}, _Textarea["default"].propTypes), _formField.FormField.propTypes), {}, {
  /**
   * The label used above the input element.
   */
  label: _propTypes["default"].node.isRequired,

  /**
   * Whether or not to show an asterix after the label.
   */
  required: _propTypes["default"].bool,

  /**
   * An optional description of the field under the label, above the input element.
   */
  description: _propTypes["default"].node,

  /**
   * An optional hint under the input element.
   */
  hint: _propTypes["default"].node,

  /**
   * If a validation message is passed it is shown under the input element
   * and above the hint. This is unaffected by `isInvalid`.
   */
  validationMessage: _propTypes["default"].node,

  /**
   * The height of the input element.
   */
  inputHeight: _propTypes["default"].number,

  /**
   * The width of the input width.
   */
  inputWidth: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])
});
var _default = TextareaField;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXh0YXJlYS9zcmMvVGV4dGFyZWFGaWVsZC5qcyJdLCJuYW1lcyI6WyJUZXh0YXJlYUZpZWxkIiwicHJvcHMiLCJyZWYiLCJpZCIsImFwcGVhcmFuY2UiLCJkZXNjcmlwdGlvbiIsImRpc2FibGVkIiwiaGludCIsInVudXNlZElkIiwiaW5wdXRIZWlnaHQiLCJpbnB1dFdpZHRoIiwiaXNJbnZhbGlkIiwibGFiZWwiLCJwbGFjZWhvbGRlciIsInJlcXVpcmVkIiwic3BlbGxDaGVjayIsInZhbGlkYXRpb25NZXNzYWdlIiwicmVzdCIsIm1hdGNoZWRQcm9wcyIsInJlbWFpbmluZ1Byb3BzIiwicHJvcFR5cGVzIiwiVGV4dGFyZWEiLCJGb3JtRmllbGQiLCJQcm9wVHlwZXMiLCJub2RlIiwiaXNSZXF1aXJlZCIsImJvb2wiLCJudW1iZXIiLCJvbmVPZlR5cGUiLCJzdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLGFBQWEsZ0JBQUcsK0JBQ3BCLHVCQUFXLFNBQVNBLGFBQVQsQ0FBdUJDLEtBQXZCLEVBQThCQyxHQUE5QixFQUFtQztBQUM1QyxNQUFNQyxFQUFFLEdBQUcsa0JBQU0sZUFBTixFQUF1QkYsS0FBSyxDQUFDRSxFQUE3QixDQUFYO0FBRUEsTUFFRUMsVUFGRixHQXVCSUgsS0F2QkosQ0FFRUcsVUFGRjtBQUFBLE1BS0VDLFdBTEYsR0F1QklKLEtBdkJKLENBS0VJLFdBTEY7QUFBQSxNQU1FQyxRQU5GLEdBdUJJTCxLQXZCSixDQU1FSyxRQU5GO0FBQUEsTUFPRUMsSUFQRixHQXVCSU4sS0F2QkosQ0FPRU0sSUFQRjtBQUFBLE1BUU1DLFFBUk4sR0F1QklQLEtBdkJKLENBUUVFLEVBUkY7QUFBQSwyQkF1QklGLEtBdkJKLENBV0VRLFdBWEY7QUFBQSxNQVdFQSxXQVhGLG1DQVdnQixFQVhoQjtBQUFBLDBCQXVCSVIsS0F2QkosQ0FhRVMsVUFiRjtBQUFBLE1BYUVBLFVBYkYsa0NBYWUsTUFiZjtBQUFBLE1BY0VDLFNBZEYsR0F1QklWLEtBdkJKLENBY0VVLFNBZEY7QUFBQSxNQWVFQyxLQWZGLEdBdUJJWCxLQXZCSixDQWVFVyxLQWZGO0FBQUEsTUFnQkVDLFdBaEJGLEdBdUJJWixLQXZCSixDQWdCRVksV0FoQkY7QUFBQSxNQWlCRUMsUUFqQkYsR0F1QkliLEtBdkJKLENBaUJFYSxRQWpCRjtBQUFBLE1Ba0JFQyxVQWxCRixHQXVCSWQsS0F2QkosQ0FrQkVjLFVBbEJGO0FBQUEsTUFtQkVDLGlCQW5CRixHQXVCSWYsS0F2QkosQ0FtQkVlLGlCQW5CRjtBQUFBLE1Bc0JLQyxJQXRCTCw2Q0F1QkloQixLQXZCSjtBQXlCQTtBQUNKO0FBQ0E7O0FBQ0ksdUJBQXlDLDBCQUFjZ0IsSUFBZCxDQUF6QztBQUFBLE1BQVFDLFlBQVIsa0JBQVFBLFlBQVI7QUFBQSxNQUFzQkMsY0FBdEIsa0JBQXNCQSxjQUF0Qjs7QUFFQSxzQkFDRSxnQ0FBQyxvQkFBRDtBQUNFLElBQUEsWUFBWSxFQUFFLEVBRGhCO0FBRUUsSUFBQSxLQUFLLEVBQUVQLEtBRlQ7QUFHRSxJQUFBLFVBQVUsRUFBRUUsUUFIZDtBQUlFLElBQUEsSUFBSSxFQUFFUCxJQUpSO0FBS0UsSUFBQSxXQUFXLEVBQUVGLFdBTGY7QUFNRSxJQUFBLGlCQUFpQixFQUFFVyxpQkFOckI7QUFPRSxJQUFBLFFBQVEsRUFBRWI7QUFQWixLQVFNZSxZQVJOLGdCQVVFLGdDQUFDLG9CQUFEO0FBQ0UsSUFBQSxFQUFFLEVBQUVmLEVBRE47QUFFRSxJQUFBLEdBQUcsRUFBRUQsR0FGUDtBQUdFLElBQUEsS0FBSyxFQUFFUSxVQUhUO0FBSUUsSUFBQSxNQUFNLEVBQUVELFdBSlY7QUFLRSxJQUFBLFFBQVEsRUFBRUgsUUFMWjtBQU1FLElBQUEsUUFBUSxFQUFFUSxRQU5aO0FBT0UsSUFBQSxTQUFTLEVBQUVILFNBUGI7QUFRRSxJQUFBLFVBQVUsRUFBRVAsVUFSZDtBQVNFLElBQUEsV0FBVyxFQUFFUyxXQVRmO0FBVUUsSUFBQSxVQUFVLEVBQUVFO0FBVmQsS0FXTUksY0FYTixFQVZGLENBREY7QUEwQkQsQ0EzREQsQ0FEb0IsQ0FBdEI7QUErREFuQixhQUFhLENBQUNvQixTQUFkLGlEQUlLQyxxQkFBU0QsU0FKZCxHQUtLRSxxQkFBVUYsU0FMZjtBQU9FO0FBQ0Y7QUFDQTtBQUNFUixFQUFBQSxLQUFLLEVBQUVXLHNCQUFVQyxJQUFWLENBQWVDLFVBVnhCOztBQVlFO0FBQ0Y7QUFDQTtBQUNFWCxFQUFBQSxRQUFRLEVBQUVTLHNCQUFVRyxJQWZ0Qjs7QUFpQkU7QUFDRjtBQUNBO0FBQ0VyQixFQUFBQSxXQUFXLEVBQUVrQixzQkFBVUMsSUFwQnpCOztBQXNCRTtBQUNGO0FBQ0E7QUFDRWpCLEVBQUFBLElBQUksRUFBRWdCLHNCQUFVQyxJQXpCbEI7O0FBMkJFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0VSLEVBQUFBLGlCQUFpQixFQUFFTyxzQkFBVUMsSUEvQi9COztBQWlDRTtBQUNGO0FBQ0E7QUFDRWYsRUFBQUEsV0FBVyxFQUFFYyxzQkFBVUksTUFwQ3pCOztBQXNDRTtBQUNGO0FBQ0E7QUFDRWpCLEVBQUFBLFVBQVUsRUFBRWEsc0JBQVVLLFNBQVYsQ0FBb0IsQ0FBQ0wsc0JBQVVJLE1BQVgsRUFBbUJKLHNCQUFVTSxNQUE3QixDQUFwQjtBQXpDZDtlQTRDZTdCLGEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgbWVtbywgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgc3BsaXRCb3hQcm9wcyB9IGZyb20gJ3VpLWJveCdcbmltcG9ydCB7IEZvcm1GaWVsZCB9IGZyb20gJy4uLy4uL2Zvcm0tZmllbGQnXG5pbXBvcnQgeyB1c2VJZCB9IGZyb20gJy4uLy4uL2hvb2tzJ1xuaW1wb3J0IFRleHRhcmVhIGZyb20gJy4vVGV4dGFyZWEnXG5cbmNvbnN0IFRleHRhcmVhRmllbGQgPSBtZW1vKFxuICBmb3J3YXJkUmVmKGZ1bmN0aW9uIFRleHRhcmVhRmllbGQocHJvcHMsIHJlZikge1xuICAgIGNvbnN0IGlkID0gdXNlSWQoJ1RleHRhcmVhRmllbGQnLCBwcm9wcy5pZClcblxuICAgIGNvbnN0IHtcbiAgICAgIC8vIFdlIGFyZSB1c2luZyB0aGUgaWQgZnJvbSB0aGUgc3RhdGVcbiAgICAgIGFwcGVhcmFuY2UsXG5cbiAgICAgIC8vIEZvcm1GaWVsZCBwcm9wc1xuICAgICAgZGVzY3JpcHRpb24sXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIGhpbnQsXG4gICAgICBpZDogdW51c2VkSWQsXG5cbiAgICAgIC8vIFRleHRhcmVhIHByb3BzXG4gICAgICBpbnB1dEhlaWdodCA9IDgwLFxuICAgICAgLyoqIFRoZSBpbnB1dCB3aWR0aCBzaG91bGQgYmUgYXMgd2lkZSBhcyB0aGUgZm9ybSBmaWVsZC4gKi9cbiAgICAgIGlucHV0V2lkdGggPSAnMTAwJScsXG4gICAgICBpc0ludmFsaWQsXG4gICAgICBsYWJlbCxcbiAgICAgIHBsYWNlaG9sZGVyLFxuICAgICAgcmVxdWlyZWQsXG4gICAgICBzcGVsbENoZWNrLFxuICAgICAgdmFsaWRhdGlvbk1lc3NhZ2UsXG5cbiAgICAgIC8vIFJlc3QgcHJvcHMgYXJlIHNwcmVhZCBvbiB0aGUgRm9ybUZpZWxkXG4gICAgICAuLi5yZXN0XG4gICAgfSA9IHByb3BzXG5cbiAgICAvKipcbiAgICAgKiBTcGxpdCB0aGUgd3JhcHBlciBwcm9wcyBmcm9tIHRoZSBpbnB1dCBwcm9wcy5cbiAgICAgKi9cbiAgICBjb25zdCB7IG1hdGNoZWRQcm9wcywgcmVtYWluaW5nUHJvcHMgfSA9IHNwbGl0Qm94UHJvcHMocmVzdClcblxuICAgIHJldHVybiAoXG4gICAgICA8Rm9ybUZpZWxkXG4gICAgICAgIG1hcmdpbkJvdHRvbT17MjR9XG4gICAgICAgIGxhYmVsPXtsYWJlbH1cbiAgICAgICAgaXNSZXF1aXJlZD17cmVxdWlyZWR9XG4gICAgICAgIGhpbnQ9e2hpbnR9XG4gICAgICAgIGRlc2NyaXB0aW9uPXtkZXNjcmlwdGlvbn1cbiAgICAgICAgdmFsaWRhdGlvbk1lc3NhZ2U9e3ZhbGlkYXRpb25NZXNzYWdlfVxuICAgICAgICBsYWJlbEZvcj17aWR9XG4gICAgICAgIHsuLi5tYXRjaGVkUHJvcHN9XG4gICAgICA+XG4gICAgICAgIDxUZXh0YXJlYVxuICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICB3aWR0aD17aW5wdXRXaWR0aH1cbiAgICAgICAgICBoZWlnaHQ9e2lucHV0SGVpZ2h0fVxuICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgICByZXF1aXJlZD17cmVxdWlyZWR9XG4gICAgICAgICAgaXNJbnZhbGlkPXtpc0ludmFsaWR9XG4gICAgICAgICAgYXBwZWFyYW5jZT17YXBwZWFyYW5jZX1cbiAgICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XG4gICAgICAgICAgc3BlbGxDaGVjaz17c3BlbGxDaGVja31cbiAgICAgICAgICB7Li4ucmVtYWluaW5nUHJvcHN9XG4gICAgICAgIC8+XG4gICAgICA8L0Zvcm1GaWVsZD5cbiAgICApXG4gIH0pXG4pXG5cblRleHRhcmVhRmllbGQucHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogQ29tcG9zZXMgdGhlIFRleHRhcmVhIGNvbXBvbmVudCBhcyB0aGUgYmFzZS5cbiAgICovXG4gIC4uLlRleHRhcmVhLnByb3BUeXBlcyxcbiAgLi4uRm9ybUZpZWxkLnByb3BUeXBlcyxcblxuICAvKipcbiAgICogVGhlIGxhYmVsIHVzZWQgYWJvdmUgdGhlIGlucHV0IGVsZW1lbnQuXG4gICAqL1xuICBsYWJlbDogUHJvcFR5cGVzLm5vZGUuaXNSZXF1aXJlZCxcblxuICAvKipcbiAgICogV2hldGhlciBvciBub3QgdG8gc2hvdyBhbiBhc3Rlcml4IGFmdGVyIHRoZSBsYWJlbC5cbiAgICovXG4gIHJlcXVpcmVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogQW4gb3B0aW9uYWwgZGVzY3JpcHRpb24gb2YgdGhlIGZpZWxkIHVuZGVyIHRoZSBsYWJlbCwgYWJvdmUgdGhlIGlucHV0IGVsZW1lbnQuXG4gICAqL1xuICBkZXNjcmlwdGlvbjogUHJvcFR5cGVzLm5vZGUsXG5cbiAgLyoqXG4gICAqIEFuIG9wdGlvbmFsIGhpbnQgdW5kZXIgdGhlIGlucHV0IGVsZW1lbnQuXG4gICAqL1xuICBoaW50OiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogSWYgYSB2YWxpZGF0aW9uIG1lc3NhZ2UgaXMgcGFzc2VkIGl0IGlzIHNob3duIHVuZGVyIHRoZSBpbnB1dCBlbGVtZW50XG4gICAqIGFuZCBhYm92ZSB0aGUgaGludC4gVGhpcyBpcyB1bmFmZmVjdGVkIGJ5IGBpc0ludmFsaWRgLlxuICAgKi9cbiAgdmFsaWRhdGlvbk1lc3NhZ2U6IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBUaGUgaGVpZ2h0IG9mIHRoZSBpbnB1dCBlbGVtZW50LlxuICAgKi9cbiAgaW5wdXRIZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgLyoqXG4gICAqIFRoZSB3aWR0aCBvZiB0aGUgaW5wdXQgd2lkdGguXG4gICAqL1xuICBpbnB1dFdpZHRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGV4dGFyZWFGaWVsZFxuIl19