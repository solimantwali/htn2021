"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _glamor = require("glamor");

var _lodash = _interopRequireDefault(require("lodash.debounce"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _constants = require("../../constants");

var _hooks = require("../../hooks");

var _positioner = require("../../positioner");

var _TooltipStateless = _interopRequireDefault(require("./TooltipStateless"));

var _excluded = ["getTargetRef", "isShown"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var emptyProps = {};
var Tooltip = /*#__PURE__*/(0, _react.memo)(function Tooltip(props) {
  var _props$appearance = props.appearance,
      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,
      _props$position = props.position,
      position = _props$position === void 0 ? _constants.Position.BOTTOM : _props$position,
      content = props.content,
      _props$hideDelay = props.hideDelay,
      hideDelay = _props$hideDelay === void 0 ? 120 : _props$hideDelay,
      _props$showDelay = props.showDelay,
      showDelay = _props$showDelay === void 0 ? 0 : _props$showDelay,
      propIsShown = props.isShown,
      children = props.children,
      _props$statelessProps = props.statelessProps,
      statelessProps = _props$statelessProps === void 0 ? emptyProps : _props$statelessProps;
  var id = (0, _hooks.useId)('evergreen-tooltip');

  var _useState = (0, _react.useState)(propIsShown || false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      isShown = _useState2[0],
      setIsShown = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      isShownByTarget = _useState4[0],
      setIsShownByTarget = _useState4[1];

  var closeTimer = (0, _react.useRef)(undefined);

  var mouseLeftTarget = function mouseLeftTarget() {
    setIsShownByTarget(false);
  };

  var handleMouseLeaveTarget = (0, _lodash["default"])(mouseLeftTarget, hideDelay);

  var hide = function hide() {
    setIsShown(false); // Clean up any timeouts that may have been triggered from `showDelay`

    clearTimeout(closeTimer.current);
  };

  var handleHide = (0, _lodash["default"])(hide, hideDelay); // Component will unmount

  (0, _react.useEffect)(function () {
    return function () {
      clearTimeout(closeTimer.current);
    };
  }, []);

  var show = function show() {
    if (isShown) return;

    if (!showDelay) {
      setIsShown(true);
      return;
    }

    clearTimeout(closeTimer.current);
    closeTimer.current = setTimeout(function () {
      setIsShown(true);
    }, showDelay);
  };

  var renderTarget = function renderTarget(_ref) {
    var getRef = _ref.getRef;
    var tooltipTargetProps = {
      onMouseEnter: show,
      onMouseLeave: handleHide,
      'aria-describedby': id
    };
    /**
     * Tooltips can be used within a Popover (not the other way around)
     * When a Tooltip is used within a Popover, the Popover passes
     * its props to the Tooltip in a `popoverProps` object.
     */
    // eslint-disable-next-line react/prop-types

    if (props.popoverProps) {
      var _props$popoverProps = props.popoverProps,
          getTargetRef = _props$popoverProps.getTargetRef,
          _isShown = _props$popoverProps.isShown,
          popoverTargetProps = (0, _objectWithoutProperties2["default"])(_props$popoverProps, _excluded);
      return /*#__PURE__*/_react["default"].cloneElement(children, _objectSpread(_objectSpread(_objectSpread({}, popoverTargetProps), tooltipTargetProps), {}, {
        ref: function ref(_ref2) {
          // Get the ref for the Tooltip.
          getRef(_ref2); // Pass the ref to the Popover.

          getTargetRef(_ref2);
        }
      }));
    }
    /**
     * With normal usage only the props for a Tooltip are passed to the target.
     */


    return /*#__PURE__*/_react["default"].cloneElement(children, _objectSpread(_objectSpread({}, tooltipTargetProps), {}, {
      ref: function ref(_ref3) {
        getRef(_ref3);
      }
    }));
  }; // eslint-disable-next-line react/prop-types


  var isPopoverShown = function isPopoverShown() {
    return props.popoverProps && props.popoverProps.isShown;
  };

  var handleMouseEnterTarget = function handleMouseEnterTarget() {
    setIsShownByTarget(true);
  };

  var shown = (propIsShown || isShown || isShownByTarget) && !isPopoverShown(); // Tooltip was explicitly set to not be shown

  if (propIsShown === false) {
    shown = false;
  }

  return /*#__PURE__*/_react["default"].createElement(_positioner.Positioner, {
    target: renderTarget,
    isShown: shown,
    position: position,
    animationDuration: 160
  }, function (_ref4) {
    var css = _ref4.css,
        getRef = _ref4.getRef,
        state = _ref4.state,
        style = _ref4.style;
    return /*#__PURE__*/_react["default"].createElement(_TooltipStateless["default"], (0, _extends2["default"])({
      id: id,
      appearance: appearance,
      ref: getRef,
      "data-state": state,
      style: style,
      onMouseEnter: handleMouseEnterTarget,
      onMouseLeave: handleMouseLeaveTarget
    }, statelessProps, {
      className: (0, _classnames["default"])(statelessProps.className, css ? (0, _glamor.css)(css).toString() : undefined)
    }), content);
  });
});
Tooltip.propTypes = {
  /**
   * The appearance of the tooltip.
   */
  appearance: _propTypes["default"].oneOf(['default', 'card']),

  /**
   * The position the Popover is on.
   */
  position: _propTypes["default"].oneOf([_constants.Position.TOP, _constants.Position.TOP_LEFT, _constants.Position.TOP_RIGHT, _constants.Position.BOTTOM, _constants.Position.BOTTOM_LEFT, _constants.Position.BOTTOM_RIGHT, _constants.Position.LEFT, _constants.Position.RIGHT]),

  /**
   * The content of the Popover.
   */
  content: _propTypes["default"].node,

  /**
   * Time in ms before hiding the Tooltip.
   */
  hideDelay: _propTypes["default"].number,

  /**
   * Time in ms before showing the Tooltip.
   */
  showDelay: _propTypes["default"].number,

  /**
   * When True, manually show the Tooltip.
   */
  isShown: _propTypes["default"].bool,

  /**
   * The target button of the Tooltip.
   */
  children: _propTypes["default"].node,

  /**
   * Properties passed through to the Tooltip.
   */
  statelessProps: _propTypes["default"].object
};
var _default = Tooltip;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90b29sdGlwL3NyYy9Ub29sdGlwLmpzIl0sIm5hbWVzIjpbImVtcHR5UHJvcHMiLCJUb29sdGlwIiwicHJvcHMiLCJhcHBlYXJhbmNlIiwicG9zaXRpb24iLCJQb3NpdGlvbiIsIkJPVFRPTSIsImNvbnRlbnQiLCJoaWRlRGVsYXkiLCJzaG93RGVsYXkiLCJwcm9wSXNTaG93biIsImlzU2hvd24iLCJjaGlsZHJlbiIsInN0YXRlbGVzc1Byb3BzIiwiaWQiLCJzZXRJc1Nob3duIiwiaXNTaG93bkJ5VGFyZ2V0Iiwic2V0SXNTaG93bkJ5VGFyZ2V0IiwiY2xvc2VUaW1lciIsInVuZGVmaW5lZCIsIm1vdXNlTGVmdFRhcmdldCIsImhhbmRsZU1vdXNlTGVhdmVUYXJnZXQiLCJoaWRlIiwiY2xlYXJUaW1lb3V0IiwiY3VycmVudCIsImhhbmRsZUhpZGUiLCJzaG93Iiwic2V0VGltZW91dCIsInJlbmRlclRhcmdldCIsImdldFJlZiIsInRvb2x0aXBUYXJnZXRQcm9wcyIsIm9uTW91c2VFbnRlciIsIm9uTW91c2VMZWF2ZSIsInBvcG92ZXJQcm9wcyIsImdldFRhcmdldFJlZiIsInBvcG92ZXJUYXJnZXRQcm9wcyIsIlJlYWN0IiwiY2xvbmVFbGVtZW50IiwicmVmIiwiaXNQb3BvdmVyU2hvd24iLCJoYW5kbGVNb3VzZUVudGVyVGFyZ2V0Iiwic2hvd24iLCJjc3MiLCJzdGF0ZSIsInN0eWxlIiwiY2xhc3NOYW1lIiwidG9TdHJpbmciLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJvbmVPZiIsIlRPUCIsIlRPUF9MRUZUIiwiVE9QX1JJR0hUIiwiQk9UVE9NX0xFRlQiLCJCT1RUT01fUklHSFQiLCJMRUZUIiwiUklHSFQiLCJub2RlIiwibnVtYmVyIiwiYm9vbCIsIm9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7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VVMsSUF2QkQ7O0FBeUJsQjtBQUNGO0FBQ0E7QUFDRWpELEVBQUFBLFNBQVMsRUFBRXdDLHNCQUFVVSxNQTVCSDs7QUE4QmxCO0FBQ0Y7QUFDQTtBQUNFakQsRUFBQUEsU0FBUyxFQUFFdUMsc0JBQVVVLE1BakNIOztBQW1DbEI7QUFDRjtBQUNBO0FBQ0UvQyxFQUFBQSxPQUFPLEVBQUVxQyxzQkFBVVcsSUF0Q0Q7O0FBd0NsQjtBQUNGO0FBQ0E7QUFDRS9DLEVBQUFBLFFBQVEsRUFBRW9DLHNCQUFVUyxJQTNDRjs7QUE2Q2xCO0FBQ0Y7QUFDQTtBQUNFNUMsRUFBQUEsY0FBYyxFQUFFbUMsc0JBQVVZO0FBaERSLENBQXBCO2VBbURlM0QsTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBtZW1vLCB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBjeCBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IHsgY3NzIGFzIGdsYW1vckNzcyB9IGZyb20gJ2dsYW1vcidcbmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2guZGVib3VuY2UnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBQb3NpdGlvbiB9IGZyb20gJy4uLy4uL2NvbnN0YW50cydcbmltcG9ydCB7IHVzZUlkIH0gZnJvbSAnLi4vLi4vaG9va3MnXG5pbXBvcnQgeyBQb3NpdGlvbmVyIH0gZnJvbSAnLi4vLi4vcG9zaXRpb25lcidcbmltcG9ydCBUb29sdGlwU3RhdGVsZXNzIGZyb20gJy4vVG9vbHRpcFN0YXRlbGVzcydcblxuY29uc3QgZW1wdHlQcm9wcyA9IHt9XG5cbmNvbnN0IFRvb2x0aXAgPSBtZW1vKGZ1bmN0aW9uIFRvb2x0aXAocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgIGFwcGVhcmFuY2UgPSAnZGVmYXVsdCcsXG4gICAgcG9zaXRpb24gPSBQb3NpdGlvbi5CT1RUT00sXG4gICAgY29udGVudCxcbiAgICBoaWRlRGVsYXkgPSAxMjAsXG4gICAgc2hvd0RlbGF5ID0gMCxcbiAgICBpc1Nob3duOiBwcm9wSXNTaG93bixcbiAgICBjaGlsZHJlbixcbiAgICBzdGF0ZWxlc3NQcm9wcyA9IGVtcHR5UHJvcHNcbiAgfSA9IHByb3BzXG5cbiAgY29uc3QgaWQgPSB1c2VJZCgnZXZlcmdyZWVuLXRvb2x0aXAnKVxuICBjb25zdCBbaXNTaG93biwgc2V0SXNTaG93bl0gPSB1c2VTdGF0ZShwcm9wSXNTaG93biB8fCBmYWxzZSlcbiAgY29uc3QgW2lzU2hvd25CeVRhcmdldCwgc2V0SXNTaG93bkJ5VGFyZ2V0XSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBjbG9zZVRpbWVyID0gdXNlUmVmKHVuZGVmaW5lZClcblxuICBjb25zdCBtb3VzZUxlZnRUYXJnZXQgPSAoKSA9PiB7XG4gICAgc2V0SXNTaG93bkJ5VGFyZ2V0KGZhbHNlKVxuICB9XG5cbiAgY29uc3QgaGFuZGxlTW91c2VMZWF2ZVRhcmdldCA9IGRlYm91bmNlKG1vdXNlTGVmdFRhcmdldCwgaGlkZURlbGF5KVxuXG4gIGNvbnN0IGhpZGUgPSAoKSA9PiB7XG4gICAgc2V0SXNTaG93bihmYWxzZSlcbiAgICAvLyBDbGVhbiB1cCBhbnkgdGltZW91dHMgdGhhdCBtYXkgaGF2ZSBiZWVuIHRyaWdnZXJlZCBmcm9tIGBzaG93RGVsYXlgXG4gICAgY2xlYXJUaW1lb3V0KGNsb3NlVGltZXIuY3VycmVudClcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZUhpZGUgPSBkZWJvdW5jZShoaWRlLCBoaWRlRGVsYXkpXG5cbiAgLy8gQ29tcG9uZW50IHdpbGwgdW5tb3VudFxuICB1c2VFZmZlY3QoXG4gICAgKCkgPT4gKCkgPT4ge1xuICAgICAgY2xlYXJUaW1lb3V0KGNsb3NlVGltZXIuY3VycmVudClcbiAgICB9LFxuICAgIFtdXG4gIClcblxuICBjb25zdCBzaG93ID0gKCkgPT4ge1xuICAgIGlmIChpc1Nob3duKSByZXR1cm5cblxuICAgIGlmICghc2hvd0RlbGF5KSB7XG4gICAgICBzZXRJc1Nob3duKHRydWUpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjbGVhclRpbWVvdXQoY2xvc2VUaW1lci5jdXJyZW50KVxuICAgIGNsb3NlVGltZXIuY3VycmVudCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgc2V0SXNTaG93bih0cnVlKVxuICAgIH0sIHNob3dEZWxheSlcbiAgfVxuXG4gIGNvbnN0IHJlbmRlclRhcmdldCA9ICh7IGdldFJlZiB9KSA9PiB7XG4gICAgY29uc3QgdG9vbHRpcFRhcmdldFByb3BzID0ge1xuICAgICAgb25Nb3VzZUVudGVyOiBzaG93LFxuICAgICAgb25Nb3VzZUxlYXZlOiBoYW5kbGVIaWRlLFxuICAgICAgJ2FyaWEtZGVzY3JpYmVkYnknOiBpZFxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRvb2x0aXBzIGNhbiBiZSB1c2VkIHdpdGhpbiBhIFBvcG92ZXIgKG5vdCB0aGUgb3RoZXIgd2F5IGFyb3VuZClcbiAgICAgKiBXaGVuIGEgVG9vbHRpcCBpcyB1c2VkIHdpdGhpbiBhIFBvcG92ZXIsIHRoZSBQb3BvdmVyIHBhc3Nlc1xuICAgICAqIGl0cyBwcm9wcyB0byB0aGUgVG9vbHRpcCBpbiBhIGBwb3BvdmVyUHJvcHNgIG9iamVjdC5cbiAgICAgKi9cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvcHJvcC10eXBlc1xuICAgIGlmIChwcm9wcy5wb3BvdmVyUHJvcHMpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3Byb3AtdHlwZXNcbiAgICAgICAgZ2V0VGFyZ2V0UmVmLFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvcHJvcC10eXBlc1xuICAgICAgICBpc1Nob3duLFxuICAgICAgICAuLi5wb3BvdmVyVGFyZ2V0UHJvcHNcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3Byb3AtdHlwZXNcbiAgICAgIH0gPSBwcm9wcy5wb3BvdmVyUHJvcHNcblxuICAgICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZHJlbiwge1xuICAgICAgICAvLyBBZGQgdGhlIFBvcG92ZXIgcHJvcHMgdG8gdGhlIHRhcmdldC5cbiAgICAgICAgLi4ucG9wb3ZlclRhcmdldFByb3BzLFxuICAgICAgICAvLyBBZGQgdGhlIFRvb2x0aXAgcHJvcHMgdG8gdGhlIHRhcmdldC5cbiAgICAgICAgLi4udG9vbHRpcFRhcmdldFByb3BzLFxuXG4gICAgICAgIHJlZjogcmVmID0+IHtcbiAgICAgICAgICAvLyBHZXQgdGhlIHJlZiBmb3IgdGhlIFRvb2x0aXAuXG4gICAgICAgICAgZ2V0UmVmKHJlZilcbiAgICAgICAgICAvLyBQYXNzIHRoZSByZWYgdG8gdGhlIFBvcG92ZXIuXG4gICAgICAgICAgZ2V0VGFyZ2V0UmVmKHJlZilcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXaXRoIG5vcm1hbCB1c2FnZSBvbmx5IHRoZSBwcm9wcyBmb3IgYSBUb29sdGlwIGFyZSBwYXNzZWQgdG8gdGhlIHRhcmdldC5cbiAgICAgKi9cbiAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkcmVuLCB7XG4gICAgICAuLi50b29sdGlwVGFyZ2V0UHJvcHMsXG4gICAgICByZWY6IHJlZiA9PiB7XG4gICAgICAgIGdldFJlZihyZWYpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9wcm9wLXR5cGVzXG4gIGNvbnN0IGlzUG9wb3ZlclNob3duID0gKCkgPT4gcHJvcHMucG9wb3ZlclByb3BzICYmIHByb3BzLnBvcG92ZXJQcm9wcy5pc1Nob3duXG5cbiAgY29uc3QgaGFuZGxlTW91c2VFbnRlclRhcmdldCA9ICgpID0+IHtcbiAgICBzZXRJc1Nob3duQnlUYXJnZXQodHJ1ZSlcbiAgfVxuXG4gIGxldCBzaG93biA9IChwcm9wSXNTaG93biB8fCBpc1Nob3duIHx8IGlzU2hvd25CeVRhcmdldCkgJiYgIWlzUG9wb3ZlclNob3duKClcblxuICAvLyBUb29sdGlwIHdhcyBleHBsaWNpdGx5IHNldCB0byBub3QgYmUgc2hvd25cbiAgaWYgKHByb3BJc1Nob3duID09PSBmYWxzZSkge1xuICAgIHNob3duID0gZmFsc2VcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPFBvc2l0aW9uZXIgdGFyZ2V0PXtyZW5kZXJUYXJnZXR9IGlzU2hvd249e3Nob3dufSBwb3NpdGlvbj17cG9zaXRpb259IGFuaW1hdGlvbkR1cmF0aW9uPXsxNjB9PlxuICAgICAgeyh7IGNzcywgZ2V0UmVmLCBzdGF0ZSwgc3R5bGUgfSkgPT4gKFxuICAgICAgICA8VG9vbHRpcFN0YXRlbGVzc1xuICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICBhcHBlYXJhbmNlPXthcHBlYXJhbmNlfVxuICAgICAgICAgIHJlZj17Z2V0UmVmfVxuICAgICAgICAgIGRhdGEtc3RhdGU9e3N0YXRlfVxuICAgICAgICAgIHN0eWxlPXtzdHlsZX1cbiAgICAgICAgICBvbk1vdXNlRW50ZXI9e2hhbmRsZU1vdXNlRW50ZXJUYXJnZXR9XG4gICAgICAgICAgb25Nb3VzZUxlYXZlPXtoYW5kbGVNb3VzZUxlYXZlVGFyZ2V0fVxuICAgICAgICAgIHsuLi5zdGF0ZWxlc3NQcm9wc31cbiAgICAgICAgICBjbGFzc05hbWU9e2N4KHN0YXRlbGVzc1Byb3BzLmNsYXNzTmFtZSwgY3NzID8gZ2xhbW9yQ3NzKGNzcykudG9TdHJpbmcoKSA6IHVuZGVmaW5lZCl9XG4gICAgICAgID5cbiAgICAgICAgICB7Y29udGVudH1cbiAgICAgICAgPC9Ub29sdGlwU3RhdGVsZXNzPlxuICAgICAgKX1cbiAgICA8L1Bvc2l0aW9uZXI+XG4gIClcbn0pXG5cblRvb2x0aXAucHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIHRvb2x0aXAuXG4gICAqL1xuICBhcHBlYXJhbmNlOiBQcm9wVHlwZXMub25lT2YoWydkZWZhdWx0JywgJ2NhcmQnXSksXG5cbiAgLyoqXG4gICAqIFRoZSBwb3NpdGlvbiB0aGUgUG9wb3ZlciBpcyBvbi5cbiAgICovXG4gIHBvc2l0aW9uOiBQcm9wVHlwZXMub25lT2YoW1xuICAgIFBvc2l0aW9uLlRPUCxcbiAgICBQb3NpdGlvbi5UT1BfTEVGVCxcbiAgICBQb3NpdGlvbi5UT1BfUklHSFQsXG4gICAgUG9zaXRpb24uQk9UVE9NLFxuICAgIFBvc2l0aW9uLkJPVFRPTV9MRUZULFxuICAgIFBvc2l0aW9uLkJPVFRPTV9SSUdIVCxcbiAgICBQb3NpdGlvbi5MRUZULFxuICAgIFBvc2l0aW9uLlJJR0hUXG4gIF0pLFxuXG4gIC8qKlxuICAgKiBUaGUgY29udGVudCBvZiB0aGUgUG9wb3Zlci5cbiAgICovXG4gIGNvbnRlbnQ6IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBUaW1lIGluIG1zIGJlZm9yZSBoaWRpbmcgdGhlIFRvb2x0aXAuXG4gICAqL1xuICBoaWRlRGVsYXk6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgLyoqXG4gICAqIFRpbWUgaW4gbXMgYmVmb3JlIHNob3dpbmcgdGhlIFRvb2x0aXAuXG4gICAqL1xuICBzaG93RGVsYXk6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgLyoqXG4gICAqIFdoZW4gVHJ1ZSwgbWFudWFsbHkgc2hvdyB0aGUgVG9vbHRpcC5cbiAgICovXG4gIGlzU2hvd246IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBUaGUgdGFyZ2V0IGJ1dHRvbiBvZiB0aGUgVG9vbHRpcC5cbiAgICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogUHJvcGVydGllcyBwYXNzZWQgdGhyb3VnaCB0byB0aGUgVG9vbHRpcC5cbiAgICovXG4gIHN0YXRlbGVzc1Byb3BzOiBQcm9wVHlwZXMub2JqZWN0XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRvb2x0aXBcbiJdfQ==