"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = _interopRequireDefault(require("ui-box"));

var _hooks = require("../../hooks");

var _excluded = ["activeElevation", "background", "border", "borderBottom", "borderLeft", "borderRight", "borderTop", "className", "elevation", "hoverElevation"],
    _excluded2 = ["className"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var pseudoSelectors = {
  _hover: '&:hover',
  _active: '&:active'
};
var internalStyles = {};
var Pane = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function Pane(props, ref) {
  var activeElevation = props.activeElevation,
      background = props.background,
      border = props.border,
      borderBottom = props.borderBottom,
      borderLeft = props.borderLeft,
      borderRight = props.borderRight,
      borderTop = props.borderTop,
      className = props.className,
      elevation = props.elevation,
      hoverElevation = props.hoverElevation,
      restProps = (0, _objectWithoutProperties2["default"])(props, _excluded);

  var _useStyleConfig = (0, _hooks.useStyleConfig)('Pane', {
    elevation: elevation,
    hoverElevation: hoverElevation,
    activeElevation: activeElevation,
    background: background,
    border: border,
    borderTop: borderTop,
    borderRight: borderRight,
    borderBottom: borderBottom,
    borderLeft: borderLeft
  }, pseudoSelectors, internalStyles),
      themedClassName = _useStyleConfig.className,
      styleProps = (0, _objectWithoutProperties2["default"])(_useStyleConfig, _excluded2);

  return /*#__PURE__*/_react["default"].createElement(_uiBox["default"], (0, _extends2["default"])({
    ref: ref,
    className: (0, _classnames["default"])(className, themedClassName)
  }, styleProps, restProps));
}));

var StringAndBoolPropType = _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].bool]);

Pane.propTypes = _objectSpread(_objectSpread({}, _uiBox["default"].propTypes), {}, {
  /**
   * Background property.
   * `tint1`, `tint2` etc. from `theme.colors` are available.
   */
  background: _propTypes["default"].string,

  /**
   * Elevation of the Pane.
   * Values: 0, 1, 2, 3, 4.
   */
  elevation: _propTypes["default"].oneOf([0, 1, 2, 3, 4]),

  /**
   * Elevation of the Pane on hover. Might get deprecated.
   * Values: 0, 1, 2, 3, 4.
   */
  hoverElevation: _propTypes["default"].oneOf([0, 1, 2, 3, 4]),

  /**
   * Elevation of the Pane on click. Might get deprecated.
   * Values: 0, 1, 2, 3, 4.
   */
  activeElevation: _propTypes["default"].oneOf([0, 1, 2, 3, 4]),

  /**
   * Can be a explicit border value or a boolean.
   * Values: true, muted, default.
   */
  border: StringAndBoolPropType,

  /**
   * Can be a explicit border value or a boolean.
   * Values: true, extraMuted, muted, default.
   */
  borderTop: StringAndBoolPropType,

  /**
   * Can be a explicit border value or a boolean.
   * Values: true, extraMuted, muted, default.
   */
  borderRight: StringAndBoolPropType,

  /**
   * Can be a explicit border value or a boolean.
   * Values: true, extraMuted, muted, default.
   */
  borderBottom: StringAndBoolPropType,

  /**
   * Can be a explicit border value or a boolean.
   * Values: true, extraMuted, muted, default.
   */
  borderLeft: StringAndBoolPropType
});
var _default = Pane;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sYXllcnMvc3JjL1BhbmUuanMiXSwibmFtZXMiOlsicHNldWRvU2VsZWN0b3JzIiwiX2hvdmVyIiwiX2FjdGl2ZSIsImludGVybmFsU3R5bGVzIiwiUGFuZSIsInByb3BzIiwicmVmIiwiYWN0aXZlRWxldmF0aW9uIiwiYmFja2dyb3VuZCIsImJvcmRlciIsImJvcmRlckJvdHRvbSIsImJvcmRlckxlZnQiLCJib3JkZXJSaWdodCIsImJvcmRlclRvcCIsImNsYXNzTmFtZSIsImVsZXZhdGlvbiIsImhvdmVyRWxldmF0aW9uIiwicmVzdFByb3BzIiwidGhlbWVkQ2xhc3NOYW1lIiwic3R5bGVQcm9wcyIsIlN0cmluZ0FuZEJvb2xQcm9wVHlwZSIsIlByb3BUeXBlcyIsIm9uZU9mVHlwZSIsInN0cmluZyIsImJvb2wiLCJwcm9wVHlwZXMiLCJCb3giLCJvbmVPZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLGVBQWUsR0FBRztBQUN0QkMsRUFBQUEsTUFBTSxFQUFFLFNBRGM7QUFFdEJDLEVBQUFBLE9BQU8sRUFBRTtBQUZhLENBQXhCO0FBS0EsSUFBTUMsY0FBYyxHQUFHLEVBQXZCO0FBRUEsSUFBTUMsSUFBSSxnQkFBRywrQkFDWCx1QkFBVyxTQUFTQSxJQUFULENBQWNDLEtBQWQsRUFBcUJDLEdBQXJCLEVBQTBCO0FBQ25DLE1BQ0VDLGVBREYsR0FlSUYsS0FmSixDQUNFRSxlQURGO0FBQUEsTUFJRUMsVUFKRixHQWVJSCxLQWZKLENBSUVHLFVBSkY7QUFBQSxNQUtFQyxNQUxGLEdBZUlKLEtBZkosQ0FLRUksTUFMRjtBQUFBLE1BTUVDLFlBTkYsR0FlSUwsS0FmSixDQU1FSyxZQU5GO0FBQUEsTUFPRUMsVUFQRixHQWVJTixLQWZKLENBT0VNLFVBUEY7QUFBQSxNQVFFQyxXQVJGLEdBZUlQLEtBZkosQ0FRRU8sV0FSRjtBQUFBLE1BU0VDLFNBVEYsR0FlSVIsS0FmSixDQVNFUSxTQVRGO0FBQUEsTUFVRUMsU0FWRixHQWVJVCxLQWZKLENBVUVTLFNBVkY7QUFBQSxNQVdFQyxTQVhGLEdBZUlWLEtBZkosQ0FXRVUsU0FYRjtBQUFBLE1BWUVDLGNBWkYsR0FlSVgsS0FmSixDQVlFVyxjQVpGO0FBQUEsTUFjS0MsU0FkTCw2Q0FlSVosS0FmSjs7QUFpQkEsd0JBQXNELDJCQUNwRCxNQURvRCxFQUVwRDtBQUNFVSxJQUFBQSxTQUFTLEVBQVRBLFNBREY7QUFFRUMsSUFBQUEsY0FBYyxFQUFkQSxjQUZGO0FBR0VULElBQUFBLGVBQWUsRUFBZkEsZUFIRjtBQUlFQyxJQUFBQSxVQUFVLEVBQVZBLFVBSkY7QUFLRUMsSUFBQUEsTUFBTSxFQUFOQSxNQUxGO0FBTUVJLElBQUFBLFNBQVMsRUFBVEEsU0FORjtBQU9FRCxJQUFBQSxXQUFXLEVBQVhBLFdBUEY7QUFRRUYsSUFBQUEsWUFBWSxFQUFaQSxZQVJGO0FBU0VDLElBQUFBLFVBQVUsRUFBVkE7QUFURixHQUZvRCxFQWFwRFgsZUFib0QsRUFjcERHLGNBZG9ELENBQXREO0FBQUEsTUFBbUJlLGVBQW5CLG1CQUFRSixTQUFSO0FBQUEsTUFBdUNLLFVBQXZDOztBQWlCQSxzQkFBTyxnQ0FBQyxpQkFBRDtBQUFLLElBQUEsR0FBRyxFQUFFYixHQUFWO0FBQWUsSUFBQSxTQUFTLEVBQUUsNEJBQUdRLFNBQUgsRUFBY0ksZUFBZDtBQUExQixLQUE4REMsVUFBOUQsRUFBOEVGLFNBQTlFLEVBQVA7QUFDRCxDQXBDRCxDQURXLENBQWI7O0FBd0NBLElBQU1HLHFCQUFxQixHQUFHQyxzQkFBVUMsU0FBVixDQUFvQixDQUFDRCxzQkFBVUUsTUFBWCxFQUFtQkYsc0JBQVVHLElBQTdCLENBQXBCLENBQTlCOztBQUVBcEIsSUFBSSxDQUFDcUIsU0FBTCxtQ0FJS0Msa0JBQUlELFNBSlQ7QUFNRTtBQUNGO0FBQ0E7QUFDQTtBQUNFakIsRUFBQUEsVUFBVSxFQUFFYSxzQkFBVUUsTUFWeEI7O0FBWUU7QUFDRjtBQUNBO0FBQ0E7QUFDRVIsRUFBQUEsU0FBUyxFQUFFTSxzQkFBVU0sS0FBVixDQUFnQixDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLENBQWhCLENBaEJiOztBQWtCRTtBQUNGO0FBQ0E7QUFDQTtBQUNFWCxFQUFBQSxjQUFjLEVBQUVLLHNCQUFVTSxLQUFWLENBQWdCLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQVUsQ0FBVixFQUFhLENBQWIsQ0FBaEIsQ0F0QmxCOztBQXdCRTtBQUNGO0FBQ0E7QUFDQTtBQUNFcEIsRUFBQUEsZUFBZSxFQUFFYyxzQkFBVU0sS0FBVixDQUFnQixDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLENBQWhCLENBNUJuQjs7QUE4QkU7QUFDRjtBQUNBO0FBQ0E7QUFDRWxCLEVBQUFBLE1BQU0sRUFBRVcscUJBbENWOztBQW9DRTtBQUNGO0FBQ0E7QUFDQTtBQUNFUCxFQUFBQSxTQUFTLEVBQUVPLHFCQXhDYjs7QUEwQ0U7QUFDRjtBQUNBO0FBQ0E7QUFDRVIsRUFBQUEsV0FBVyxFQUFFUSxxQkE5Q2Y7O0FBZ0RFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0VWLEVBQUFBLFlBQVksRUFBRVUscUJBcERoQjs7QUFzREU7QUFDRjtBQUNBO0FBQ0E7QUFDRVQsRUFBQUEsVUFBVSxFQUFFUztBQTFEZDtlQTZEZWhCLEkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgbWVtbywgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGN4IGZyb20gJ2NsYXNzbmFtZXMnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgQm94IGZyb20gJ3VpLWJveCdcbmltcG9ydCB7IHVzZVN0eWxlQ29uZmlnIH0gZnJvbSAnLi4vLi4vaG9va3MnXG5cbmNvbnN0IHBzZXVkb1NlbGVjdG9ycyA9IHtcbiAgX2hvdmVyOiAnJjpob3ZlcicsXG4gIF9hY3RpdmU6ICcmOmFjdGl2ZSdcbn1cblxuY29uc3QgaW50ZXJuYWxTdHlsZXMgPSB7fVxuXG5jb25zdCBQYW5lID0gbWVtbyhcbiAgZm9yd2FyZFJlZihmdW5jdGlvbiBQYW5lKHByb3BzLCByZWYpIHtcbiAgICBjb25zdCB7XG4gICAgICBhY3RpdmVFbGV2YXRpb24sXG5cbiAgICAgIC8vIFB1bGxlZCBvdXQgb2YgcHJvcHMgYmVjYXVzZSB3ZSdsbCBnZXQgdGhlbSBmcm9tIHRoZSBzdHlsZSBob29rXG4gICAgICBiYWNrZ3JvdW5kLFxuICAgICAgYm9yZGVyLFxuICAgICAgYm9yZGVyQm90dG9tLFxuICAgICAgYm9yZGVyTGVmdCxcbiAgICAgIGJvcmRlclJpZ2h0LFxuICAgICAgYm9yZGVyVG9wLFxuICAgICAgY2xhc3NOYW1lLFxuICAgICAgZWxldmF0aW9uLFxuICAgICAgaG92ZXJFbGV2YXRpb24sXG5cbiAgICAgIC4uLnJlc3RQcm9wc1xuICAgIH0gPSBwcm9wc1xuXG4gICAgY29uc3QgeyBjbGFzc05hbWU6IHRoZW1lZENsYXNzTmFtZSwgLi4uc3R5bGVQcm9wcyB9ID0gdXNlU3R5bGVDb25maWcoXG4gICAgICAnUGFuZScsXG4gICAgICB7XG4gICAgICAgIGVsZXZhdGlvbixcbiAgICAgICAgaG92ZXJFbGV2YXRpb24sXG4gICAgICAgIGFjdGl2ZUVsZXZhdGlvbixcbiAgICAgICAgYmFja2dyb3VuZCxcbiAgICAgICAgYm9yZGVyLFxuICAgICAgICBib3JkZXJUb3AsXG4gICAgICAgIGJvcmRlclJpZ2h0LFxuICAgICAgICBib3JkZXJCb3R0b20sXG4gICAgICAgIGJvcmRlckxlZnRcbiAgICAgIH0sXG4gICAgICBwc2V1ZG9TZWxlY3RvcnMsXG4gICAgICBpbnRlcm5hbFN0eWxlc1xuICAgIClcblxuICAgIHJldHVybiA8Qm94IHJlZj17cmVmfSBjbGFzc05hbWU9e2N4KGNsYXNzTmFtZSwgdGhlbWVkQ2xhc3NOYW1lKX0gey4uLnN0eWxlUHJvcHN9IHsuLi5yZXN0UHJvcHN9IC8+XG4gIH0pXG4pXG5cbmNvbnN0IFN0cmluZ0FuZEJvb2xQcm9wVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5ib29sXSlcblxuUGFuZS5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBDb21wb3NlcyB0aGUgQm94IGNvbXBvbmVudCBhcyB0aGUgYmFzZS5cbiAgICovXG4gIC4uLkJveC5wcm9wVHlwZXMsXG5cbiAgLyoqXG4gICAqIEJhY2tncm91bmQgcHJvcGVydHkuXG4gICAqIGB0aW50MWAsIGB0aW50MmAgZXRjLiBmcm9tIGB0aGVtZS5jb2xvcnNgIGFyZSBhdmFpbGFibGUuXG4gICAqL1xuICBiYWNrZ3JvdW5kOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBFbGV2YXRpb24gb2YgdGhlIFBhbmUuXG4gICAqIFZhbHVlczogMCwgMSwgMiwgMywgNC5cbiAgICovXG4gIGVsZXZhdGlvbjogUHJvcFR5cGVzLm9uZU9mKFswLCAxLCAyLCAzLCA0XSksXG5cbiAgLyoqXG4gICAqIEVsZXZhdGlvbiBvZiB0aGUgUGFuZSBvbiBob3Zlci4gTWlnaHQgZ2V0IGRlcHJlY2F0ZWQuXG4gICAqIFZhbHVlczogMCwgMSwgMiwgMywgNC5cbiAgICovXG4gIGhvdmVyRWxldmF0aW9uOiBQcm9wVHlwZXMub25lT2YoWzAsIDEsIDIsIDMsIDRdKSxcblxuICAvKipcbiAgICogRWxldmF0aW9uIG9mIHRoZSBQYW5lIG9uIGNsaWNrLiBNaWdodCBnZXQgZGVwcmVjYXRlZC5cbiAgICogVmFsdWVzOiAwLCAxLCAyLCAzLCA0LlxuICAgKi9cbiAgYWN0aXZlRWxldmF0aW9uOiBQcm9wVHlwZXMub25lT2YoWzAsIDEsIDIsIDMsIDRdKSxcblxuICAvKipcbiAgICogQ2FuIGJlIGEgZXhwbGljaXQgYm9yZGVyIHZhbHVlIG9yIGEgYm9vbGVhbi5cbiAgICogVmFsdWVzOiB0cnVlLCBtdXRlZCwgZGVmYXVsdC5cbiAgICovXG4gIGJvcmRlcjogU3RyaW5nQW5kQm9vbFByb3BUeXBlLFxuXG4gIC8qKlxuICAgKiBDYW4gYmUgYSBleHBsaWNpdCBib3JkZXIgdmFsdWUgb3IgYSBib29sZWFuLlxuICAgKiBWYWx1ZXM6IHRydWUsIGV4dHJhTXV0ZWQsIG11dGVkLCBkZWZhdWx0LlxuICAgKi9cbiAgYm9yZGVyVG9wOiBTdHJpbmdBbmRCb29sUHJvcFR5cGUsXG5cbiAgLyoqXG4gICAqIENhbiBiZSBhIGV4cGxpY2l0IGJvcmRlciB2YWx1ZSBvciBhIGJvb2xlYW4uXG4gICAqIFZhbHVlczogdHJ1ZSwgZXh0cmFNdXRlZCwgbXV0ZWQsIGRlZmF1bHQuXG4gICAqL1xuICBib3JkZXJSaWdodDogU3RyaW5nQW5kQm9vbFByb3BUeXBlLFxuXG4gIC8qKlxuICAgKiBDYW4gYmUgYSBleHBsaWNpdCBib3JkZXIgdmFsdWUgb3IgYSBib29sZWFuLlxuICAgKiBWYWx1ZXM6IHRydWUsIGV4dHJhTXV0ZWQsIG11dGVkLCBkZWZhdWx0LlxuICAgKi9cbiAgYm9yZGVyQm90dG9tOiBTdHJpbmdBbmRCb29sUHJvcFR5cGUsXG5cbiAgLyoqXG4gICAqIENhbiBiZSBhIGV4cGxpY2l0IGJvcmRlciB2YWx1ZSBvciBhIGJvb2xlYW4uXG4gICAqIFZhbHVlczogdHJ1ZSwgZXh0cmFNdXRlZCwgbXV0ZWQsIGRlZmF1bHQuXG4gICAqL1xuICBib3JkZXJMZWZ0OiBTdHJpbmdBbmRCb29sUHJvcFR5cGVcbn1cblxuZXhwb3J0IGRlZmF1bHQgUGFuZVxuIl19