"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _badges = require("../../badges");

var _icons = require("../../icons");

var _scales = require("../../scales");

var _excluded = ["children", "isRemovable", "onRemove"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Tag = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function Tag(props, ref) {
  var children = props.children,
      isRemovable = props.isRemovable,
      onRemove = props.onRemove,
      restProps = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var badgeStyles = {
    alignItems: 'center',
    display: 'inline-flex',
    fontWeight: 400,
    borderRadius: 4,
    paddingX: 8,
    paddingY: 6,
    marginTop: 0,
    marginBottom: 0,
    textTransform: 'none'
  };

  if (isRemovable) {
    badgeStyles.paddingRight = (0, _scales.minorScale)(1);
  }

  return /*#__PURE__*/_react["default"].createElement(_badges.Badge, (0, _extends2["default"])({
    ref: ref,
    isInteractive: true
  }, badgeStyles, restProps), children, isRemovable && /*#__PURE__*/_react["default"].createElement(_icons.CrossIcon, {
    marginLeft: (0, _scales.minorScale)(1),
    onClick: onRemove,
    size: (0, _scales.minorScale)(3)
  }));
}));
Tag.propTypes = {
  /** The tag content */
  children: _propTypes["default"].node,

  /**
   * Callback invoked when the removal icon is clicked.
   * (event) => void
   */
  onRemove: _propTypes["default"].func,

  /** Whether or not the tag can be removed. */
  isRemovable: _propTypes["default"].bool
};
var _default = Tag;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWctaW5wdXQvc3JjL1RhZy5qcyJdLCJuYW1lcyI6WyJUYWciLCJwcm9wcyIsInJlZiIsImNoaWxkcmVuIiwiaXNSZW1vdmFibGUiLCJvblJlbW92ZSIsInJlc3RQcm9wcyIsImJhZGdlU3R5bGVzIiwiYWxpZ25JdGVtcyIsImRpc3BsYXkiLCJmb250V2VpZ2h0IiwiYm9yZGVyUmFkaXVzIiwicGFkZGluZ1giLCJwYWRkaW5nWSIsIm1hcmdpblRvcCIsIm1hcmdpbkJvdHRvbSIsInRleHRUcmFuc2Zvcm0iLCJwYWRkaW5nUmlnaHQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJub2RlIiwiZnVuYyIsImJvb2wiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLEdBQUcsZ0JBQUcsK0JBQ1YsdUJBQVcsU0FBU0EsR0FBVCxDQUFhQyxLQUFiLEVBQW9CQyxHQUFwQixFQUF5QjtBQUNsQyxNQUFRQyxRQUFSLEdBQTBERixLQUExRCxDQUFRRSxRQUFSO0FBQUEsTUFBa0JDLFdBQWxCLEdBQTBESCxLQUExRCxDQUFrQkcsV0FBbEI7QUFBQSxNQUErQkMsUUFBL0IsR0FBMERKLEtBQTFELENBQStCSSxRQUEvQjtBQUFBLE1BQTRDQyxTQUE1Qyw2Q0FBMERMLEtBQTFEO0FBRUEsTUFBTU0sV0FBVyxHQUFHO0FBQ2xCQyxJQUFBQSxVQUFVLEVBQUUsUUFETTtBQUVsQkMsSUFBQUEsT0FBTyxFQUFFLGFBRlM7QUFHbEJDLElBQUFBLFVBQVUsRUFBRSxHQUhNO0FBSWxCQyxJQUFBQSxZQUFZLEVBQUUsQ0FKSTtBQUtsQkMsSUFBQUEsUUFBUSxFQUFFLENBTFE7QUFNbEJDLElBQUFBLFFBQVEsRUFBRSxDQU5RO0FBT2xCQyxJQUFBQSxTQUFTLEVBQUUsQ0FQTztBQVFsQkMsSUFBQUEsWUFBWSxFQUFFLENBUkk7QUFTbEJDLElBQUFBLGFBQWEsRUFBRTtBQVRHLEdBQXBCOztBQVlBLE1BQUlaLFdBQUosRUFBaUI7QUFDZkcsSUFBQUEsV0FBVyxDQUFDVSxZQUFaLEdBQTJCLHdCQUFXLENBQVgsQ0FBM0I7QUFDRDs7QUFFRCxzQkFDRSxnQ0FBQyxhQUFEO0FBQU8sSUFBQSxHQUFHLEVBQUVmLEdBQVo7QUFBaUIsSUFBQSxhQUFhO0FBQTlCLEtBQW1DSyxXQUFuQyxFQUFvREQsU0FBcEQsR0FDR0gsUUFESCxFQUVHQyxXQUFXLGlCQUFJLGdDQUFDLGdCQUFEO0FBQVcsSUFBQSxVQUFVLEVBQUUsd0JBQVcsQ0FBWCxDQUF2QjtBQUFzQyxJQUFBLE9BQU8sRUFBRUMsUUFBL0M7QUFBeUQsSUFBQSxJQUFJLEVBQUUsd0JBQVcsQ0FBWDtBQUEvRCxJQUZsQixDQURGO0FBTUQsQ0F6QkQsQ0FEVSxDQUFaO0FBNkJBTCxHQUFHLENBQUNrQixTQUFKLEdBQWdCO0FBQ2Q7QUFDQWYsRUFBQUEsUUFBUSxFQUFFZ0Isc0JBQVVDLElBRk47O0FBSWQ7QUFDRjtBQUNBO0FBQ0E7QUFDRWYsRUFBQUEsUUFBUSxFQUFFYyxzQkFBVUUsSUFSTjs7QUFTZDtBQUNBakIsRUFBQUEsV0FBVyxFQUFFZSxzQkFBVUc7QUFWVCxDQUFoQjtlQWFldEIsRyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG92ZXJ2aWV3IFRhZ0lucHV0IGFjY2VwdHMgbXVsdGlwbGUgdmFsdWVzIHRoYXQgY2FuIGJlIGluZGl2aWR1YWxseSByZW1vdmVkXG4gKi9cbmltcG9ydCBSZWFjdCwgeyBtZW1vLCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBCYWRnZSB9IGZyb20gJy4uLy4uL2JhZGdlcydcbmltcG9ydCB7IENyb3NzSWNvbiB9IGZyb20gJy4uLy4uL2ljb25zJ1xuaW1wb3J0IHsgbWlub3JTY2FsZSB9IGZyb20gJy4uLy4uL3NjYWxlcydcblxuY29uc3QgVGFnID0gbWVtbyhcbiAgZm9yd2FyZFJlZihmdW5jdGlvbiBUYWcocHJvcHMsIHJlZikge1xuICAgIGNvbnN0IHsgY2hpbGRyZW4sIGlzUmVtb3ZhYmxlLCBvblJlbW92ZSwgLi4ucmVzdFByb3BzIH0gPSBwcm9wc1xuXG4gICAgY29uc3QgYmFkZ2VTdHlsZXMgPSB7XG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgIGRpc3BsYXk6ICdpbmxpbmUtZmxleCcsXG4gICAgICBmb250V2VpZ2h0OiA0MDAsXG4gICAgICBib3JkZXJSYWRpdXM6IDQsXG4gICAgICBwYWRkaW5nWDogOCxcbiAgICAgIHBhZGRpbmdZOiA2LFxuICAgICAgbWFyZ2luVG9wOiAwLFxuICAgICAgbWFyZ2luQm90dG9tOiAwLFxuICAgICAgdGV4dFRyYW5zZm9ybTogJ25vbmUnXG4gICAgfVxuXG4gICAgaWYgKGlzUmVtb3ZhYmxlKSB7XG4gICAgICBiYWRnZVN0eWxlcy5wYWRkaW5nUmlnaHQgPSBtaW5vclNjYWxlKDEpXG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxCYWRnZSByZWY9e3JlZn0gaXNJbnRlcmFjdGl2ZSB7Li4uYmFkZ2VTdHlsZXN9IHsuLi5yZXN0UHJvcHN9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIHtpc1JlbW92YWJsZSAmJiA8Q3Jvc3NJY29uIG1hcmdpbkxlZnQ9e21pbm9yU2NhbGUoMSl9IG9uQ2xpY2s9e29uUmVtb3ZlfSBzaXplPXttaW5vclNjYWxlKDMpfSAvPn1cbiAgICAgIDwvQmFkZ2U+XG4gICAgKVxuICB9KVxuKVxuXG5UYWcucHJvcFR5cGVzID0ge1xuICAvKiogVGhlIHRhZyBjb250ZW50ICovXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgaW52b2tlZCB3aGVuIHRoZSByZW1vdmFsIGljb24gaXMgY2xpY2tlZC5cbiAgICogKGV2ZW50KSA9PiB2b2lkXG4gICAqL1xuICBvblJlbW92ZTogUHJvcFR5cGVzLmZ1bmMsXG4gIC8qKiBXaGV0aGVyIG9yIG5vdCB0aGUgdGFnIGNhbiBiZSByZW1vdmVkLiAqL1xuICBpc1JlbW92YWJsZTogUHJvcFR5cGVzLmJvb2xcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFnXG4iXX0=