"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _Alert = _interopRequireDefault(require("../src/Alert"));

describe('<Alert />', function () {
  it('basic snapshot', function () {
    var component = /*#__PURE__*/_react["default"].createElement(_Alert["default"], {
      title: "A simple general message"
    });

    var tree = _reactTestRenderer["default"].create(component).toJSON();

    expect(tree).toMatchSnapshot();
  });
  it('outputs title', function () {
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Alert["default"], {
      title: "Test title"
    }));
    expect(_react2.screen.getByText('Test title')).toBeTruthy();
  });
  it('outputs children', function () {
    (0, _react2.render)( /*#__PURE__*/_react["default"].createElement(_Alert["default"], {
      title: "Test title"
    }, "Test content"));
    expect(_react2.screen.getByText('Test content')).toBeTruthy();
  });
  it('intent snapshot', function () {
    var component = /*#__PURE__*/_react["default"].createElement(_Alert["default"], {
      title: "Test title",
      intent: "danger"
    });

    var tree = _reactTestRenderer["default"].create(component).toJSON();

    expect(tree).toMatchSnapshot();
  });
  it('appearance snapshot', function () {
    var component = /*#__PURE__*/_react["default"].createElement(_Alert["default"], {
      title: "Test title",
      appearance: "card"
    });

    var tree = _reactTestRenderer["default"].create(component).toJSON();

    expect(tree).toMatchSnapshot();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hbGVydC9fX3Rlc3RzX18vQWxlcnQudGVzdC5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiY29tcG9uZW50IiwidHJlZSIsInJlbmRlcmVyIiwiY3JlYXRlIiwidG9KU09OIiwiZXhwZWN0IiwidG9NYXRjaFNuYXBzaG90Iiwic2NyZWVuIiwiZ2V0QnlUZXh0IiwidG9CZVRydXRoeSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBQSxRQUFRLENBQUMsV0FBRCxFQUFjLFlBQU07QUFDMUJDLEVBQUFBLEVBQUUsQ0FBQyxnQkFBRCxFQUFtQixZQUFNO0FBQ3pCLFFBQU1DLFNBQVMsZ0JBQUcsZ0NBQUMsaUJBQUQ7QUFBTyxNQUFBLEtBQUssRUFBQztBQUFiLE1BQWxCOztBQUNBLFFBQU1DLElBQUksR0FBR0MsOEJBQVNDLE1BQVQsQ0FBZ0JILFNBQWhCLEVBQTJCSSxNQUEzQixFQUFiOztBQUNBQyxJQUFBQSxNQUFNLENBQUNKLElBQUQsQ0FBTixDQUFhSyxlQUFiO0FBQ0QsR0FKQyxDQUFGO0FBTUFQLEVBQUFBLEVBQUUsQ0FBQyxlQUFELEVBQWtCLFlBQU07QUFDeEIsc0NBQU8sZ0NBQUMsaUJBQUQ7QUFBTyxNQUFBLEtBQUssRUFBQztBQUFiLE1BQVA7QUFDQU0sSUFBQUEsTUFBTSxDQUFDRSxlQUFPQyxTQUFQLENBQWlCLFlBQWpCLENBQUQsQ0FBTixDQUF1Q0MsVUFBdkM7QUFDRCxHQUhDLENBQUY7QUFLQVYsRUFBQUEsRUFBRSxDQUFDLGtCQUFELEVBQXFCLFlBQU07QUFDM0Isc0NBQU8sZ0NBQUMsaUJBQUQ7QUFBTyxNQUFBLEtBQUssRUFBQztBQUFiLHNCQUFQO0FBQ0FNLElBQUFBLE1BQU0sQ0FBQ0UsZUFBT0MsU0FBUCxDQUFpQixjQUFqQixDQUFELENBQU4sQ0FBeUNDLFVBQXpDO0FBQ0QsR0FIQyxDQUFGO0FBS0FWLEVBQUFBLEVBQUUsQ0FBQyxpQkFBRCxFQUFvQixZQUFNO0FBQzFCLFFBQU1DLFNBQVMsZ0JBQUcsZ0NBQUMsaUJBQUQ7QUFBTyxNQUFBLEtBQUssRUFBQyxZQUFiO0FBQTBCLE1BQUEsTUFBTSxFQUFDO0FBQWpDLE1BQWxCOztBQUNBLFFBQU1DLElBQUksR0FBR0MsOEJBQVNDLE1BQVQsQ0FBZ0JILFNBQWhCLEVBQTJCSSxNQUEzQixFQUFiOztBQUNBQyxJQUFBQSxNQUFNLENBQUNKLElBQUQsQ0FBTixDQUFhSyxlQUFiO0FBQ0QsR0FKQyxDQUFGO0FBTUFQLEVBQUFBLEVBQUUsQ0FBQyxxQkFBRCxFQUF3QixZQUFNO0FBQzlCLFFBQU1DLFNBQVMsZ0JBQUcsZ0NBQUMsaUJBQUQ7QUFBTyxNQUFBLEtBQUssRUFBQyxZQUFiO0FBQTBCLE1BQUEsVUFBVSxFQUFDO0FBQXJDLE1BQWxCOztBQUNBLFFBQU1DLElBQUksR0FBR0MsOEJBQVNDLE1BQVQsQ0FBZ0JILFNBQWhCLEVBQTJCSSxNQUEzQixFQUFiOztBQUNBQyxJQUFBQSxNQUFNLENBQUNKLElBQUQsQ0FBTixDQUFhSyxlQUFiO0FBQ0QsR0FKQyxDQUFGO0FBS0QsQ0E1Qk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHJlbmRlciwgc2NyZWVuIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCdcbmltcG9ydCByZW5kZXJlciBmcm9tICdyZWFjdC10ZXN0LXJlbmRlcmVyJ1xuaW1wb3J0IEFsZXJ0IGZyb20gJy4uL3NyYy9BbGVydCdcblxuZGVzY3JpYmUoJzxBbGVydCAvPicsICgpID0+IHtcbiAgaXQoJ2Jhc2ljIHNuYXBzaG90JywgKCkgPT4ge1xuICAgIGNvbnN0IGNvbXBvbmVudCA9IDxBbGVydCB0aXRsZT1cIkEgc2ltcGxlIGdlbmVyYWwgbWVzc2FnZVwiIC8+XG4gICAgY29uc3QgdHJlZSA9IHJlbmRlcmVyLmNyZWF0ZShjb21wb25lbnQpLnRvSlNPTigpXG4gICAgZXhwZWN0KHRyZWUpLnRvTWF0Y2hTbmFwc2hvdCgpXG4gIH0pXG5cbiAgaXQoJ291dHB1dHMgdGl0bGUnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxBbGVydCB0aXRsZT1cIlRlc3QgdGl0bGVcIiAvPilcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnVGVzdCB0aXRsZScpKS50b0JlVHJ1dGh5KClcbiAgfSlcblxuICBpdCgnb3V0cHV0cyBjaGlsZHJlbicsICgpID0+IHtcbiAgICByZW5kZXIoPEFsZXJ0IHRpdGxlPVwiVGVzdCB0aXRsZVwiPlRlc3QgY29udGVudDwvQWxlcnQ+KVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdUZXN0IGNvbnRlbnQnKSkudG9CZVRydXRoeSgpXG4gIH0pXG5cbiAgaXQoJ2ludGVudCBzbmFwc2hvdCcsICgpID0+IHtcbiAgICBjb25zdCBjb21wb25lbnQgPSA8QWxlcnQgdGl0bGU9XCJUZXN0IHRpdGxlXCIgaW50ZW50PVwiZGFuZ2VyXCIgLz5cbiAgICBjb25zdCB0cmVlID0gcmVuZGVyZXIuY3JlYXRlKGNvbXBvbmVudCkudG9KU09OKClcbiAgICBleHBlY3QodHJlZSkudG9NYXRjaFNuYXBzaG90KClcbiAgfSlcblxuICBpdCgnYXBwZWFyYW5jZSBzbmFwc2hvdCcsICgpID0+IHtcbiAgICBjb25zdCBjb21wb25lbnQgPSA8QWxlcnQgdGl0bGU9XCJUZXN0IHRpdGxlXCIgYXBwZWFyYW5jZT1cImNhcmRcIiAvPlxuICAgIGNvbnN0IHRyZWUgPSByZW5kZXJlci5jcmVhdGUoY29tcG9uZW50KS50b0pTT04oKVxuICAgIGV4cGVjdCh0cmVlKS50b01hdGNoU25hcHNob3QoKVxuICB9KVxufSlcbiJdfQ==